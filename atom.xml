<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Honye&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.honye.com/"/>
  <updated>2019-09-24T11:45:45.323Z</updated>
  <id>http://www.honye.com/</id>
  
  <author>
    <name>Honye</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>体验 GitHub Actions 自动部署 Hexo 博客</title>
    <link href="http://www.honye.com/posts/eaaf4b45.html"/>
    <id>http://www.honye.com/posts/eaaf4b45.html</id>
    <published>2019-09-05T00:00:00.000Z</published>
    <updated>2019-09-24T11:45:45.323Z</updated>
    
    <content type="html"><![CDATA[<p>博客原先是使用 <a href="https://travis-ci.org/" title="Travis CI" target="_blank" rel="noopener">Travis</a> 实现自动部署的，现 GitHub 有个 <a href="https://github.com/features/actions" title="GitHub Actions" target="_blank" rel="noopener">Actions</a> 体验 CI 功能就试试。项目中还保留着 Travis 配置，只是关掉了，不能使用 Actions 的是可以使用 Travis。</p><blockquote><p>GitHub 操作可让您灵活地构建自动化的软件部署生命周期工作流程。您可以编写个别任务、调用的操作，以及结合它们创建自定义工作流程。 工作流程是您可以在仓库中创建的自定义自动化流程，用于在 GitHub 上构建、测试、封装、发行或部署任何代码项目。</p></blockquote><p>GitHub Actions 目前采用 <a href="yaml">YAML</a> 语法，还处于体验版，何时能正式上线就不知道了。毕竟 <a href="package">GitHub Package Registry</a> 到现在还没上线呢。</p><h2 id="新建-Actions"><a href="#新建-Actions" class="headerlink" title="新建 Actions"></a>新建 Actions</h2><h3 id="Secrets"><a href="#Secrets" class="headerlink" title="Secrets"></a>Secrets</h3><p>在 GitHub 设置生成一个 <a href="https://github.com/settings/tokens/new" title="New Token" target="_blank" rel="noopener">Token</a>，需要有仓库的读写权限。打开项目设置，增加 <strong>Secrets</strong> <code>GH_TOKEN</code> 保存刚刚生成的 Token。Actions 默认有个 secret <code>GITHUB_TOKEN</code>，试了下不成功。</p><h3 id="Workflow"><a href="#Workflow" class="headerlink" title="Workflow"></a>Workflow</h3><p>新建 Workflow 文件必须在 <code>.github/workflows</code> 目录中，采用 <a href="http://www.ruanyifeng.com/blog/2016/07/yaml.html" title="YAML" target="_blank" rel="noopener">YAML</a> 语法，名字随意，我命名为 <code>deploy.yml</code>。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Hexo</span> <span class="string">deployer</span> <span class="comment"># Actions 名字</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span> <span class="comment"># 触发条件</span></span><br><span class="line"><span class="attr">  push:</span></span><br><span class="line"><span class="attr">    branches:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">hexo-config</span> <span class="comment"># 仅向 hexo-config 分支 push 时触发</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line"><span class="attr">  build:</span> <span class="comment"># job id</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">Build</span> <span class="string">and</span> <span class="string">publish</span> <span class="comment"># job 名，不写默认使用 job id</span></span><br><span class="line"><span class="attr">    runs-on:</span> <span class="string">ubuntu-latest</span> <span class="comment"># 运行环境，可选 ubuntu-latest, ubuntu-18.04, ubuntu-16.04, windows-latest, windows-2019, windows-2016, macOS-latest, macOS-10.14</span></span><br><span class="line"></span><br><span class="line"><span class="attr">    steps:</span></span><br><span class="line"><span class="attr">      - uses:</span> <span class="string">actions/checkout@v1</span></span><br><span class="line"></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">Use</span> <span class="string">Node.js</span> <span class="number">10.</span><span class="string">x</span></span><br><span class="line"><span class="attr">        uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line"><span class="attr">        with:</span></span><br><span class="line"><span class="attr">          node-version:</span> <span class="number">10.</span><span class="string">x</span></span><br><span class="line"></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">Setup</span> <span class="string">hexo</span> <span class="string">env</span></span><br><span class="line"><span class="attr">        run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          npm install hexo-cli -g</span></span><br><span class="line"><span class="string">          npm install</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span><span class="attr">      - name:</span> <span class="string">Generate</span> <span class="string">public</span> <span class="string">files</span></span><br><span class="line"><span class="attr">        run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          hexo clean</span></span><br><span class="line"><span class="string">          hexo g  </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span><span class="attr">      - name:</span> <span class="string">Deploy</span></span><br><span class="line"><span class="attr">        env:</span></span><br><span class="line"><span class="attr">        GH_REF:</span> <span class="string">github.com/Honye/Honye.github.io.git</span></span><br><span class="line"><span class="attr">        GH_TOKEN:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.GH_TOKEN</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="attr">        run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          git config --global user.name "Honye"</span></span><br><span class="line"><span class="string">          git config --global user.email "hongye.jun@qq.com"</span></span><br><span class="line"><span class="string">          git clone https://$&#123;GH_REF&#125; .deploy_git</span></span><br><span class="line"><span class="string">          cd .deploy_git</span></span><br><span class="line"><span class="string">          git checkout master</span></span><br><span class="line"><span class="string">          cd ../</span></span><br><span class="line"><span class="string">          mv .deploy_git/.git/ ./public/</span></span><br><span class="line"><span class="string">          cd ./public/</span></span><br><span class="line"><span class="string">          git add .</span></span><br><span class="line"><span class="string">          git commit -m "CI built at `date +"%Y-%m-%d %H:%M:%S"`"</span></span><br><span class="line"><span class="string">          git push --force --quiet "https://$&#123;GH_TOKEN&#125;@$&#123;GH_REF&#125;" master:master</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;博客原先是使用 &lt;a href=&quot;https://travis-ci.org/&quot; title=&quot;Travis CI&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Travis&lt;/a&gt; 实现自动部署的，现 GitHub 有个 &lt;a href=&quot;https:/
      
    
    </summary>
    
    
    
      <category term="Hexo" scheme="http://www.honye.com/tags/Hexo/"/>
    
      <category term="GitHub" scheme="http://www.honye.com/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>Postman 使用之 Scripts</title>
    <link href="http://www.honye.com/posts/aa64b9d1.html"/>
    <id>http://www.honye.com/posts/aa64b9d1.html</id>
    <published>2018-11-25T22:02:53.000Z</published>
    <updated>2019-09-24T11:45:45.319Z</updated>
    
    <content type="html"><![CDATA[<p>在我们日常开发中经常需要用到登录授权，大多接口都需要携带 Auth 信息。在 Postman 中调试接口时发送登录请求后再复制粘贴 Token，麻烦。Postman 的 Scripts 功能可以较好的解决这个问题。</p><p>官文：<a href="https://learning.getpostman.com/docs/postman/scripts/intro_to_scripts/" target="_blank" rel="noopener">https://learning.getpostman.com/docs/postman/scripts/intro_to_scripts/</a></p><a id="more"></a><h2 id="Test-scripts"><a href="#Test-scripts" class="headerlink" title="Test scripts"></a>Test scripts</h2><p>Test scripts 是在请求结束后运行的 JavaScript 脚本。在登录请求结束后将 Token 设置到<a href="https://learning.getpostman.com/docs/postman/environments_and_globals/intro_to_environments_and_globals" target="_blank" rel="noopener">环境变量</a>中，在需要 Auth 的接口中取用变量。</p><h3 id="pm-test"><a href="#pm-test" class="headerlink" title="pm.test"></a>pm.test</h3><p><code>pm.test(testName:String, specFunction:Function):Function</code> 可以用来确认 Response 是否和预期返回的一致。</p><table><thead><tr><th align="left">param</th><th align="left">description</th></tr></thead><tbody><tr><td align="left">testName</td><td align="left">测试名，在 <strong>Test Results</strong> 面板中显示</td></tr><tr><td align="left">specFunction</td><td align="left">测试执行函数</td></tr></tbody></table><p>首先确认 Request 是否请求成功，HTTP 状态码为 200。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pm.test(<span class="string">"Status code is 200"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    pm.response.to.have.status(<span class="number">200</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>接着判断 Response 是否如期返回 token。如果有返回就设置到环境变量中，如果没有就不管了。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">pm.test(<span class="string">"Response has token"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    pm.response.to.have.jsonBody(<span class="string">"token"</span>);</span><br><span class="line">    <span class="comment">// 如果上面断言不通过，下面的语句不会执行</span></span><br><span class="line">    <span class="keyword">const</span> token = pm.response.json().token;</span><br><span class="line">    pm.environment.set(<span class="string">"token"</span>, token);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>合并。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">pm.test(<span class="string">"Status code is 200"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    pm.response.to.have.status(<span class="number">200</span>);</span><br><span class="line">    pm.test(<span class="string">'Response has token'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        pm.response.to.have.jsonBody(<span class="string">"token"</span>);</span><br><span class="line">        <span class="keyword">const</span> token = pm.response.json().token;</span><br><span class="line">        pm.environment.set(<span class="string">"token"</span>, token);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><img src="../images/20181118172735.png" alt="Test Results (1)"></p><p><img src="../images/20181118172817.png" alt="Test Results (2)"></p><h2 id="Variables"><a href="#Variables" class="headerlink" title="Variables"></a>Variables</h2><p>经过上述的 Test scripts 已经将登录请求得到的 token 设置到了环境变量中。现在在需要验证 Auth 信息的请求中引用变量，以 Authorization为例。</p><p>变量引用有两种方式，一种是通过 <code><span>{</span>{variableName}}</code> 的形式访问，这种形式只能在 Request Builder 中使用，也就是只能在 URL、Params、Authorzation、Headers、Body 中使用，另一种是通过 Scripts 访问，如上述用到的 <code>pm.enviroment.set(variableName:String, variableValue:String)</code>。更多查阅官文：<a href="https://learning.getpostman.com/docs/postman/environments_and_globals/variables" target="_blank" rel="noopener">https://learning.getpostman.com/docs/postman/environments_and_globals/variables</a></p><p>Authorization 🌰：</p><p><img src="../images/20181118172846.png" alt="Variables demo"></p><h2 id="More"><a href="#More" class="headerlink" title="More"></a>More</h2><p>Postman 的功能很强大，灵活应用可以很好提高工作效率和质量。比如灵活使用 <a href="https://learning.getpostman.com/docs/postman/environments_and_globals/intro_to_environments_and_globals" target="_blank" rel="noopener">Environment</a> 可以方便的在测试和生产环境切换，使用 <a href="https://learning.getpostman.com/docs/postman/scripts/intro_to_scripts" target="_blank" rel="noopener">Scripts</a> 可以实现依次发送多个请求，或者 token 失效后自动刷新 token。活学活用查阅官文：<a href="https://learning.getpostman.com/docs" target="_blank" rel="noopener">https://learning.getpostman.com/docs</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在我们日常开发中经常需要用到登录授权，大多接口都需要携带 Auth 信息。在 Postman 中调试接口时发送登录请求后再复制粘贴 Token，麻烦。Postman 的 Scripts 功能可以较好的解决这个问题。&lt;/p&gt;
&lt;p&gt;官文：&lt;a href=&quot;https://learning.getpostman.com/docs/postman/scripts/intro_to_scripts/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://learning.getpostman.com/docs/postman/scripts/intro_to_scripts/&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>React Navigation 集成 Redux</title>
    <link href="http://www.honye.com/posts/9aae91d8.html"/>
    <id>http://www.honye.com/posts/9aae91d8.html</id>
    <published>2017-12-07T21:54:53.000Z</published>
    <updated>2019-09-24T11:45:45.323Z</updated>
    
    <content type="html"><![CDATA[<p>更新时间：2018-03-03</p><p>修复因 React Navigation 更新引起的 <font color="red"><code>addListener is not  a function</code></font> 的问题。</p><p><a href="https://reactnavigation.org/docs/intro/" target="_blank" rel="noopener">react-navigation</a> 是 React Native 官方推荐的导航库。<a href="https://redux.js.org/" target="_blank" rel="noopener">redux</a> 是一个状态容器，redux 的简单使用可参考阮一峰的 <a href="http://www.ruanyifeng.com/blog/2016/09/redux_tutorial_part_one_basic_usages.html" target="_blank" rel="noopener">Redux 入门教程</a>，现在网上也有很多中文文档。</p><p>在 React Navigation 最新版本中需要添加 <code>react-navigation-redux-helpers</code> 包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ yarn add react-native-navigation-redux-helpers</span><br><span class="line"><span class="comment"># 或者 npm install --save react-native-navigation-redux-helpers</span></span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="首先写-redux-helper-工具-redux-js"><a href="#首先写-redux-helper-工具-redux-js" class="headerlink" title="首先写 redux helper 工具 redux.js"></a>首先写 redux helper 工具 <code>redux.js</code></h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">    createReactNavigationReduxMiddleware,</span><br><span class="line">    createReduxBoundAddListener</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">'react-navigation-redux-helpers'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注意: createReactNavigationReduxMiddleware 必须在 createReduxBoundAddListener 之前执行</span></span><br><span class="line"><span class="keyword">const</span> middleware = createReactNavigationReduxMiddleware(<span class="string">'root'</span>, state =&gt; state.nav,);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> addListener = createReduxBoundAddListener(<span class="string">'root'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123;</span><br><span class="line">    middleware,</span><br><span class="line">    addListener</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="首先写一个-navigator"><a href="#首先写一个-navigator" class="headerlink" title="首先写一个 navigator"></a>首先写一个 navigator</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> AppNavigator = StackNavigator(&#123;</span><br><span class="line">    Home: &#123; <span class="attr">screen</span>: HomeTab &#125;,  <span class="comment">// 这是一个 TabNavigator</span></span><br><span class="line">    Details: &#123; <span class="attr">screen</span>: DetailPage &#125;,  <span class="comment">// 简单的页面</span></span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><p>集成 Redux 主要含三部分：Store，Action，Reducer</p><p><img src="http://upload-images.jianshu.io/upload_images/3762216-ce7c29ca1d694ed5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="Redux"></p><h3 id="Action"><a href="#Action" class="headerlink" title="Action"></a>Action</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">getBanners</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="params">dispatch</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// request 是我自己封装的网络请求方法</span></span><br><span class="line">        request(&#123;</span><br><span class="line">            url: apis.BANNER  <span class="comment">// 常量 API 地址</span></span><br><span class="line">        &#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">            dispatch(&#123;</span><br><span class="line">                type: actionTypes.BANNER,  <span class="comment">// 常量行为类型</span></span><br><span class="line">                data: res</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Reducer"><a href="#Reducer" class="headerlink" title="Reducer"></a>Reducer</h3><ol><li><p>othersReducer.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 初始 state</span></span><br><span class="line"><span class="keyword">const</span> initState = &#123;</span><br><span class="line">    banners: [],</span><br><span class="line">    articles: [],</span><br><span class="line">    loading: <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span> <span class="title">discoveryData</span>(<span class="params">state=initState, action</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">switch</span>(action.type) &#123;</span><br><span class="line">        <span class="keyword">case</span> actionTypes.BANNER:</span><br><span class="line">            <span class="keyword">return</span> &#123;...state, <span class="attr">banners</span>:action.data, <span class="attr">loading</span>:<span class="literal">false</span>&#125;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> state;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>navReducer.js 用于导航</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; AppNavigator &#125; <span class="keyword">from</span> <span class="string">'../navigators/AppNavigator'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; NavigationActions &#125; <span class="keyword">from</span> <span class="string">'react-navigation'</span>;</span><br><span class="line"><span class="comment">// Home 是个 TabNavigator，在这里 firstAction 为 null，会导致后续程序会出错，所以自己手写了一个 action</span></span><br><span class="line"><span class="keyword">const</span> firstAction = AppNavigator.router.getActionForPathAndParams(<span class="string">'Home'</span>) || &#123;</span><br><span class="line">    type: <span class="string">'Navigation/NAVIGATE'</span>,</span><br><span class="line">    touteName: <span class="string">'Home'</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> initialNavState = AppNavigator.router.getStateForAction(firstAction);</span><br><span class="line"><span class="keyword">const</span> navReducer = <span class="function">(<span class="params">state = initialNavState, action</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> nextState = AppNavigator.router.getStateForAction(action, state);</span><br><span class="line">    <span class="keyword">return</span> nextState || state;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> navReducer;</span><br></pre></td></tr></table></figure></li></ol><p>在以前版本里，我是把 firstAction 和 initialNavState 注释掉了，如果不注释掉会在 getStateForAction 时报 <code>undefined</code> 错误<br><img src="http://upload-images.jianshu.io/upload_images/3762216-a738f6219e7475a0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/400" alt="undefined"><br>解决方案多种：<br>一种是将 TabNavigator 放在单纯的 Component 中作为 StackNavigator 的 screen，这样就可以使用 initialNavState了，弊端是不方便从其它页面跳转到  TabNavigator 的指定 Tab 页。<br>另一种就是我现在使用的方案了。<br>如果你有更好的解决方案请告诉我！！</p><p>在新版本中不再出现上述问题，而是出现代码中提到的 null 问题<br>3. 整合 Reducer</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; combineReducers &#125; <span class="keyword">from</span> <span class="string">'redux'</span>;</span><br><span class="line"><span class="keyword">import</span> navReducer <span class="keyword">from</span> <span class="string">'./navReducer'</span>;</span><br><span class="line"><span class="keyword">import</span> othersReducer <span class="keyword">from</span> <span class="string">'./othersReducer'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> AppReducer = combineReducers(&#123;</span><br><span class="line">    nav: navReducer,</span><br><span class="line">    othersReducer</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> AppReducer;</span><br></pre></td></tr></table></figure><h3 id="配置-Store"><a href="#配置-Store" class="headerlink" title="配置 Store"></a>配置 Store</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createStore, applyMiddleware &#125; <span class="keyword">from</span> <span class="string">'redux'</span>;</span><br><span class="line"><span class="keyword">import</span> thunkMiddleware <span class="keyword">from</span> <span class="string">'redux-thunk'</span>;  <span class="comment">// 中间件</span></span><br><span class="line"><span class="keyword">import</span> reducers <span class="keyword">from</span> <span class="string">'./../reducers'</span>;  <span class="comment">// 整合后的 Reducer</span></span><br><span class="line"><span class="keyword">import</span> &#123; middleware &#125; <span class="keyword">from</span> <span class="string">'./redux'</span>;  <span class="comment">// redux helper</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> configStore = applyMiddleware(thunkMiddleware, middleware)(createStore)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> configStore(reducers);</span><br></pre></td></tr></table></figure><h3 id="自定义-Navigator"><a href="#自定义-Navigator" class="headerlink" title="自定义 Navigator"></a>自定义 Navigator</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; connect &#125; <span class="keyword">from</span> <span class="string">'react-redux'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; addNavigationHelpers, NavigationActions &#125; <span class="keyword">from</span> <span class="string">'react-navigation'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; addListener &#125; <span class="keyword">from</span> <span class="string">'./redux'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AppWithNavigationState</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  componentDidMount() &#123;</span><br><span class="line">    BackHandler.addEventListener(<span class="string">'hardwareBackPress'</span>, <span class="keyword">this</span>.onBackPress)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  componentWillUnmount() &#123;</span><br><span class="line">    BackHandler.removeEventListener(<span class="string">'hardwareBackPress'</span>, <span class="keyword">this</span>.onBackPress)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  onBackPress = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; dispatch, nav &#125; = <span class="keyword">this</span>.props;</span><br><span class="line">    dispatch(NavigationActions.back())</span><br><span class="line">    <span class="keyword">return</span> !(nav.index===<span class="number">0</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;AppNavigator </span><br><span class="line">        navigation=&#123;addNavigationHelpers(&#123; </span><br><span class="line">          dispatch: <span class="keyword">this</span>.props.dispatch,</span><br><span class="line">          state: <span class="keyword">this</span>.props.nav,</span><br><span class="line">          addListener  <span class="comment">// 关键所在</span></span><br><span class="line">        &#125;)&#125; </span><br><span class="line">      /&gt;</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> mapStateToProps = <span class="function"><span class="params">state</span> =&gt;</span> (&#123;</span><br><span class="line">  nav: state.nav,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> connect(mapStateToProps)(AppWithNavigationState);</span><br></pre></td></tr></table></figure><h3 id="绑定到应用中"><a href="#绑定到应用中" class="headerlink" title="绑定到应用中"></a>绑定到应用中</h3><p>在入口文件中绑定 Redux 的 store 管理库</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Provider &#125; <span class="keyword">from</span> <span class="string">'react-redux'</span>;</span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">'./src/store'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;Provider store=&#123;store&#125;&gt;</span><br><span class="line">        &lt;AppWithNavigationState /&gt;</span><br><span class="line">      &lt;<span class="regexp">/Provider&gt;</span></span><br><span class="line"><span class="regexp">    );</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure><p>所有源码我已经放到了 GitHub <a href="https://github.com/Hongye567/react-native-mark" target="_blank" rel="noopener">查看源码</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;更新时间：2018-03-03&lt;/p&gt;
&lt;p&gt;修复因 React Navigation 更新引起的 &lt;font color=&quot;red&quot;&gt;&lt;code&gt;addListener is not  a function&lt;/code&gt;&lt;/font&gt; 的问题。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://reactnavigation.org/docs/intro/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;react-navigation&lt;/a&gt; 是 React Native 官方推荐的导航库。&lt;a href=&quot;https://redux.js.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;redux&lt;/a&gt; 是一个状态容器，redux 的简单使用可参考阮一峰的 &lt;a href=&quot;http://www.ruanyifeng.com/blog/2016/09/redux_tutorial_part_one_basic_usages.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Redux 入门教程&lt;/a&gt;，现在网上也有很多中文文档。&lt;/p&gt;
&lt;p&gt;在 React Navigation 最新版本中需要添加 &lt;code&gt;react-navigation-redux-helpers&lt;/code&gt; 包&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ yarn add react-native-navigation-redux-helpers&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 或者 npm install --save react-native-navigation-redux-helpers&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="React Native" scheme="http://www.honye.com/tags/React-Native/"/>
    
      <category term="Redux" scheme="http://www.honye.com/tags/Redux/"/>
    
  </entry>
  
  <entry>
    <title>React Native 集成极光推送 jpush-react-native</title>
    <link href="http://www.honye.com/posts/9437166e.html"/>
    <id>http://www.honye.com/posts/9437166e.html</id>
    <published>2017-06-22T21:35:43.000Z</published>
    <updated>2019-09-24T11:45:45.323Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p><a href="https://github.com/jpush/jpush-react-native" target="_blank" rel="noopener">jpush-react-native</a> 是极光推送官方开发的 React Native 版本插件，可以快速集成推送功能。现在最新版本的 JPush SDK 分离了 JPush 及 JCore，让开发者可以分开集成 JMessage 及 JPush（以前 JMessage 包含了 JPush）。</p><p>我没有 mac 设备，所以只说 Android 的配置。</p><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>打开终端，进入项目文件夹，执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ npm install jpush-react-native --save</span><br><span class="line"><span class="comment"># jpush-react-native 1.4.2 版本以后需要同时安装 jcore-react-native</span></span><br><span class="line">$ npm install jcore-react-native --save</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="1-自动配置部分"><a href="#1-自动配置部分" class="headerlink" title="1. 自动配置部分"></a>1. 自动配置部分</h3><p>官方：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ react-native link</span><br></pre></td></tr></table></figure><p>作者推荐：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 针对性的link，避免之前手动配置的其它插件重复配置造成报错</span></span><br><span class="line">$ react-native link jpush-react-native</span><br><span class="line">$ react-native link jcore-react-native</span><br></pre></td></tr></table></figure><p>执行完 link 项目后可能会出现报错，这没关系，需要手动配置一下 build.gradle 文件。</p><h3 id="2-手动配置部分"><a href="#2-手动配置部分" class="headerlink" title="2. 手动配置部分"></a>2. 手动配置部分</h3><p>在 Android Studio 中打开你的项目，然后找到 app 或者你自己定义的需要集成 jpush-react-native 的模块，打开此模块下的 build.gradle 文件，做以下改动：</p><blockquote><p>project/android/app/build.gradle</p></blockquote><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">android &#123;</span><br><span class="line">    ...</span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        applicationId <span class="string">"yourApplicationId"</span> <span class="comment">// 此处改成你在极光官网上申请应用时填写的包名</span></span><br><span class="line">        ...</span><br><span class="line">        manifestPlaceholders = [</span><br><span class="line"><span class="symbol">                JPUSH_APPKEY:</span> <span class="string">"yourAppKey"</span>, <span class="comment">//在此替换你的 APPKey</span></span><br><span class="line"><span class="symbol">                APP_CHANNEL:</span> <span class="string">"developer-default"</span>    <span class="comment">//应用渠道号, 默认即可</span></span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line">dependencies &#123;</span><br><span class="line">    compile fileTree(<span class="string">dir:</span> <span class="string">"libs"</span>, <span class="string">include:</span> [<span class="string">"*.jar"</span>])</span><br><span class="line">    compile project(<span class="string">':jpush-react-native'</span>)  <span class="comment">// 添加 jpush 依赖</span></span><br><span class="line">    compile project(<span class="string">':jcore-react-native'</span>)  <span class="comment">// 添加 jcore 依赖</span></span><br><span class="line">    compile <span class="string">"com.facebook.react:react-native:+"</span>  <span class="comment">// From node_modules</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>检查 android 项目下的 settings.gradle 配置有没有包含以下内容：</p><blockquote><p>project/android/settings.gradle</p></blockquote><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">include <span class="string">':app'</span>, <span class="string">':jpush-react-native'</span>, <span class="string">':jcore-react-native'</span></span><br><span class="line">project(<span class="string">':jpush-react-native'</span>).projectDir = <span class="keyword">new</span> File(rootProject.projectDir, <span class="string">'../node_modules/jpush-react-native/android'</span>)</span><br><span class="line">project(<span class="string">':jcore-react-native'</span>).projectDir = <span class="keyword">new</span> File(rootProject.projectDir, <span class="string">'../node_modules/jcore-react-native/android'</span>)</span><br></pre></td></tr></table></figure><p>检查一下 app 下的 AndroidManifest 配置，有没有增加 &lt;meta-data&gt; 部分。</p><blockquote><p>project/android/app/AndroidManifest.xml</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">    <span class="attr">...</span></span></span><br><span class="line">    &lt;!-- Required . Enable it you can get statistics data with channel --&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">meta-data</span> <span class="attr">android:name</span>=<span class="string">"JPUSH_CHANNEL"</span> <span class="attr">android:value</span>=<span class="string">"$&#123;APP_CHANNEL&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta-data</span> <span class="attr">android:name</span>=<span class="string">"JPUSH_APPKEY"</span> <span class="attr">android:value</span>=<span class="string">"$&#123;JPUSH_APPKEY&#125;"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br></pre></td></tr></table></figure><p>现在重新 sync 一下项目，应该能看到 jpush-react-native 以及 jcore-react-native 作为 android Library 项目导进来了。</p><p><img src="http://upload-images.jianshu.io/upload_images/1745101-4eb12666d3d3099f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><p>接下来加入 JPushPackage</p><ul><li>RN 0.29.0 以下版本</li></ul><p>打开 app 下的 MainActivity，在 ReactInstanceManager 的 build 方法中加入 JPushPackage：</p><blockquote><p>project/android/app/MainActivity.java</p></blockquote><p><img src="https://github.com/KenChoi1992/SomeArticles/raw/master/screenshots/plugin3.png" alt></p><ul><li>RN 0.29.0 以上版本</li></ul><p>打开 app 下的 MainApplication.java 文件，然后加入 JPushPackage，<a href="https://github.com/jpush/jpush-react-native/blob/master/example/android/app/src/com/pushdemo/MainApplication.java" target="_blank" rel="noopener">参考 demo</a>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 设置为 true 将不弹出 toast</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> SHUTDOWN_TOAST = <span class="keyword">false</span>;</span><br><span class="line"><span class="comment">// 设置为 true 将不打印 log</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> SHUTDOWN_LOG = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> ReactNativeHost mReactNativeHost = <span class="keyword">new</span> ReactNativeHost(<span class="keyword">this</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">getUseDeveloperSupport</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> BuildConfig.DEBUG;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> List&lt;ReactPackage&gt; <span class="title">getPackages</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Arrays.&lt;ReactPackage&gt;asList(</span><br><span class="line">                <span class="keyword">new</span> MainReactPackage(),</span><br><span class="line">                <span class="keyword">new</span> JPushPackage(SHUTDOWN_TOAST, SHUTDOWN_LOG)</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>然后在 MainActivity 中加入一些初始化代码即可：</p><blockquote><p>project/android/app/src/java/…/MainActivity.java</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">ReactActivity</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        JPushInterface.init(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onPause</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onPause();</span><br><span class="line">        JPushInterface.onPause(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onResume</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onResume();</span><br><span class="line">        JPushInterface.onResume(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样就完成了所有的配置。接下来就可以在 JS 中调用插件提供的 API 了。</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> JPushModule <span class="keyword">from</span> <span class="string">'jpush-react-native'</span>;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">componentDidMount() &#123;</span><br><span class="line">     <span class="comment">// 新版本必需写回调函数</span></span><br><span class="line">    <span class="comment">// JPushModule.notifyJSDidLoad();</span></span><br><span class="line">    JPushModule.notifyJSDidLoad(<span class="function">(<span class="params">resultCode</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (resultCode === <span class="number">0</span>) &#123;&#125;</span><br><span class="line">    &#125;);   </span><br><span class="line">    <span class="comment">// 接收自定义消息</span></span><br><span class="line">    JPushModule.addReceiveCustomMsgListener(<span class="function">(<span class="params">message</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">this</span>.setState(&#123;<span class="attr">pushMsg</span>: message&#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// 接收推送通知</span></span><br><span class="line">    JPushModule.addReceiveNotificationListener(<span class="function">(<span class="params">message</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">"receive notification: "</span> + message);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// 打开通知</span></span><br><span class="line">    JPushModule.addReceiveOpenNotificationListener(<span class="function">(<span class="params">map</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">"Opening notification!"</span>);</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">"map.extra: "</span> + map.extras);</span><br><span class="line">      <span class="comment">// 可执行跳转操作，也可跳转原生页面</span></span><br><span class="line">      <span class="comment">// this.props.navigation.navigate("SecondActivity");</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  componentWillUnmount() &#123;</span><br><span class="line">    JPushModule.removeReceiveCustomMsgListener();</span><br><span class="line">    JPushModule.removeReceiveNotificationListener();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>更多高级应用查看<a href="https://github.com/jpush/jpush-react-native#api" target="_blank" rel="noopener">官方说明</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/jpush/jpush-react-native&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;jpush-react-native&lt;/a&gt; 是极光推送官方开发的 React Native 版本插件，可以快速集成推送功能。现在最新版本的 JPush SDK 分离了 JPush 及 JCore，让开发者可以分开集成 JMessage 及 JPush（以前 JMessage 包含了 JPush）。&lt;/p&gt;
&lt;p&gt;我没有 mac 设备，所以只说 Android 的配置。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="React Native" scheme="http://www.honye.com/tags/React-Native/"/>
    
  </entry>
  
  <entry>
    <title>《成功者战胜100个弱点》</title>
    <link href="http://www.honye.com/posts/f0c4d7aa.html"/>
    <id>http://www.honye.com/posts/f0c4d7aa.html</id>
    <published>2017-06-10T18:25:25.000Z</published>
    <updated>2019-09-24T11:45:45.323Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://img38.ddimg.cn/72/5/8789688-1_e.jpg" alt="《成功者战胜100个弱点》"></p><h1 id="《成功者战胜100个弱点》"><a href="#《成功者战胜100个弱点》" class="headerlink" title="《成功者战胜100个弱点》"></a>《成功者战胜100个弱点》</h1><p>作者：奚华<br>出版时间：2004/01<br>目录：</p><h2 id="第一章-勇于奋斗赢得世界黄金法则"><a href="#第一章-勇于奋斗赢得世界黄金法则" class="headerlink" title="第一章 勇于奋斗赢得世界黄金法则"></a>第一章 勇于奋斗赢得世界黄金法则</h2><pre><code>你该拥有成功、财富、幸福等这些人生最为稀缺的资源——没有人天生注定要过平庸和贫穷的生活。为你的渴望而奋斗，体现着人生的最大的意义。</code></pre><a id="more"></a><h3 id="第1弱点-人生最可怕的是处于盲目状态"><a href="#第1弱点-人生最可怕的是处于盲目状态" class="headerlink" title="第1弱点  人生最可怕的是处于盲目状态"></a>第1弱点  人生最可怕的是处于盲目状态</h3><h3 id="第2弱点-没有理想和抱负是悲剧人生"><a href="#第2弱点-没有理想和抱负是悲剧人生" class="headerlink" title="第2弱点  没有理想和抱负是悲剧人生"></a>第2弱点  没有理想和抱负是悲剧人生</h3><h3 id="第3弱点-人摆错了位置就是垃圾"><a href="#第3弱点-人摆错了位置就是垃圾" class="headerlink" title="第3弱点  人摆错了位置就是垃圾"></a>第3弱点  人摆错了位置就是垃圾</h3><h3 id="第4弱点-人要出头不可强出"><a href="#第4弱点-人要出头不可强出" class="headerlink" title="第4弱点  人要出头不可强出"></a>第4弱点  人要出头不可强出</h3><h3 id="第5弱点-不要把希望寄托在别人身上"><a href="#第5弱点-不要把希望寄托在别人身上" class="headerlink" title="第5弱点  不要把希望寄托在别人身上"></a>第5弱点  不要把希望寄托在别人身上</h3><h3 id="第6弱点-做人不要太空虚"><a href="#第6弱点-做人不要太空虚" class="headerlink" title="第6弱点  做人不要太空虚"></a>第6弱点  做人不要太空虚</h3><h3 id="第7弱点-不争官要权"><a href="#第7弱点-不争官要权" class="headerlink" title="第7弱点  不争官要权"></a>第7弱点  不争官要权</h3><h3 id="第8弱点-对苛刻的金钱诱惑要敢于说“不”"><a href="#第8弱点-对苛刻的金钱诱惑要敢于说“不”" class="headerlink" title="第8弱点  对苛刻的金钱诱惑要敢于说“不”"></a>第8弱点  对苛刻的金钱诱惑要敢于说“不”</h3><h3 id="第9弱点-赚了钱不要太张扬"><a href="#第9弱点-赚了钱不要太张扬" class="headerlink" title="第9弱点  赚了钱不要太张扬"></a>第9弱点  赚了钱不要太张扬</h3><h3 id="第10弱点-有钱并不等于幸福"><a href="#第10弱点-有钱并不等于幸福" class="headerlink" title="第10弱点  有钱并不等于幸福"></a>第10弱点  有钱并不等于幸福</h3><h3 id="第11弱点-不要抱怨自己命不好"><a href="#第11弱点-不要抱怨自己命不好" class="headerlink" title="第11弱点  不要抱怨自己命不好"></a>第11弱点  不要抱怨自己命不好</h3><h3 id="第12弱点-绝对要扔掉别人的拐杖"><a href="#第12弱点-绝对要扔掉别人的拐杖" class="headerlink" title="第12弱点  绝对要扔掉别人的拐杖"></a>第12弱点  绝对要扔掉别人的拐杖</h3><h3 id="第13弱点-千万别祈求处处保险"><a href="#第13弱点-千万别祈求处处保险" class="headerlink" title="第13弱点  千万别祈求处处保险"></a>第13弱点  千万别祈求处处保险</h3><h3 id="第14弱点-草率行事只会漏洞百出"><a href="#第14弱点-草率行事只会漏洞百出" class="headerlink" title="第14弱点  草率行事只会漏洞百出"></a>第14弱点  草率行事只会漏洞百出</h3><h3 id="第15弱点-力戒包裹自己的错误"><a href="#第15弱点-力戒包裹自己的错误" class="headerlink" title="第15弱点  力戒包裹自己的错误"></a>第15弱点  力戒包裹自己的错误</h3><h2 id="第二章-解开心灵枷锁战胜自我"><a href="#第二章-解开心灵枷锁战胜自我" class="headerlink" title="第二章  解开心灵枷锁战胜自我"></a>第二章  解开心灵枷锁战胜自我</h2><pre><code>失败者总会顾及别人的想法。他会恐惧环境和压力，会抱怨客观的原因；他们动辄想到失败的危险，因而永远不愿去真正地关注自己、不愿去善待自己，失败者是失去心灵自由的奴隶。</code></pre><h3 id="第16弱点-不要为小事烦恼"><a href="#第16弱点-不要为小事烦恼" class="headerlink" title="第16弱点  不要为小事烦恼"></a>第16弱点  不要为小事烦恼</h3><h3 id="第17弱点-无谓的争论都是浪费精力"><a href="#第17弱点-无谓的争论都是浪费精力" class="headerlink" title="第17弱点  无谓的争论都是浪费精力"></a>第17弱点  无谓的争论都是浪费精力</h3><h3 id="第18弱点-别悲观地接受你不满意的东西"><a href="#第18弱点-别悲观地接受你不满意的东西" class="headerlink" title="第18弱点  别悲观地接受你不满意的东西"></a>第18弱点  别悲观地接受你不满意的东西</h3><h3 id="第19弱点-放眼未来切忌缩手缩脚"><a href="#第19弱点-放眼未来切忌缩手缩脚" class="headerlink" title="第19弱点  放眼未来切忌缩手缩脚"></a>第19弱点  放眼未来切忌缩手缩脚</h3><h3 id="第20弱点-解除贪婪的枷锁"><a href="#第20弱点-解除贪婪的枷锁" class="headerlink" title="第20弱点  解除贪婪的枷锁"></a>第20弱点  解除贪婪的枷锁</h3><h3 id="第21弱点-不要搬石头砸自己的脚"><a href="#第21弱点-不要搬石头砸自己的脚" class="headerlink" title="第21弱点  不要搬石头砸自己的脚"></a>第21弱点  不要搬石头砸自己的脚</h3><h3 id="第22弱点-别做没有应变能力的“毛毛虫”"><a href="#第22弱点-别做没有应变能力的“毛毛虫”" class="headerlink" title="第22弱点  别做没有应变能力的“毛毛虫”"></a>第22弱点  别做没有应变能力的“毛毛虫”</h3><h3 id="第23弱点-切忌涉足太多的领域"><a href="#第23弱点-切忌涉足太多的领域" class="headerlink" title="第23弱点  切忌涉足太多的领域"></a>第23弱点  切忌涉足太多的领域</h3><h3 id="第24弱点-拖拖拉拉是人性中最大的弱点"><a href="#第24弱点-拖拖拉拉是人性中最大的弱点" class="headerlink" title="第24弱点  拖拖拉拉是人性中最大的弱点"></a>第24弱点  拖拖拉拉是人性中最大的弱点</h3><h3 id="第25弱点-小不忍则乱大谋"><a href="#第25弱点-小不忍则乱大谋" class="headerlink" title="第25弱点  小不忍则乱大谋"></a>第25弱点  小不忍则乱大谋</h3><h3 id="第26弱点-处事不要太认真"><a href="#第26弱点-处事不要太认真" class="headerlink" title="第26弱点  处事不要太认真"></a>第26弱点  处事不要太认真</h3><h3 id="第27弱点-不挡别人的财路"><a href="#第27弱点-不挡别人的财路" class="headerlink" title="第27弱点  不挡别人的财路"></a>第27弱点  不挡别人的财路</h3><h3 id="第28弱点-不要坐享其成"><a href="#第28弱点-不要坐享其成" class="headerlink" title="第28弱点  不要坐享其成"></a>第28弱点  不要坐享其成</h3><h3 id="第29弱点-力戒眉毛胡子一把抓"><a href="#第29弱点-力戒眉毛胡子一把抓" class="headerlink" title="第29弱点  力戒眉毛胡子一把抓"></a>第29弱点  力戒眉毛胡子一把抓</h3><h3 id="第30弱点-不要整天问别人对你的看法"><a href="#第30弱点-不要整天问别人对你的看法" class="headerlink" title="第30弱点  不要整天问别人对你的看法"></a>第30弱点  不要整天问别人对你的看法</h3><h3 id="第31弱点-切忌让坏习惯缠身"><a href="#第31弱点-切忌让坏习惯缠身" class="headerlink" title="第31弱点  切忌让坏习惯缠身"></a>第31弱点  切忌让坏习惯缠身</h3><h3 id="第32弱点-别老闷闷不乐"><a href="#第32弱点-别老闷闷不乐" class="headerlink" title="第32弱点  别老闷闷不乐"></a>第32弱点  别老闷闷不乐</h3><h3 id="第33弱点-别为自己的失败找借口"><a href="#第33弱点-别为自己的失败找借口" class="headerlink" title="第33弱点  别为自己的失败找借口"></a>第33弱点  别为自己的失败找借口</h3><h3 id="第34弱点-放弃“一言堂”的谈话方式"><a href="#第34弱点-放弃“一言堂”的谈话方式" class="headerlink" title="第34弱点  放弃“一言堂”的谈话方式"></a>第34弱点  放弃“一言堂”的谈话方式</h3><h3 id="第35弱点-当断不断反受其乱"><a href="#第35弱点-当断不断反受其乱" class="headerlink" title="第35弱点  当断不断反受其乱"></a>第35弱点  当断不断反受其乱</h3><h3 id="第36弱点-别让失望左右你的生活"><a href="#第36弱点-别让失望左右你的生活" class="headerlink" title="第36弱点  别让失望左右你的生活"></a>第36弱点  别让失望左右你的生活</h3><h2 id="第三章-选择职业驱散事业迷津"><a href="#第三章-选择职业驱散事业迷津" class="headerlink" title="第三章  选择职业驱散事业迷津"></a>第三章  选择职业驱散事业迷津</h2><pre><code>如果说就业只是为了生存，那么创业就是追求人生成功，它是在更高层次上实现人的内在需要和价值。创业不仅需要天时、地利、人和，还需要一种积极的心态和积极的思维。</code></pre><h3 id="第37弱点-选择好职业，摒弃坏职业"><a href="#第37弱点-选择好职业，摒弃坏职业" class="headerlink" title="第37弱点  选择好职业，摒弃坏职业"></a>第37弱点  选择好职业，摒弃坏职业</h3><h3 id="第38弱点-不要把报酬当作职业的第一选择"><a href="#第38弱点-不要把报酬当作职业的第一选择" class="headerlink" title="第38弱点  不要把报酬当作职业的第一选择"></a>第38弱点  不要把报酬当作职业的第一选择</h3><h3 id="第39弱点-千万别入错行"><a href="#第39弱点-千万别入错行" class="headerlink" title="第39弱点  千万别入错行"></a>第39弱点  千万别入错行</h3><h3 id="第40弱点-别在工作上被人看不起"><a href="#第40弱点-别在工作上被人看不起" class="headerlink" title="第40弱点  别在工作上被人看不起"></a>第40弱点  别在工作上被人看不起</h3><h3 id="第41弱点-别轻易“跳槽”"><a href="#第41弱点-别轻易“跳槽”" class="headerlink" title="第41弱点  别轻易“跳槽”"></a>第41弱点  别轻易“跳槽”</h3><h3 id="第42弱点-不要抱怨工资太低"><a href="#第42弱点-不要抱怨工资太低" class="headerlink" title="第42弱点  不要抱怨工资太低"></a>第42弱点  不要抱怨工资太低</h3><h3 id="第43弱点-不要绝对相信素质测评"><a href="#第43弱点-不要绝对相信素质测评" class="headerlink" title="第43弱点  不要绝对相信素质测评"></a>第43弱点  不要绝对相信素质测评</h3><h3 id="第44弱点-不停地换工作并不是好现象"><a href="#第44弱点-不停地换工作并不是好现象" class="headerlink" title="第44弱点  不停地换工作并不是好现象"></a>第44弱点  不停地换工作并不是好现象</h3><h3 id="第45弱点-打报告不要越级"><a href="#第45弱点-打报告不要越级" class="headerlink" title="第45弱点  打报告不要越级"></a>第45弱点  打报告不要越级</h3><h3 id="第46弱点-不把工作带回家"><a href="#第46弱点-不把工作带回家" class="headerlink" title="第46弱点  不把工作带回家"></a>第46弱点  不把工作带回家</h3><h3 id="第47弱点-不要让自己成为不停旋转的陀螺"><a href="#第47弱点-不要让自己成为不停旋转的陀螺" class="headerlink" title="第47弱点  不要让自己成为不停旋转的陀螺"></a>第47弱点  不要让自己成为不停旋转的陀螺</h3><h3 id="第48弱点-没有兴趣的事不要碰"><a href="#第48弱点-没有兴趣的事不要碰" class="headerlink" title="第48弱点  没有兴趣的事不要碰"></a>第48弱点  没有兴趣的事不要碰</h3><h3 id="第49弱点-不要有怀才不遇的想法"><a href="#第49弱点-不要有怀才不遇的想法" class="headerlink" title="第49弱点  不要有怀才不遇的想法"></a>第49弱点  不要有怀才不遇的想法</h3><h3 id="第50弱点-不要当众辱骂你的上司"><a href="#第50弱点-不要当众辱骂你的上司" class="headerlink" title="第50弱点  不要当众辱骂你的上司"></a>第50弱点  不要当众辱骂你的上司</h3><h3 id="第51弱点-不碰职场的10大雷区"><a href="#第51弱点-不碰职场的10大雷区" class="headerlink" title="第51弱点  不碰职场的10大雷区"></a>第51弱点  不碰职场的10大雷区</h3><h3 id="第52弱点-不应该犯的职场错误"><a href="#第52弱点-不应该犯的职场错误" class="headerlink" title="第52弱点  不应该犯的职场错误"></a>第52弱点  不应该犯的职场错误</h3><h3 id="第53弱点-办公室的无形禁忌"><a href="#第53弱点-办公室的无形禁忌" class="headerlink" title="第53弱点  办公室的无形禁忌"></a>第53弱点  办公室的无形禁忌</h3><h2 id="第四章-积极上进修炼不良的习惯"><a href="#第四章-积极上进修炼不良的习惯" class="headerlink" title="第四章  积极上进修炼不良的习惯"></a>第四章  积极上进修炼不良的习惯</h2><pre><code>良好的习惯是你一生中最宝贵的财富，一个习惯养成一种品格，一种品格决定一种命运。习惯可以助人成功，也可以促人失败。好的习惯是成功的捷径，坏的习惯却将人带入迷途，远离成功目标。养成一种良好的习惯，你在事业之路上将无往而不胜。</code></pre><h3 id="第54弱点-不以现有成就满足"><a href="#第54弱点-不以现有成就满足" class="headerlink" title="第54弱点  不以现有成就满足"></a>第54弱点  不以现有成就满足</h3><h3 id="第55弱点-一失足千古恨，人生没有后悔药"><a href="#第55弱点-一失足千古恨，人生没有后悔药" class="headerlink" title="第55弱点  一失足千古恨，人生没有后悔药"></a>第55弱点  一失足千古恨，人生没有后悔药</h3><h3 id="第56弱点-不要做虚无的破坏者"><a href="#第56弱点-不要做虚无的破坏者" class="headerlink" title="第56弱点  不要做虚无的破坏者"></a>第56弱点  不要做虚无的破坏者</h3><h3 id="第57弱点-不要被嫉妒心控制自己"><a href="#第57弱点-不要被嫉妒心控制自己" class="headerlink" title="第57弱点  不要被嫉妒心控制自己"></a>第57弱点  不要被嫉妒心控制自己</h3><h3 id="第58弱点-权利不等于安全感"><a href="#第58弱点-权利不等于安全感" class="headerlink" title="第58弱点  权利不等于安全感"></a>第58弱点  权利不等于安全感</h3><h3 id="第59弱点-做事切忌半途而废"><a href="#第59弱点-做事切忌半途而废" class="headerlink" title="第59弱点  做事切忌半途而废"></a>第59弱点  做事切忌半途而废</h3><h3 id="第60弱点-不要忍者痛苦求节俭"><a href="#第60弱点-不要忍者痛苦求节俭" class="headerlink" title="第60弱点  不要忍者痛苦求节俭"></a>第60弱点  不要忍者痛苦求节俭</h3><h3 id="第61弱点-不要入不敷出"><a href="#第61弱点-不要入不敷出" class="headerlink" title="第61弱点  不要入不敷出"></a>第61弱点  不要入不敷出</h3><h2 id="第五章-提高婚姻质量的巩固家庭"><a href="#第五章-提高婚姻质量的巩固家庭" class="headerlink" title="第五章  提高婚姻质量的巩固家庭"></a>第五章  提高婚姻质量的巩固家庭</h2><pre><code>燕妮曾直截了当地说：“婚姻就是爱情。”这表明，婚姻并非爱情地坟墓，只要夫妻双方正确处理好婚姻关系，调适好结婚心理，婚姻和爱情一样，会成为事业的推进器化催化剂，成为家庭生活幸福的源泉。</code></pre><h3 id="第62弱点-决不把恋爱视作游戏"><a href="#第62弱点-决不把恋爱视作游戏" class="headerlink" title="第62弱点  决不把恋爱视作游戏"></a>第62弱点  决不把恋爱视作游戏</h3><h3 id="第63弱点-唠叨为婚姻挖掘坟墓"><a href="#第63弱点-唠叨为婚姻挖掘坟墓" class="headerlink" title="第63弱点  唠叨为婚姻挖掘坟墓"></a>第63弱点  唠叨为婚姻挖掘坟墓</h3><h3 id="第64弱点-婚姻不能接收批评"><a href="#第64弱点-婚姻不能接收批评" class="headerlink" title="第64弱点  婚姻不能接收批评"></a>第64弱点  婚姻不能接收批评</h3><h3 id="第65弱点-不要在情绪上被女人左右"><a href="#第65弱点-不要在情绪上被女人左右" class="headerlink" title="第65弱点  不要在情绪上被女人左右"></a>第65弱点  不要在情绪上被女人左右</h3><h3 id="第66弱点-金钱买不来幸福的婚姻"><a href="#第66弱点-金钱买不来幸福的婚姻" class="headerlink" title="第66弱点  金钱买不来幸福的婚姻"></a>第66弱点  金钱买不来幸福的婚姻</h3><h3 id="第67弱点-不要做婚姻的文盲"><a href="#第67弱点-不要做婚姻的文盲" class="headerlink" title="第67弱点  不要做婚姻的文盲"></a>第67弱点  不要做婚姻的文盲</h3><h2 id="第六章-善于交往走出交际盲区"><a href="#第六章-善于交往走出交际盲区" class="headerlink" title="第六章  善于交往走出交际盲区"></a>第六章  善于交往走出交际盲区</h2><pre><code>一个人有没有社交能力，直接决定着他在社会生活中能不能成功，社交能力就是在社会生活领域里，搞好人际交往关系的能力。人际交往就是两个或两个以上的人之间，交流思想，交换意见，表达情意、需求、态度，传递知识与信息的过程。能够运用最恰当的方式、技巧来处理各种各样的人际矛盾，就是社会能力强的表现。</code></pre><h3 id="第68弱点-不要侵犯别人的“领地”"><a href="#第68弱点-不要侵犯别人的“领地”" class="headerlink" title="第68弱点  不要侵犯别人的“领地”"></a>第68弱点  不要侵犯别人的“领地”</h3><h3 id="第69弱点-不要贸然揭开别人的面具"><a href="#第69弱点-不要贸然揭开别人的面具" class="headerlink" title="第69弱点  不要贸然揭开别人的面具"></a>第69弱点  不要贸然揭开别人的面具</h3><h3 id="第70弱点-拒绝来路不明的好意"><a href="#第70弱点-拒绝来路不明的好意" class="headerlink" title="第70弱点  拒绝来路不明的好意"></a>第70弱点  拒绝来路不明的好意</h3><h3 id="第71弱点-不要吝啬对别人的赞美"><a href="#第71弱点-不要吝啬对别人的赞美" class="headerlink" title="第71弱点  不要吝啬对别人的赞美"></a>第71弱点  不要吝啬对别人的赞美</h3><h3 id="第72弱点-不要屈服于蛮横之人"><a href="#第72弱点-不要屈服于蛮横之人" class="headerlink" title="第72弱点  不要屈服于蛮横之人"></a>第72弱点  不要屈服于蛮横之人</h3><h3 id="第73弱点-不要害怕对别人说“不”"><a href="#第73弱点-不要害怕对别人说“不”" class="headerlink" title="第73弱点  不要害怕对别人说“不”"></a>第73弱点  不要害怕对别人说“不”</h3><h3 id="第74弱点-不要对敌人心存报复"><a href="#第74弱点-不要对敌人心存报复" class="headerlink" title="第74弱点  不要对敌人心存报复"></a>第74弱点  不要对敌人心存报复</h3><h3 id="第75弱点-不要总是责怪别人"><a href="#第75弱点-不要总是责怪别人" class="headerlink" title="第75弱点  不要总是责怪别人"></a>第75弱点  不要总是责怪别人</h3><h3 id="第76弱点-不要光踢椅子"><a href="#第76弱点-不要光踢椅子" class="headerlink" title="第76弱点  不要光踢椅子"></a>第76弱点  不要光踢椅子</h3><h3 id="第77弱点-不要因小事而垂头丧气"><a href="#第77弱点-不要因小事而垂头丧气" class="headerlink" title="第77弱点  不要因小事而垂头丧气"></a>第77弱点  不要因小事而垂头丧气</h3><h3 id="第78弱点-没有白吃的午餐"><a href="#第78弱点-没有白吃的午餐" class="headerlink" title="第78弱点  没有白吃的午餐"></a>第78弱点  没有白吃的午餐</h3><h3 id="第79弱点-不要轻易许下诺言"><a href="#第79弱点-不要轻易许下诺言" class="headerlink" title="第79弱点  不要轻易许下诺言"></a>第79弱点  不要轻易许下诺言</h3><h3 id="第80弱点-不疏远落魄的朋友"><a href="#第80弱点-不疏远落魄的朋友" class="headerlink" title="第80弱点  不疏远落魄的朋友"></a>第80弱点  不疏远落魄的朋友</h3><h3 id="第81弱点-好朋友不要有“糊涂账”"><a href="#第81弱点-好朋友不要有“糊涂账”" class="headerlink" title="第81弱点  好朋友不要有“糊涂账”"></a>第81弱点  好朋友不要有“糊涂账”</h3><h3 id="第82弱点-朋友间不要有金钱的借贷关系"><a href="#第82弱点-朋友间不要有金钱的借贷关系" class="headerlink" title="第82弱点  朋友间不要有金钱的借贷关系"></a>第82弱点  朋友间不要有金钱的借贷关系</h3><h3 id="第83弱点-不要把苦恼投于他人身上"><a href="#第83弱点-不要把苦恼投于他人身上" class="headerlink" title="第83弱点  不要把苦恼投于他人身上"></a>第83弱点  不要把苦恼投于他人身上</h3><h3 id="第84弱点-不要窥视朋友隐私"><a href="#第84弱点-不要窥视朋友隐私" class="headerlink" title="第84弱点  不要窥视朋友隐私"></a>第84弱点  不要窥视朋友隐私</h3><h3 id="第85弱点-勿结交势利“朋友”"><a href="#第85弱点-勿结交势利“朋友”" class="headerlink" title="第85弱点  勿结交势利“朋友”"></a>第85弱点  勿结交势利“朋友”</h3><h3 id="第86弱点-顺势求人莫心急"><a href="#第86弱点-顺势求人莫心急" class="headerlink" title="第86弱点  顺势求人莫心急"></a>第86弱点  顺势求人莫心急</h3><h3 id="第87弱点-朋友之间不要太亲密"><a href="#第87弱点-朋友之间不要太亲密" class="headerlink" title="第87弱点  朋友之间不要太亲密"></a>第87弱点  朋友之间不要太亲密</h3><h3 id="第88弱点-不要与穷人合作"><a href="#第88弱点-不要与穷人合作" class="headerlink" title="第88弱点  不要与穷人合作"></a>第88弱点  不要与穷人合作</h3><h3 id="第89弱点-铁哥们儿别共事"><a href="#第89弱点-铁哥们儿别共事" class="headerlink" title="第89弱点  铁哥们儿别共事"></a>第89弱点  铁哥们儿别共事</h3><h3 id="第90弱点-不要辜负他人的期望"><a href="#第90弱点-不要辜负他人的期望" class="headerlink" title="第90弱点  不要辜负他人的期望"></a>第90弱点  不要辜负他人的期望</h3><h3 id="第91弱点-莫管他人闲"><a href="#第91弱点-莫管他人闲" class="headerlink" title="第91弱点  莫管他人闲"></a>第91弱点  莫管他人闲</h3><h3 id="第92弱点-避免跟人发生正面冲突"><a href="#第92弱点-避免跟人发生正面冲突" class="headerlink" title="第92弱点  避免跟人发生正面冲突"></a>第92弱点  避免跟人发生正面冲突</h3><h2 id="第七章-抵抗挫折勇于挑战"><a href="#第七章-抵抗挫折勇于挑战" class="headerlink" title="第七章  抵抗挫折勇于挑战"></a>第七章  抵抗挫折勇于挑战</h2><pre><code>这个世上确有不少被埋没的人，但是，对于一个优秀的人来讲，不论他处在何种逆境下，也一定可以取得某种程度的成功，不管遭遇多大的困难，他们也决不会沮丧。纵使遭遇再大的挫折也能重新站起，勇往直前。</code></pre><h3 id="第93弱点-受打击后不要存心"><a href="#第93弱点-受打击后不要存心" class="headerlink" title="第93弱点  受打击后不要存心"></a>第93弱点  受打击后不要存心</h3><h3 id="第94弱点-不要怕失败"><a href="#第94弱点-不要怕失败" class="headerlink" title="第94弱点  不要怕失败"></a>第94弱点  不要怕失败</h3><h3 id="第95弱点-投机取巧有害无利"><a href="#第95弱点-投机取巧有害无利" class="headerlink" title="第95弱点  投机取巧有害无利"></a>第95弱点  投机取巧有害无利</h3><h3 id="第96弱点-别怕人生的挑战"><a href="#第96弱点-别怕人生的挑战" class="headerlink" title="第96弱点  别怕人生的挑战"></a>第96弱点  别怕人生的挑战</h3><h3 id="第97弱点-推脱借口无法实现目的"><a href="#第97弱点-推脱借口无法实现目的" class="headerlink" title="第97弱点  推脱借口无法实现目的"></a>第97弱点  推脱借口无法实现目的</h3><h3 id="第98弱点-不要以小利绊倒自己"><a href="#第98弱点-不要以小利绊倒自己" class="headerlink" title="第98弱点  不要以小利绊倒自己"></a>第98弱点  不要以小利绊倒自己</h3><h3 id="第99弱点-不做投机买卖"><a href="#第99弱点-不做投机买卖" class="headerlink" title="第99弱点  不做投机买卖"></a>第99弱点  不做投机买卖</h3><h3 id="第100弱点-避免吃官司"><a href="#第100弱点-避免吃官司" class="headerlink" title="第100弱点  避免吃官司"></a>第100弱点  避免吃官司</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://img38.ddimg.cn/72/5/8789688-1_e.jpg&quot; alt=&quot;《成功者战胜100个弱点》&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;《成功者战胜100个弱点》&quot;&gt;&lt;a href=&quot;#《成功者战胜100个弱点》&quot; class=&quot;headerlink&quot; title=&quot;《成功者战胜100个弱点》&quot;&gt;&lt;/a&gt;《成功者战胜100个弱点》&lt;/h1&gt;&lt;p&gt;作者：奚华&lt;br&gt;出版时间：2004/01&lt;br&gt;目录：&lt;/p&gt;
&lt;h2 id=&quot;第一章-勇于奋斗赢得世界黄金法则&quot;&gt;&lt;a href=&quot;#第一章-勇于奋斗赢得世界黄金法则&quot; class=&quot;headerlink&quot; title=&quot;第一章 勇于奋斗赢得世界黄金法则&quot;&gt;&lt;/a&gt;第一章 勇于奋斗赢得世界黄金法则&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;你该拥有成功、财富、幸福等这些人生最为稀缺的资源——没有人天生注定要过平庸和贫穷的生活。为你的渴望而奋斗，体现着人生的最大的意义。&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
    
      <category term="Reading" scheme="http://www.honye.com/tags/Reading/"/>
    
  </entry>
  
  <entry>
    <title>Chrome上 几个值得推荐的插件</title>
    <link href="http://www.honye.com/posts/7f9837ee.html"/>
    <id>http://www.honye.com/posts/7f9837ee.html</id>
    <published>2017-05-14T16:59:29.000Z</published>
    <updated>2019-09-24T11:45:45.319Z</updated>
    
    <content type="html"><![CDATA[<p>推荐几款自己正在使用的插件，推荐等级与顺序无关。</p><h2 id="1-Anything-to-QRcode"><a href="#1-Anything-to-QRcode" class="headerlink" title="1. Anything to QRcode"></a>1. Anything to QRcode</h2><p>通过右键菜单或地址栏按钮将当前页面地址、选中的文本、链接、图片地址等文本内容生成二维码，也可以解析页面中的二维码图片，完全离线可用，不依赖任何远程文件和服务，内存占用小，不常驻后台，界面简洁，无广告。</p><p>作者用于测试 web 适配，当开发的网页需要用手机测试时，不再需要手动输入二维码，用此插件生成二维码后手机扫码访问即可。</p><a id="more"></a><p> <img src="../images/2017-05-14-17-07-58.jpg" alt><br> <img src="../images/2017-05-14-17-08-20.jpg" alt></p><h2 id="2-Infinity-新标签页"><a href="#2-Infinity-新标签页" class="headerlink" title="2. Infinity 新标签页"></a>2. Infinity 新标签页</h2><p>Infinity新标签页，基于Chrome的云应用服务，让你更优雅、轻松地使用Chrome。</p><p> <img src="../images/2017-05-14-17-10-38.jpg" alt></p><h2 id="3-JSON-handle"><a href="#3-JSON-handle" class="headerlink" title="3. JSON-handle"></a>3. JSON-handle</h2><p>对JSON格式的内容进行浏览和编辑，以树形图样式展现JSON文档，并可实时编辑。</p><p> <img src="../images/2017-05-14-17-14-56.jpg" alt></p><h2 id="4-Octotree"><a href="#4-Octotree" class="headerlink" title="4. Octotree"></a>4. Octotree</h2><p>Extension to show code tree for GitHub.  </p><p> Features:</p><ul><li>Easy-to-navigate code tree like IDEs</li><li>Support private repositories</li><li>Support GitHub Enterprise</li></ul><p>Learn more about Octotree: <a href="https://github.com/ovity/octotree" target="_blank" rel="noopener">https://github.com/ovity/octotree</a></p><p> <img src="https://raw.githubusercontent.com/ovity/octotree/master/docs/chrome-github.jpg" alt="Octotree"></p><h2 id="5-Postman"><a href="#5-Postman" class="headerlink" title="5. Postman"></a>5. <del>Postman</del></h2><p>Supercharge your API workflow with Postman!<br>Postman Chrome 插件已停用了，可下载 PC 客户端。<a href="https://www.getpostman.com/apps" target="_blank" rel="noopener">下载</a></p><p> <img src="https://www.getpostman.com/img/v2/products/dark-theme.svg" alt="Collections"></p><h2 id="6-FeHelper"><a href="#6-FeHelper" class="headerlink" title="6. FeHelper"></a>6. FeHelper</h2><p>FE助手：包括JSON格式化、二维码生成与解码、信息编解码、代码压缩、美化、页面取色、Markdown与HTML互转、网页滚动截屏、正则表达式、时间转换工具、编码规范检测、页面性能检测、Ajax接口调试、密码生成器、JSON比对工具、网页编码设置、便签笔记</p><p><img src="https://raw.githubusercontent.com/zxlie/FeHelper/master/apps/static/screenshot/menu.png" alt="FeHelper"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;推荐几款自己正在使用的插件，推荐等级与顺序无关。&lt;/p&gt;
&lt;h2 id=&quot;1-Anything-to-QRcode&quot;&gt;&lt;a href=&quot;#1-Anything-to-QRcode&quot; class=&quot;headerlink&quot; title=&quot;1. Anything to QRcode&quot;&gt;&lt;/a&gt;1. Anything to QRcode&lt;/h2&gt;&lt;p&gt;通过右键菜单或地址栏按钮将当前页面地址、选中的文本、链接、图片地址等文本内容生成二维码，也可以解析页面中的二维码图片，完全离线可用，不依赖任何远程文件和服务，内存占用小，不常驻后台，界面简洁，无广告。&lt;/p&gt;
&lt;p&gt;作者用于测试 web 适配，当开发的网页需要用手机测试时，不再需要手动输入二维码，用此插件生成二维码后手机扫码访问即可。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Chrome" scheme="http://www.honye.com/tags/Chrome/"/>
    
  </entry>
  
  <entry>
    <title>Android style 样式应用学习</title>
    <link href="http://www.honye.com/posts/21da5cff.html"/>
    <id>http://www.honye.com/posts/21da5cff.html</id>
    <published>2017-05-09T12:47:11.000Z</published>
    <updated>2019-09-24T11:45:45.319Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--透明状态栏 19及以上--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"android:windowTranslucentStatus"</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--透明导航栏 19及以上--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"android:windowTranslucentNavigation"</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--标题栏颜色--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"colorPrimary"</span>&gt;</span>@color/colorPrimary<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--状态栏颜色--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"colorPrimaryDark"</span>&gt;</span>@color/colorPrimary<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--强调色，一些控件和游标的颜色--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"colorAccent"</span>&gt;</span>@color/colorPrimary<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--是否半透明--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"android:windowIsTranslucent"</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="应用一：修改状态栏颜色"><a href="#应用一：修改状态栏颜色" class="headerlink" title="应用一：修改状态栏颜色"></a>应用一：修改状态栏颜色</h3><p>当 values 文件夹和 values-v19 文件夹中存在相同命名的 style，最后会采用最接近设备 API 的版本，如我的手机 API 19，会采用 values-v19 中的样式，而不采用 values 中的样式</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;
      
    
    </summary>
    
    
    
      <category term="Android" scheme="http://www.honye.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>React Native 之在设备上运行</title>
    <link href="http://www.honye.com/posts/ed3c977b.html"/>
    <id>http://www.honye.com/posts/ed3c977b.html</id>
    <published>2017-05-07T19:24:21.000Z</published>
    <updated>2019-09-24T11:45:45.319Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>转自: <a href="http://reactnative.cn/docs/0.44/running-on-device-android.html" target="_blank" rel="noopener">http://reactnative.cn/docs/0.44/running-on-device-android.html</a></p></blockquote><h2 id="前提条件：USB调试"><a href="#前提条件：USB调试" class="headerlink" title="前提条件：USB调试"></a>前提条件：USB调试</h2><p>你需要开启USB调试才能在你的设备上安装你的APP。首先，确定<a href="https://www.baidu.com/s?wd=%E5%AE%89%E5%8D%93%E6%89%93%E5%BC%80usb%E8%B0%83%E8%AF%95" target="_blank" rel="noopener">你已经打开设备的USB调试开关</a></p><p>确保你的设备已经<strong>成功连接</strong>。可以输入<code>adb devices</code>来查看:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> adb devices</span></span><br><span class="line">List of devices attached</span><br><span class="line">emulator-5554 offline   # Google模拟器</span><br><span class="line">14ed2fcc device         # 真实设备</span><br></pre></td></tr></table></figure><p>在右边那列看到<strong>device</strong>说明你的设备已经被正确连接了。注意，你只应当<strong>连接仅仅一个设备</strong>。</p><p><strong>译注</strong>：如果你连接了多个设备（包含模拟器在内），后续的一些操作可能会失败。拔掉不需要的设备，或者关掉模拟器，确保adb devices的输出只有一个是连接状态。</p><p>现在你可以运行<code>react-native run-android</code>来在设备上安装并启动应用了。</p><a id="more"></a><p><strong>译注</strong>：在真机上运行时可能会遇到白屏的情况，请找到并开启<code>悬浮窗权限</code>。比如miui系统的设置<a href="http://jingyan.baidu.com/article/f25ef25466c0fc482d1b824d.html" target="_blank" rel="noopener">在此处</a>。</p><blockquote><p>提示</p><p>你还可以运行<code>react-native run-android --variant=release</code>来安装release版的应用。当然你需要<a href="http://reactnative.cn/docs/0.44/signed-apk-android.html" target="_blank" rel="noopener">先配置好签名</a>，且此时无法再开启开发者菜单。注意在debug和release版本间来回切换安装时可能会报错签名不匹配，此时需要先卸载前一个版本再尝试安装。</p></blockquote><h2 id="从设备上访问开发服务器。"><a href="#从设备上访问开发服务器。" class="headerlink" title="从设备上访问开发服务器。"></a>从设备上访问开发服务器。</h2><p>在启用开发服务器的情况下，你可以快速的迭代修改应用，然后在设备上查看结果。按照下面描述的任意一种方法来使你的运行在电脑上的开发服务器可以从设备上访问到。</p><blockquote><p>注意</p><p>大部分现代的安卓设备已经没有了硬件”Menu”按键，这是我们用来调出开发者菜单的。在这种情况下你可以通过摇晃设备来打开开发者菜单(重新加载、调试，等等……)</p></blockquote><h3 id="Android-5-0及以上-使用adb-reverse命令"><a href="#Android-5-0及以上-使用adb-reverse命令" class="headerlink" title="(Android 5.0及以上)使用adb reverse命令"></a>(Android 5.0及以上)使用adb reverse命令</h3><blockquote><p>注意，这个选项只能在5.0以上版本(API 21+)的安卓设备上使用。</p></blockquote><p>首先把你的设备通过USB数据线连接到电脑上，并开启USB调试（关于如何开启USB调试，参见上面的章节）。</p><ol><li>运行<code>adb reverse tcp:8081 tcp:8081</code></li><li>不需要更多配置，你就可以使用<code>Reload JS</code>和其它的开发选项了。</li></ol><h3 id="Android-5-0以下-通过Wi-Fi连接你的本地开发服务器"><a href="#Android-5-0以下-通过Wi-Fi连接你的本地开发服务器" class="headerlink" title="(Android 5.0以下)通过Wi-Fi连接你的本地开发服务器"></a>(Android 5.0以下)通过Wi-Fi连接你的本地开发服务器</h3><ol><li>首先确保你的电脑和手机设备在<strong>同一个Wi-Fi环境</strong>下。</li><li>在设备上运行你的React Native应用。和打开其它App一样操作。</li><li>你应该会看到一个“红屏”错误提示。这是正常的，下面的步骤会解决这个报错。</li><li>摇晃设备，或者运行<code>adb shell input keyevent 82</code>，可以打开<strong>开发者菜单</strong>。</li><li>点击进入<code>Dev Settings</code>。</li><li>点击<code>Debug server host for device</code>。</li><li>输入你电脑的IP地址和端口号（譬如10.0.1.1:8081）。<strong>在Mac上</strong>，你可以在系统设置/网络里找查询你的IP地址。<strong>在Windows上</strong>，打开命令提示符并输入<code>ipconfig</code>来查询你的IP地址。<strong>在Linux上</strong>你可以在终端中输入<code>ifconfig</code>来查询你的IP地址。</li><li>回到<strong>开发者菜单</strong>然后选择<code>Reload JS</code>。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;转自: &lt;a href=&quot;http://reactnative.cn/docs/0.44/running-on-device-android.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://reactnative.cn/docs/0.44/running-on-device-android.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;前提条件：USB调试&quot;&gt;&lt;a href=&quot;#前提条件：USB调试&quot; class=&quot;headerlink&quot; title=&quot;前提条件：USB调试&quot;&gt;&lt;/a&gt;前提条件：USB调试&lt;/h2&gt;&lt;p&gt;你需要开启USB调试才能在你的设备上安装你的APP。首先，确定&lt;a href=&quot;https://www.baidu.com/s?wd=%E5%AE%89%E5%8D%93%E6%89%93%E5%BC%80usb%E8%B0%83%E8%AF%95&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;你已经打开设备的USB调试开关&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;确保你的设备已经&lt;strong&gt;成功连接&lt;/strong&gt;。可以输入&lt;code&gt;adb devices&lt;/code&gt;来查看:&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; adb devices&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;List of devices attached&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;emulator-5554 offline   # Google模拟器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14ed2fcc device         # 真实设备&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在右边那列看到&lt;strong&gt;device&lt;/strong&gt;说明你的设备已经被正确连接了。注意，你只应当&lt;strong&gt;连接仅仅一个设备&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;译注&lt;/strong&gt;：如果你连接了多个设备（包含模拟器在内），后续的一些操作可能会失败。拔掉不需要的设备，或者关掉模拟器，确保adb devices的输出只有一个是连接状态。&lt;/p&gt;
&lt;p&gt;现在你可以运行&lt;code&gt;react-native run-android&lt;/code&gt;来在设备上安装并启动应用了。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="React" scheme="http://www.honye.com/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>React Native 之搭建开发环境</title>
    <link href="http://www.honye.com/posts/4b0b1b34.html"/>
    <id>http://www.honye.com/posts/4b0b1b34.html</id>
    <published>2017-05-07T19:13:28.000Z</published>
    <updated>2019-09-24T11:45:45.323Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>转自: <a href="http://reactnative.cn/docs/0.44/getting-started.html" target="_blank" rel="noopener">http://reactnative.cn/docs/0.44/getting-started.html</a></p></blockquote><p>欢迎使用React Native！这篇文档会帮助你搭建基本的React Native开发环境。如果你已经搭好了环境，那么可以尝试一下<a href="http://reactnative.cn/docs/0.44/tutorial.html" target="_blank" rel="noopener">编写Hello World</a>。</p><p>根据你所使用的操作系统、针对的目标平台不同，具体步骤有所不同。如果想同时开发iOS和Android也没问题，你只需要先选一个平台开始，另一个平台的环境搭建只是稍有不同。</p><p>如果阅读完本文档后还碰到很多环境搭建的问题，我们建议你还可以再看看由本站提供的环境搭建视频教程(<a href="https://ke.qq.com/webcourse/index.html#course_id=197101&term_id=100233637&taid=1220865928921581&vid=a1417i5op7k" target="_blank" rel="noopener">macOS iOS</a>、<a href="https://ke.qq.com/webcourse/index.html#course_id=197101&term_id=100233637&taid=1220870223888877&vid=z1417kmxask" target="_blank" rel="noopener">macOS Android</a>、<a href="https://ke.qq.com/webcourse/index.html#course_id=197101&term_id=100233637&taid=1220874518856173&vid=d1417tgg1ez" target="_blank" rel="noopener">windows Android</a>)、<a href="http://bbs.reactnative.cn/topic/10" target="_blank" rel="noopener">windows环境搭建文字教程</a>、以及<a href="http://bbs.reactnative.cn/topic/130" target="_blank" rel="noopener">常见问题</a>。</p><a id="more"></a><p>目标平台： iOS Android 开发平台： macOS Linux Windows</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="必需的软件"><a href="#必需的软件" class="headerlink" title="必需的软件"></a>必需的软件</h3><h4 id="Chocolatey"><a href="#Chocolatey" class="headerlink" title="Chocolatey"></a>Chocolatey</h4><p><a href="https://chocolatey.org/" target="_blank" rel="noopener">Chocolatey</a>是一个Windows上的包管理器，类似于linux上的yum和 apt-get。 你可以在其<a href="https://chocolatey.org/" target="_blank" rel="noopener">官方网站</a>上查看具体的使用说明。一般的安装步骤应该是下面这样：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@powershell -NoProfile -ExecutionPolicy Bypass -Command "iex ((new-object net.webclient).DownloadString('https://chocolatey.org/install.ps1'))" &amp;&amp; SET PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin</span><br></pre></td></tr></table></figure><blockquote><p>一般来说，使用Chocolatey来安装软件的时候，需要以管理员的身份来运行命令提示符窗口。译注：chocolatey的网站可能在国内访问困难，导致上述安装命令无法正常完成。请使用稳定的翻墙工具。 如果你实在装不上这个工具，也不要紧。下面所需的python2和nodejs你可以分别单独去对应的官方网站下载安装即可。</p></blockquote><h4 id="Python-2"><a href="#Python-2" class="headerlink" title="Python 2"></a>Python 2</h4><p>打开命令提示符窗口，使用Chocolatey来安装Python 2.</p><blockquote><p>注意目前不支持Python 3版本。</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">choco install python2</span><br></pre></td></tr></table></figure><h4 id="Node"><a href="#Node" class="headerlink" title="Node"></a>Node</h4><p>打开命令提示符窗口，使用Chocolatey来安装NodeJS。注意，目前已知Node 7.1版本在windows上无法正常工作，请避开这个版本！</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">choco install nodejs.install</span><br></pre></td></tr></table></figure><p>安装完node后建议设置npm镜像以加速后面的过程（或使用科学上网工具）。注意：不要使用cnpm！cnpm安装的模块路径比较奇怪，packager不能正常识别！</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org --global</span><br><span class="line">npm config set disturl https://npm.taobao.org/dist --global</span><br></pre></td></tr></table></figure><h4 id="Yarn、React-Native的命令行工具（react-native-cli）"><a href="#Yarn、React-Native的命令行工具（react-native-cli）" class="headerlink" title="Yarn、React Native的命令行工具（react-native-cli）"></a>Yarn、React Native的命令行工具（react-native-cli）</h4><p><a href="http://yarnpkg.com/" target="_blank" rel="noopener">Yarn</a>是Facebook提供的替代npm的工具，可以加速node模块的下载。React Native的命令行工具用于执行创建、初始化、更新项目、运行打包服务（packager）等任务。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g yarn react-native-cli</span><br></pre></td></tr></table></figure><p>安装完yarn后同理也要设置镜像源：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yarn config set registry https://registry.npm.taobao.org --global</span><br><span class="line">yarn config set disturl https://npm.taobao.org/dist --global</span><br></pre></td></tr></table></figure><blockquote><p>如果你遇到<code>EACCES: permission denied</code>权限错误，可以尝试运行下面的命令（限linux系统）： <code>sudo npm install -g yarn react-native-cli</code>.</p></blockquote><h4 id="Android-Studio"><a href="#Android-Studio" class="headerlink" title="Android Studio"></a>Android Studio</h4><p><a href="http://developer.android.com/sdk/index.html" target="_blank" rel="noopener">Android Studio</a> 2.0 or higher.</p><p>React Native目前需要<a href="http://developer.android.com/sdk/index.html" target="_blank" rel="noopener">Android Studio</a>2.0或更高版本。</p><blockquote><p>Android Studio需要Java Development Kit [JDK] 1.8或更高版本。你可以在命令行中输入<code>javac -version</code>来查看你当前安装的JDK版本。如果版本不合要求，则可以到 <a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener">官网</a>上下载。 或是使用包管理器来安装（比如<code>choco install jdk8</code>或是<code>apt-get install default-jdk</code>）</p></blockquote><p>Android Studio包含了运行和测试React Native应用所需的Android SDK和模拟器。</p><blockquote><p>除非特别注明，请不要改动安装过程中的选项。比如Android Studio默认安装了 <code>Android Support Repository</code>，而这也是React Native必须的（否则在react-native run-android时会报appcompat-v7包找不到的错误）。</p></blockquote><ul><li>确定所有安装都勾选了，尤其是<code>Android SDK</code>和<code>Android Device Emulator</code>。</li><li>在初步安装完成后，选择<code>Custom</code>安装项：</li></ul><p><img src="http://reactnative.cn/static/docs/0.44/img/react-native-android-studio-custom-install-windows.png" alt="custom installation"></p><ul><li>检查已安装的组件，尤其是模拟器和HAXM加速驱动。</li></ul><p><img src="http://reactnative.cn/static/docs/0.44/img/react-native-android-studio-verify-installs-windows.png" alt="verify installs"></p><ul><li>安装完成后，在Android Studio的欢迎界面中选择<code>Configure | SDK Manager</code>。</li></ul><p><img src="http://reactnative.cn/static/docs/0.44/img/react-native-android-studio-configure-sdk-windows.png" alt="configure sdk"></p><ul><li>在<code>SDK Platforms</code>窗口中，选择<code>Show Package Details</code>，然后在<code>Android 6.0 (Marshmallow)</code>中勾选<code>Google APIs</code>、<code>Android SDK Platform 23</code>、<code>Intel x86 Atom System Image</code>、<code>Intel x86 Atom\_64 System Image</code>以及<code>Google APIs Intel x86 Atom\_64 System Image</code>。</li></ul><p><img src="http://reactnative.cn/static/docs/0.44/img/react-native-android-studio-android-sdk-platforms-windows.png" alt="platforms"></p><ul><li>在<code>SDK Tools中</code>，选择<code>Show Package Details</code>，然后在<code>Android SDK Build Tools</code>中勾选<code>Android SDK Build-Tools 23.0.1</code>（必须是这个版本）。然后还要勾选最底部的<code>Android Support Repository</code>.</li></ul><p><img src="http://reactnative.cn/static/docs/0.44/img/react-native-android-studio-android-sdk-build-tools-windows.png" alt="build tools"></p><h4 id="ANDROID-HOME环境变量"><a href="#ANDROID-HOME环境变量" class="headerlink" title="ANDROID_HOME环境变量"></a>ANDROID_HOME环境变量</h4><p>确保<code>ANDROID\_HOME</code>环境变量正确地指向了你安装的Android SDK的路径。</p><p>打开<code>控制面板</code> -&gt; <code>系统和安全</code> -&gt; <code>系统</code> -&gt; <code>高级系统设置</code> -&gt; <code>高级</code> -&gt; <code>环境变量</code> -&gt; <code>新建</code></p><blockquote><p>具体的路径可能和下图不一致，请自行确认。<br><img src="http://reactnative.cn/static/docs/0.44/img/react-native-android-sdk-environment-variable-windows.png" alt="env variable"></p></blockquote><blockquote><p>你需要关闭现有的命令符提示窗口然后重新打开，这样新的环境变量才能生效。</p></blockquote><h3 id="推荐安装的工具"><a href="#推荐安装的工具" class="headerlink" title="推荐安装的工具"></a>推荐安装的工具</h3><h4 id="Gradle-Daemon"><a href="#Gradle-Daemon" class="headerlink" title="Gradle Daemon"></a>Gradle Daemon</h4><p>开启<a href="https://docs.gradle.org/2.9/userguide/gradle_daemon.html" target="_blank" rel="noopener">Gradle Daemon</a>可以极大地提升java代码的增量编译速度。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(if not exist "%USERPROFILE%/.gradle" mkdir "%USERPROFILE%/.gradle") &amp;&amp; (echo org.gradle.daemon=true &gt;&gt; "%USERPROFILE%/.gradle/gradle.properties")</span><br></pre></td></tr></table></figure><h4 id="将Android-SDK的Tools目录添加到PATH变量中"><a href="#将Android-SDK的Tools目录添加到PATH变量中" class="headerlink" title="将Android SDK的Tools目录添加到PATH变量中"></a>将Android SDK的Tools目录添加到<code>PATH</code>变量中</h4><p>你可以把Android SDK的tools和platform-tools目录添加到<code>PATH</code>变量中，以便在终端中运行一些Android工具，例如<code>android avd</code>或是<code>adb logcat</code>等。</p><p>打开<code>控制面板</code> -&gt; <code>系统和安全</code> -&gt; 系统 -&gt; <code>高级系统设置</code> -&gt; <code>高级</code> -&gt; <code>环境变量</code> -&gt; 选中<code>PATH</code> -&gt; 双击进行编辑</p><blockquote><p>注意你的具体路径可能和下图不同</p></blockquote><p><img src="http://reactnative.cn/static/docs/0.44/img/react-native-android-tools-environment-variable-windows.png" alt="env variable"></p><h3 id="可选的安装项"><a href="#可选的安装项" class="headerlink" title="可选的安装项"></a>可选的安装项</h3><h4 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h4><p>你可以使用Chocolatey来安装<code>git</code>:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">choco install git</span><br></pre></td></tr></table></figure><p>另外你也可以直接去下载<a href="https://git-for-windows.github.io/" target="_blank" rel="noopener">Git for Windows</a>。 在安装过程中注意勾选”Run Git from Windows Command Prompt”，这样才会把<code>git</code>命令添加到<code>PATH</code>环境变量中。</p><h4 id="Genymotion"><a href="#Genymotion" class="headerlink" title="Genymotion"></a>Genymotion</h4><p>比起Android Studio自带的原装模拟器，Genymotion是一个性能更好的选择，但它只对个人用户免费。</p><ol><li>下载和安装<a href="https://www.genymotion.com/download" target="_blank" rel="noopener">Genymotion</a>（genymotion需要依赖VirtualBox虚拟机，下载选项中提供了包含VirtualBox和不包含的选项，请按需选择）。</li><li>打开Genymotion。如果你还没有安装VirtualBox，则此时会提示你安装。</li><li>创建一个新模拟器并启动。</li><li>启动React Native应用后，可以按下F1来打开开发者菜单。</li></ol><h4 id="Visual-Studio-Emulator-for-Android"><a href="#Visual-Studio-Emulator-for-Android" class="headerlink" title="Visual Studio Emulator for Android"></a>Visual Studio Emulator for Android</h4><p><a href="https://www.visualstudio.com/zh-cn/features/msft-android-emulator-vs.aspx#中国" title="简体中文" target="_blank" rel="noopener">Visual Studio Emulator for Android</a>是利用了Hyper-V技术进行硬件加速的免费android模拟器。也是Android Studio自带的原装模拟器之外的一个很好的选择。而且你并不需要安装Visual Studio。 在用于React Native开发前，需要先在注册表中进行一些修改：</p><ol><li>打开运行命令（按下Windows+R键）</li><li>输入regedit.exe然后回车</li><li>在注册表编辑器中找到HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Android SDK Tools条目</li><li>右键点击Android SDK Tools，选择新建 &gt; 字符串值</li><li>名称设为Path</li><li>双击Path，将其值设为你的Android SDK的路径。（例如C:\Program Files\Android\sdk）</li></ol><h2 id="测试安装"><a href="#测试安装" class="headerlink" title="测试安装"></a>测试安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">react-native init AwesomeProject</span><br><span class="line">cd AwesomeProject</span><br><span class="line">react-native run-android</span><br></pre></td></tr></table></figure><blockquote><p>提示：你可以使用<code>--version</code>参数创建指定版本的项目。例如<code>react-native init MyApp --version 0.39.2</code>。注意版本号必须精确到两个小数点。</p></blockquote><p><strong>Windows用户请注意，请不要在命令行默认的System32目录中init项目！会有各种权限限制导致不能运行！</strong></p><h3 id="修改项目"><a href="#修改项目" class="headerlink" title="修改项目"></a>修改项目</h3><p>现在你已经成功运行了项目，我们可以开始尝试动手改一改了：</p><ul><li>使用你喜欢的文本编辑器打开<code>index.android.js</code>并随便改上几行</li><li>按两下R键，或是用Menu键（通常是F2，在Genymotion模拟器中是<code>⌘+M</code>）打开开发者菜单，然后选择 <em>Reload JS</em> 就可以看到你的最新修改。</li><li>在终端下运行<code>adb logcat *:S ReactNative:V ReactNativeJS:V</code>可以看到你的应用的日志。</li></ul><h3 id="完成了！"><a href="#完成了！" class="headerlink" title="完成了！"></a>完成了！</h3><p>恭喜！你已经成功运行并修改了你的第一个React Native应用。</p><p><img src="http://reactnative.cn/static/docs/0.44/img/react-native-congratulations.png" alt></p><h2 id="接下来"><a href="#接下来" class="headerlink" title="接下来"></a>接下来</h2><ul><li>如果你想要在真机上运行应用，请参阅<a href="http://reactnative.cn/docs/0.44/running-on-device-android.html#content" target="_blank" rel="noopener">在设备上运行</a>。</li><li>如果你碰到了一些问题，请参阅<a href="http://bbs.reactnative.cn/topic/130" target="_blank" rel="noopener">常见问题</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;转自: &lt;a href=&quot;http://reactnative.cn/docs/0.44/getting-started.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://reactnative.cn/docs/0.44/getting-started.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;欢迎使用React Native！这篇文档会帮助你搭建基本的React Native开发环境。如果你已经搭好了环境，那么可以尝试一下&lt;a href=&quot;http://reactnative.cn/docs/0.44/tutorial.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;编写Hello World&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;根据你所使用的操作系统、针对的目标平台不同，具体步骤有所不同。如果想同时开发iOS和Android也没问题，你只需要先选一个平台开始，另一个平台的环境搭建只是稍有不同。&lt;/p&gt;
&lt;p&gt;如果阅读完本文档后还碰到很多环境搭建的问题，我们建议你还可以再看看由本站提供的环境搭建视频教程(&lt;a href=&quot;https://ke.qq.com/webcourse/index.html#course_id=197101&amp;term_id=100233637&amp;taid=1220865928921581&amp;vid=a1417i5op7k&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;macOS iOS&lt;/a&gt;、&lt;a href=&quot;https://ke.qq.com/webcourse/index.html#course_id=197101&amp;term_id=100233637&amp;taid=1220870223888877&amp;vid=z1417kmxask&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;macOS Android&lt;/a&gt;、&lt;a href=&quot;https://ke.qq.com/webcourse/index.html#course_id=197101&amp;term_id=100233637&amp;taid=1220874518856173&amp;vid=d1417tgg1ez&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;windows Android&lt;/a&gt;)、&lt;a href=&quot;http://bbs.reactnative.cn/topic/10&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;windows环境搭建文字教程&lt;/a&gt;、以及&lt;a href=&quot;http://bbs.reactnative.cn/topic/130&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;常见问题&lt;/a&gt;。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="React" scheme="http://www.honye.com/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>HBuilder 上传图片到七牛云</title>
    <link href="http://www.honye.com/posts/99def624.html"/>
    <id>http://www.honye.com/posts/99def624.html</id>
    <published>2017-04-06T15:34:39.000Z</published>
    <updated>2019-09-24T11:45:45.319Z</updated>
    
    <content type="html"><![CDATA[<p>HBuilder 上传支持表单上传，所以上传到七牛云的时候用的也是表单上传</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 上传图片到七牛云</span></span><br><span class="line"><span class="comment"> * @param String imgPath 图片路径</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">uploadToQiniu</span>(<span class="params">imgPath</span>)</span>&#123;</span><br><span class="line"><span class="comment">// 七牛云空间域名，修改为自己的</span></span><br><span class="line"><span class="keyword">var</span> domain = <span class="string">"http://onpzdyxr0.bkt.clouddn.com/"</span>;</span><br><span class="line"><span class="comment">// 生成一个随机名字作为上传到七牛云后的文件名</span></span><br><span class="line"><span class="keyword">var</span> randName = <span class="built_in">Math</span>.random().toString(<span class="number">36</span>).substr(<span class="number">2</span>) + imgPath.match(<span class="regexp">/\.?[^.\/]+$/</span>);</span><br><span class="line"><span class="keyword">var</span> task = plus.uploader.createUpload(</span><br><span class="line">       <span class="comment">// 不同的存储空间上传地址可能不一样，运行后根据返回信息做更改</span></span><br><span class="line"><span class="string">"http://upload.qiniu.com/"</span>,</span><br><span class="line">&#123; </span><br><span class="line">method: <span class="string">"POST"</span>,</span><br><span class="line">blocksize:<span class="number">204800</span>,</span><br><span class="line">priority:<span class="number">100</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="function"><span class="keyword">function</span> (<span class="params"> t, status </span>) </span>&#123;</span><br><span class="line"><span class="comment">// 上传完成</span></span><br><span class="line"><span class="keyword">if</span> ( status == <span class="number">200</span> ) &#123; </span><br><span class="line"><span class="built_in">console</span>.log( <span class="string">"Upload success: "</span> + t.url );</span><br><span class="line"><span class="comment">// 拼接出上传到去七牛云后的图片链接地址</span></span><br><span class="line"><span class="keyword">var</span> imgUrl = domain + randName; </span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">console</span>.log( <span class="string">"Upload failed: "</span> + status );</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">);</span><br><span class="line"><span class="comment">// 添加上传文件，key 值必须是七牛云所需文件对应的 key 值 "file"</span></span><br><span class="line">task.addFile(imgPath,&#123;<span class="attr">key</span>: <span class="string">"file"</span>,<span class="attr">mime</span>: <span class="string">"image/*"</span>&#125;);</span><br><span class="line"><span class="comment">// 上传到七牛云后文件的名字</span></span><br><span class="line">task.addData(<span class="string">"key"</span>,randName);</span><br><span class="line"><span class="comment">// 七牛云所需 token</span></span><br><span class="line">task.addData(<span class="string">"token"</span>,token);</span><br><span class="line"></span><br><span class="line">task.start();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参考资料：<br><a href="http://developer.qiniu.com/kodo/manual/1272/form-upload" target="_blank" rel="noopener">七牛云表单上传官方文档 &gt;&gt;</a><br><a href="http://www.html5plus.org/doc/zh_cn/uploader.html" target="_blank" rel="noopener">HBuilder 上传官方文档 &gt;&gt;</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;HBuilder 上传支持表单上传，所以上传到七牛云的时候用的也是表单上传&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/s
      
    
    </summary>
    
    
    
      <category term="HBuilder" scheme="http://www.honye.com/tags/HBuilder/"/>
    
      <category term="MUI" scheme="http://www.honye.com/tags/MUI/"/>
    
  </entry>
  
  <entry>
    <title>Android 下载安装APK</title>
    <link href="http://www.honye.com/posts/a5a9b325.html"/>
    <id>http://www.honye.com/posts/a5a9b325.html</id>
    <published>2017-03-29T17:11:28.000Z</published>
    <updated>2019-09-24T11:45:45.323Z</updated>
    
    <content type="html"><![CDATA[<h3 id="下载安装包"><a href="#下载安装包" class="headerlink" title="下载安装包"></a>下载安装包</h3><p>未整理完，暂且不写，日后更新</p><h3 id="安装应用"><a href="#安装应用" class="headerlink" title="安装应用"></a>安装应用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 安装 APK</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> activity</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fileUri 安装包地址</span></span><br><span class="line"><span class="comment">     * fileUri = Uri.parse("file://" + filePath); 或</span></span><br><span class="line"><span class="comment">     * fileUri = Uri.fromFile(File file);</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">installApk</span><span class="params">(Activity activity, Uri fileUri)</span> </span>&#123;</span><br><span class="line">        Intent intent = <span class="keyword">new</span> Intent();</span><br><span class="line">        <span class="comment">//执行动作</span></span><br><span class="line">        intent.setAction(Intent.ACTION_VIEW);</span><br><span class="line">        <span class="comment">// 如果不加无法正常显示安装过程和安装成功提示</span></span><br><span class="line">        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</span><br><span class="line">        <span class="comment">//执行的数据类型</span></span><br><span class="line">        intent.setDataAndType(fileUri, <span class="string">"application/vnd.android.package-archive"</span>);</span><br><span class="line">        activity.startActivity(intent);</span><br><span class="line">        <span class="comment">// android.os.Process.killProcess(android.os.Process.myPid());</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><a href="http://onkk8h635.bkt.clouddn.com/android/DownInstallApk.rar" target="_blank" rel="noopener">demo下载&gt;&gt;</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;下载安装包&quot;&gt;&lt;a href=&quot;#下载安装包&quot; class=&quot;headerlink&quot; title=&quot;下载安装包&quot;&gt;&lt;/a&gt;下载安装包&lt;/h3&gt;&lt;p&gt;未整理完，暂且不写，日后更新&lt;/p&gt;
&lt;h3 id=&quot;安装应用&quot;&gt;&lt;a href=&quot;#安装应用&quot; class=&quot;he
      
    
    </summary>
    
    
    
      <category term="Android" scheme="http://www.honye.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>JS 实现倒计时</title>
    <link href="http://www.honye.com/posts/2883d964.html"/>
    <id>http://www.honye.com/posts/2883d964.html</id>
    <published>2017-03-21T13:58:21.000Z</published>
    <updated>2019-09-24T11:45:45.319Z</updated>
    
    <content type="html"><![CDATA[<h3 id="利用-window-setInterval-实现倒计时"><a href="#利用-window-setInterval-实现倒计时" class="headerlink" title="利用 window.setInterval() 实现倒计时"></a>利用 window.setInterval() 实现倒计时</h3><h4 id="示例："><a href="#示例：" class="headerlink" title="示例："></a><em>示例：</em></h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> id;</span><br><span class="line"><span class="keyword">var</span> interval = <span class="number">1000</span>; </span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param year 结束日期的年</span></span><br><span class="line"><span class="comment"> * @param month 结束日期的月</span></span><br><span class="line"><span class="comment"> * @param day 结束日期的日</span></span><br><span class="line"><span class="comment"> * @param divname 需做出响应的元素id</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ShowCountDown</span>(<span class="params">year,month,day,divname</span>) </span>&#123; </span><br><span class="line"><span class="comment">// 设置结束日期</span></span><br><span class="line"><span class="keyword">var</span> endDate = <span class="keyword">new</span> <span class="built_in">Date</span>(year, month<span class="number">-1</span>, day); </span><br><span class="line"><span class="comment">// 获取当前日期</span></span><br><span class="line"><span class="keyword">var</span> now = <span class="keyword">new</span> <span class="built_in">Date</span>(); </span><br><span class="line"><span class="comment">// 计算剩余毫秒数</span></span><br><span class="line"><span class="keyword">var</span> leftTime=endDate.getTime()-now.getTime(); </span><br><span class="line"><span class="comment">// 计算剩余秒数</span></span><br><span class="line"><span class="keyword">var</span> leftsecond = <span class="built_in">parseInt</span>(leftTime/<span class="number">1000</span>); </span><br><span class="line"><span class="comment">// 剩余天数（整数倍）</span></span><br><span class="line"><span class="keyword">var</span> day1=<span class="built_in">Math</span>.floor(leftsecond/(<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>)); </span><br><span class="line"><span class="comment">// 剩余小时数（除去大单位后整数倍）</span></span><br><span class="line"><span class="keyword">var</span> hour=<span class="built_in">Math</span>.floor((leftsecond-day1*<span class="number">24</span>*<span class="number">60</span>*<span class="number">60</span>)/<span class="number">3600</span>); </span><br><span class="line"><span class="comment">// 剩余分钟数（除去大单位后整数倍）</span></span><br><span class="line"><span class="keyword">var</span> minute=<span class="built_in">Math</span>.floor((leftsecond-day1*<span class="number">24</span>*<span class="number">60</span>*<span class="number">60</span>-hour*<span class="number">3600</span>)/<span class="number">60</span>); </span><br><span class="line"><span class="comment">// 剩余秒数（除去大单位后整数倍）</span></span><br><span class="line"><span class="keyword">var</span> second=<span class="built_in">Math</span>.floor(leftsecond-day1*<span class="number">24</span>*<span class="number">60</span>*<span class="number">60</span>-hour*<span class="number">3600</span>-minute*<span class="number">60</span>); </span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> cc = <span class="built_in">document</span>.getElementById(divname); </span><br><span class="line">cc.innerHTML = <span class="string">"距离"</span> + year + <span class="string">"年"</span> + month + <span class="string">"月"</span> + day + <span class="string">"日还有："</span> + day1 + <span class="string">"天"</span> + hour + <span class="string">"小时"</span> + minute + <span class="string">"分"</span> + second + <span class="string">"秒"</span>; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 开始倒计时</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">start</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">id = <span class="built_in">window</span>.setInterval( <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">ShowCountDown(<span class="number">2023</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="string">'divdown1'</span>);</span><br><span class="line"></span><br><span class="line">&#125;, interval); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 停止倒计时</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">stop</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span> (id) &#123;</span><br><span class="line"><span class="built_in">window</span>.clearInterval(id);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="window-setInterval-注解"><a href="#window-setInterval-注解" class="headerlink" title="window.setInterval() 注解"></a>window.setInterval() 注解</h3><h4 id="1-window-setInterval"><a href="#1-window-setInterval" class="headerlink" title="1. window.setInterval()"></a>1. <code>window.setInterval()</code></h4><p><strong>功能：</strong><br>按照指定的周期（以毫秒计）来调用函数或计算表达式。<br><strong>语法：</strong><br><code>setInterval(code,millisec)</code><br><strong>参数：</strong><br>code: 在定时时间到时要执行的JavaScript代码串。<br>millisec: 设定的定时时间，用毫秒数表示。<br><strong>返回值：</strong><br>定时器的ID值，可用于clearInterval()方法停止指定的定时器。<br><strong>注：</strong><br>setInterval()方法会不停地调用函数，直到用clearInterval()终止定时或窗口被关闭。</p><h4 id="2-window-clearInterval"><a href="#2-window-clearInterval" class="headerlink" title="2. window.clearInterval()"></a>2. <code>window.clearInterval()</code></h4><p><strong>功能：</strong><br>取消由 setInterval() 方法设置的定时器。<br><strong>语法：</strong><br><code>clearInterval(id_of_setinterval)</code><br><strong>参数：</strong><br>id_of_setinterval: 由 setInterval() 返回的 id 值。该值标识了一个 setInterval 定时器。<br>也就是：window.setInterval() 返回的就是 window.clearInterval() 的参数</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;利用-window-setInterval-实现倒计时&quot;&gt;&lt;a href=&quot;#利用-window-setInterval-实现倒计时&quot; class=&quot;headerlink&quot; title=&quot;利用 window.setInterval() 实现倒计时&quot;&gt;&lt;/a&gt;利用 window.setInterval() 实现倒计时&lt;/h3&gt;&lt;h4 id=&quot;示例：&quot;&gt;&lt;a href=&quot;#示例：&quot; class=&quot;headerlink&quot; title=&quot;示例：&quot;&gt;&lt;/a&gt;&lt;em&gt;示例：&lt;/em&gt;&lt;/h4&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; id;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; interval = &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * @param year 结束日期的年&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * @param month 结束日期的月&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * @param day 结束日期的日&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * @param divname 需做出响应的元素id&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ShowCountDown&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;year,month,day,divname&lt;/span&gt;) &lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// 设置结束日期&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; endDate = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;(year, month&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;, day); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// 获取当前日期&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; now = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;(); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// 计算剩余毫秒数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; leftTime=endDate.getTime()-now.getTime(); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// 计算剩余秒数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; leftsecond = &lt;span class=&quot;built_in&quot;&gt;parseInt&lt;/span&gt;(leftTime/&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// 剩余天数（整数倍）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; day1=&lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.floor(leftsecond/(&lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;*&lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;*&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;)); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// 剩余小时数（除去大单位后整数倍）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; hour=&lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.floor((leftsecond-day1*&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;*&lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;*&lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;)/&lt;span class=&quot;number&quot;&gt;3600&lt;/span&gt;); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// 剩余分钟数（除去大单位后整数倍）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; minute=&lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.floor((leftsecond-day1*&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;*&lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;*&lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;-hour*&lt;span class=&quot;number&quot;&gt;3600&lt;/span&gt;)/&lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// 剩余秒数（除去大单位后整数倍）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; second=&lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.floor(leftsecond-day1*&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;*&lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;*&lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;-hour*&lt;span class=&quot;number&quot;&gt;3600&lt;/span&gt;-minute*&lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; cc = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(divname); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	cc.innerHTML = &lt;span class=&quot;string&quot;&gt;&quot;距离&quot;&lt;/span&gt; + year + &lt;span class=&quot;string&quot;&gt;&quot;年&quot;&lt;/span&gt; + month + &lt;span class=&quot;string&quot;&gt;&quot;月&quot;&lt;/span&gt; + day + &lt;span class=&quot;string&quot;&gt;&quot;日还有：&quot;&lt;/span&gt; + day1 + &lt;span class=&quot;string&quot;&gt;&quot;天&quot;&lt;/span&gt; + hour + &lt;span class=&quot;string&quot;&gt;&quot;小时&quot;&lt;/span&gt; + minute + &lt;span class=&quot;string&quot;&gt;&quot;分&quot;&lt;/span&gt; + second + &lt;span class=&quot;string&quot;&gt;&quot;秒&quot;&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * 开始倒计时&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;start&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	id = &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.setInterval( &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			ShowCountDown(&lt;span class=&quot;number&quot;&gt;2023&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;divdown1&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;, interval); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * 停止倒计时&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;stop&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (id) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.clearInterval(id);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="JavaScript" scheme="http://www.honye.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>遍历 Map 的四种方法</title>
    <link href="http://www.honye.com/posts/6fa78ea3.html"/>
    <id>http://www.honye.com/posts/6fa78ea3.html</id>
    <published>2017-03-21T11:07:19.000Z</published>
    <updated>2019-09-24T11:45:45.319Z</updated>
    
    <content type="html"><![CDATA[<p><strong>1. 通过 Map.keySet 遍历 key 和 value，二次取值（常用）</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> ( String key : map.keySet() ) &#123;</span><br><span class="line">    System.out.println( <span class="string">"key = "</span> + key +<span class="string">" and value = "</span> + map.get( key ) );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2. 通过 Map.entrySet 使用 iterator 遍历 key 和 value</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Iterator&lt;Map.Entry&lt;String, String&gt;&gt; it = map.entrySet().iterator();</span><br><span class="line"><span class="keyword">while</span> ( it.hasNext() ) &#123;</span><br><span class="line">    Map.Entry&lt;String, String&gt; entry = it.next();</span><br><span class="line">    System.out.println( <span class="string">"key = "</span> + entry.getKey() + <span class="string">" and value = "</span> + entry.getValue() );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3. 通过 Map.entrySet 遍历 key 和 value（推荐，尤其容量大的时候）</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> ( Map.Entry&lt;String, String&gt; entry : map.entrySet() ) &#123;</span><br><span class="line">    System.out.println( <span class="string">"key = "</span> + entry.getKey() + <span class="string">" and value = "</span> + entry.getValue() );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>4. 通过 Map.values() 遍历所有的 value，但不能遍历 key</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> ( String v : map.values() ) &#123;</span><br><span class="line">    System.out.println( <span class="string">"value = "</span> + v );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;1. 通过 Map.keySet 遍历 key 和 value，二次取值（常用）&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span cla
      
    
    </summary>
    
    
    
      <category term="Java" scheme="http://www.honye.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 在 GitHub 和 Coding 同时发布</title>
    <link href="http://www.honye.com/posts/d973cb7c.html"/>
    <id>http://www.honye.com/posts/d973cb7c.html</id>
    <published>2017-03-04T13:08:58.000Z</published>
    <updated>2019-09-24T11:45:45.319Z</updated>
    
    <content type="html"><![CDATA[<h3 id="多平台发布"><a href="#多平台发布" class="headerlink" title="多平台发布"></a>多平台发布</h3><p>在 GitHub 和 Coding 上都有博客，分开一一发布比较麻烦，其实 Hexo 是支持在多个平台发布的。<br>修改 Hexo 主目录下的 _config.yml 配置文件即可</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  - type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">    repository:</span> <span class="attr">https://github.com/Hongye567/Hongye567.github.io.git</span></span><br><span class="line"><span class="attr">    branch:</span> <span class="string">master</span></span><br><span class="line"><span class="attr">  - type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">    repository:</span> <span class="attr">https://git.coding.net/Honye/Honye.git</span></span><br><span class="line"><span class="attr">    branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="免输入密码"><a href="#免输入密码" class="headerlink" title="免输入密码"></a>免输入密码</h3><p>Hexo 每次提交时都要求输入用户名和密码，尤其在多平台发布时需要多次输入用户名和密码很是麻烦。<br>要求输入密码的原因是我们的仓库地址用的是 HTTPS 不是 SSH。</p><p><strong>1. 首先生成 SSH 密钥</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git config --global user.name <span class="string">"yourname"</span>  // 配置 git 用户名</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git config --global user.email <span class="string">"youremail@email.com"</span>  // 配置 git 邮箱</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~/.ssh  // 查看是否已有.ssh文件夹，若有可备份删除</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ssh-keygen -t rsa -C <span class="string">"youremail@email.com"</span>  // 生成 SSH 密钥</span></span><br></pre></td></tr></table></figure><p>生成密钥时会提示选择密钥保存路径，直接回车默认路径即可。<br>会提示输入密码和确认密码，直接回车代表不设置密码。</p><p><strong>2. 部署公钥</strong><br>在 GitHub 和 Coding 在部署公钥操作基本一样，我不一一赘述，仅以 GitHub 为例。<br>打开 GitHub 项目，选择上方菜单 Settings，接着选择左侧菜单 Deploy keys，接着 Add deploy key，打开前面密钥所在文件夹，将 id_rsa.pub 文件中的内容粘贴在 GitHub 即可。</p><p><strong>3. Hexo 提交</strong><br>修改 Hexo 主目录下 _config.yml 配置文件中的参数</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  - type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">    repository:</span> <span class="string">git@github.com:Hongye567/Hongye567.github.io.git</span></span><br><span class="line"><span class="attr">    branch:</span> <span class="string">master</span></span><br><span class="line"><span class="attr">  - type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">    repository:</span> <span class="string">git@git.coding.net:Honye/Honye.git</span></span><br><span class="line"><span class="attr">    branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>现在提交就可以不用输入密码了。提交的时候可能会报 authenticity 可靠性问题，直接输入 yes 忽略即可。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;多平台发布&quot;&gt;&lt;a href=&quot;#多平台发布&quot; class=&quot;headerlink&quot; title=&quot;多平台发布&quot;&gt;&lt;/a&gt;多平台发布&lt;/h3&gt;&lt;p&gt;在 GitHub 和 Coding 上都有博客，分开一一发布比较麻烦，其实 Hexo 是支持在多个平台发布的。&lt;br&gt;修改 Hexo 主目录下的 _config.yml 配置文件即可&lt;/p&gt;
&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;deploy:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  - type:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;git&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    repository:&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;https://github.com/Hongye567/Hongye567.github.io.git&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    branch:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;master&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  - type:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;git&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    repository:&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;https://git.coding.net/Honye/Honye.git&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    branch:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;master&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="Hexo" scheme="http://www.honye.com/tags/Hexo/"/>
    
      <category term="GitHub" scheme="http://www.honye.com/tags/GitHub/"/>
    
      <category term="Coding" scheme="http://www.honye.com/tags/Coding/"/>
    
  </entry>
  
  <entry>
    <title>hexo 在 coding 上部署博客</title>
    <link href="http://www.honye.com/posts/b3459307.html"/>
    <id>http://www.honye.com/posts/b3459307.html</id>
    <published>2017-03-04T12:11:58.000Z</published>
    <updated>2019-09-24T11:45:45.319Z</updated>
    
    <content type="html"><![CDATA[<p>之前是在 GitHub 上部署的静态博客，由于 GitHub 属于国外网站，访问速度慢，听闻可以在 Coding 部署博客，故而转向 Coding。</p><h3 id="1-Hexo-环境搭建"><a href="#1-Hexo-环境搭建" class="headerlink" title="1. Hexo 环境搭建"></a>1. Hexo 环境搭建</h3><p>Hexo 的环境搭建我之前在 GitHub 搭建博客教程中已经说明，不在赘述。也可到 Hexo 官网查看文档。</p><h3 id="2-在-Coding-上新建项目"><a href="#2-在-Coding-上新建项目" class="headerlink" title="2. 在 Coding 上新建项目"></a>2. 在 Coding 上新建项目</h3><p>理论上项目名称没要求，但是在我实际操作中出现了引用资源未找到的问题。在引用路径上缺少了一个项目名。所以我的项目名和我的用户名一致，理由是如果项目名和用户名不一致，访问地址必须是 {user_name}.coding.me/{project_name}，如果项目名与用户名一致，可使用 {user_name}.coding.me 直接访问，也避免了上面说的资源引用问题，是我推荐的。<br>若有大神能解决资源引用问题用其他名字也是可行的。项目可私有，不影响访问。<br>选择项目，进入代码页面，选择 Pages 服务，部署来源后即可访问。</p><a id="more"></a><h3 id="3-Hexo-Push"><a href="#3-Hexo-Push" class="headerlink" title="3. Hexo Push"></a>3. Hexo Push</h3><p>提交和在 GitHub 大致没什么区别，只需要在 Hexo 主目录的 _config.yml 配置文件中更改下仓库地址即可。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span> </span><br><span class="line"><span class="attr">    type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">    repository:</span> <span class="attr">https://git.coding.net/&#123;user_name&#125;/&#123;project_name&#125;.git</span></span><br><span class="line"><span class="attr">    branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>提交玩后就可以访问查看效果了</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前是在 GitHub 上部署的静态博客，由于 GitHub 属于国外网站，访问速度慢，听闻可以在 Coding 部署博客，故而转向 Coding。&lt;/p&gt;
&lt;h3 id=&quot;1-Hexo-环境搭建&quot;&gt;&lt;a href=&quot;#1-Hexo-环境搭建&quot; class=&quot;headerlink&quot; title=&quot;1. Hexo 环境搭建&quot;&gt;&lt;/a&gt;1. Hexo 环境搭建&lt;/h3&gt;&lt;p&gt;Hexo 的环境搭建我之前在 GitHub 搭建博客教程中已经说明，不在赘述。也可到 Hexo 官网查看文档。&lt;/p&gt;
&lt;h3 id=&quot;2-在-Coding-上新建项目&quot;&gt;&lt;a href=&quot;#2-在-Coding-上新建项目&quot; class=&quot;headerlink&quot; title=&quot;2. 在 Coding 上新建项目&quot;&gt;&lt;/a&gt;2. 在 Coding 上新建项目&lt;/h3&gt;&lt;p&gt;理论上项目名称没要求，但是在我实际操作中出现了引用资源未找到的问题。在引用路径上缺少了一个项目名。所以我的项目名和我的用户名一致，理由是如果项目名和用户名不一致，访问地址必须是 {user_name}.coding.me/{project_name}，如果项目名与用户名一致，可使用 {user_name}.coding.me 直接访问，也避免了上面说的资源引用问题，是我推荐的。&lt;br&gt;若有大神能解决资源引用问题用其他名字也是可行的。项目可私有，不影响访问。&lt;br&gt;选择项目，进入代码页面，选择 Pages 服务，部署来源后即可访问。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Hexo" scheme="http://www.honye.com/tags/Hexo/"/>
    
      <category term="Coding" scheme="http://www.honye.com/tags/Coding/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 编译时 JS 混乱解决方案</title>
    <link href="http://www.honye.com/posts/528ee353.html"/>
    <id>http://www.honye.com/posts/528ee353.html</id>
    <published>2017-03-03T16:00:17.000Z</published>
    <updated>2019-09-24T11:45:45.319Z</updated>
    
    <content type="html"><![CDATA[<p>之前为在 GitHub 博客上写自己的 html 网页，在 hexo 根目录下的 source 文件夹中放了自己的 js 文件，每次 <code>hexo g</code> 后，pubic 文件夹中的 js 文件就混乱了，与自己实际 js 不一致。</p><p><strong>解决方案：</strong></p><ol><li><code>hexo g</code> 编译后在 public 文件夹中修改，将自己的 js 文件覆盖 hexo 编译后的 js 文件。或者 <code>hexo d</code> 提交到 GitHub 后直接到 GitHub 线上修改 js 文件。</li><li>博客中的 js 引用使用外链的形式。如将 js 文件上传<a href="http://www.qiniu.com/" target="_blank" rel="noopener">七牛云</a>，引用七牛云上的 js。</li><li>跳过 hexo 渲染【推荐】。<br>Hexo 3.0 以下使用：<br>在主目录下添加 README.md 文件或者 html 文件。<br>Hexo 3.0 以上支持：<br>修改 Hexo 主目录下的 _config.yml 配置文件中的 skip_render 参数。</li></ol><a id="more"></a><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">skip_render:</span> <span class="string">"test.html"</span>    <span class="comment"># source 文件夹下指定文件</span></span><br><span class="line"></span><br><span class="line"><span class="attr">skip_render:</span> <span class="string">test/*</span>    <span class="comment"># 单个文件夹下全部文件</span></span><br><span class="line"></span><br><span class="line"><span class="attr">skip_render:</span> <span class="string">test/*.md</span>    <span class="comment"># 单个文件夹下指定类型文件</span></span><br><span class="line"></span><br><span class="line"><span class="attr">skip_render:</span> <span class="string">test/**</span>    <span class="comment"># 单个文件夹下全部文件及子文件</span></span><br><span class="line"></span><br><span class="line"><span class="attr">skip_render:</span>         <span class="comment"># 多个文件夹以及其他情况</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">test/*</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">test/*.html</span></span><br></pre></td></tr></table></figure><p><em>注：若修改配置后不见效果，先执行 <code>hexo clean</code> 后再执行 <code>hexo g</code> 重新编译</em></p><p><a href="https://segmentfault.com/q/1010000003957602/revision" target="_blank" rel="noopener">原文&gt;&gt;</a><br><a href="https://xuanwo.org/2014/08/14/hexo-usual-problem/" target="_blank" rel="noopener">Hexo 常见问题解决方案</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前为在 GitHub 博客上写自己的 html 网页，在 hexo 根目录下的 source 文件夹中放了自己的 js 文件，每次 &lt;code&gt;hexo g&lt;/code&gt; 后，pubic 文件夹中的 js 文件就混乱了，与自己实际 js 不一致。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;解决方案：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;hexo g&lt;/code&gt; 编译后在 public 文件夹中修改，将自己的 js 文件覆盖 hexo 编译后的 js 文件。或者 &lt;code&gt;hexo d&lt;/code&gt; 提交到 GitHub 后直接到 GitHub 线上修改 js 文件。&lt;/li&gt;
&lt;li&gt;博客中的 js 引用使用外链的形式。如将 js 文件上传&lt;a href=&quot;http://www.qiniu.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;七牛云&lt;/a&gt;，引用七牛云上的 js。&lt;/li&gt;
&lt;li&gt;跳过 hexo 渲染【推荐】。&lt;br&gt;Hexo 3.0 以下使用：&lt;br&gt;在主目录下添加 README.md 文件或者 html 文件。&lt;br&gt;Hexo 3.0 以上支持：&lt;br&gt;修改 Hexo 主目录下的 _config.yml 配置文件中的 skip_render 参数。&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
    
      <category term="Hexo" scheme="http://www.honye.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>MUI返回传参</title>
    <link href="http://www.honye.com/posts/8a8d53c0.html"/>
    <id>http://www.honye.com/posts/8a8d53c0.html</id>
    <published>2017-02-05T10:40:09.000Z</published>
    <updated>2019-09-24T11:45:45.319Z</updated>
    
    <content type="html"><![CDATA[<p>从a页面跳转到b页面，从b页面返回到a页面时向a页面传递一个参数，a页面接收到参数后做出响应<br><strong>a.html</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/mui.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"css/mui.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">      mui.init();</span><br><span class="line"><span class="actionscript">      (<span class="function"><span class="keyword">function</span><span class="params">($)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="function"><span class="keyword">function</span> <span class="title">plusReady</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">      mui(<span class="string">'body'</span>).on(<span class="string">'tap'</span>, <span class="string">'.jump'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line">      mui.openWindow(&#123;</span><br><span class="line"><span class="actionscript">      url: <span class="string">'b.html'</span>,</span></span><br><span class="line"><span class="actionscript">      id: <span class="string">'b'</span></span></span><br><span class="line">      &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line"><span class="actionscript"><span class="comment">//      if(window.plus) &#123;</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//      alert("准备好了");</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//      plusReady();</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//      &#125; else &#123;</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//      alert("未准备");</span></span></span><br><span class="line"><span class="javascript">      <span class="built_in">document</span>.addEventListener(<span class="string">'plusready'</span>, plusReady, <span class="literal">false</span>);</span></span><br><span class="line"><span class="actionscript"><span class="comment">//      &#125;</span></span></span><br><span class="line">      </span><br><span class="line"><span class="actionscript">      <span class="comment">// 返回回来要执行的方法</span></span></span><br><span class="line"><span class="actionscript">      <span class="function"><span class="keyword">function</span> <span class="title">backRes</span><span class="params">(e)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> val = e.detail.inputVal;</span></span><br><span class="line"><span class="javascript">      $(<span class="string">'.a1 font'</span>)[<span class="number">0</span>].innerHTML = val;</span></span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line"><span class="actionscript">      <span class="comment">// 自定义窗体事件 doit要和b页面定义的事件一致</span></span></span><br><span class="line"><span class="javascript">      <span class="built_in">window</span>.addEventListener(<span class="string">'doit'</span>, backRes);</span></span><br><span class="line">      </span><br><span class="line">&#125;)(mui);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">style</span>=<span class="string">"padding: 15px;line-height: 1.7rem;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"jump"</span>&gt;</span>跳转到B页面<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"a1"</span>&gt;</span>返回传参为----<span class="tag">&lt;<span class="name">font</span> <span class="attr">style</span>=<span class="string">"font-size: 20px;color: #2AC845;"</span>&gt;</span><span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"font-size: 50px;text-align: center;display: block;margin: 50px 0 0 0;"</span>&gt;</span>a.html页面<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><a id="more"></a><p><strong>b.html</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"css/mui.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">style</span>=<span class="string">"padding: 15px;line-height: 1.7rem;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"text"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:void(0)"</span> <span class="attr">class</span>=<span class="string">"jump"</span>&gt;</span>返回<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"font-size: 50px;text-align: center;display: block;margin: 50px 0 0 0;"</span>&gt;</span>b.html页面<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/mui.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line">mui.init();</span><br><span class="line"><span class="actionscript">(<span class="function"><span class="keyword">function</span><span class="params">($)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span>(<span class="built_in">window</span>.plus) &#123;</span></span><br><span class="line">plusReady();</span><br><span class="line"><span class="actionscript">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.addEventListener(<span class="string">'plusready'</span>, plusReady, <span class="literal">false</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="actionscript"><span class="function"><span class="keyword">function</span> <span class="title">plusReady</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">mui(<span class="string">'body'</span>).on(<span class="string">'tap'</span>, <span class="string">'.jump'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> view = plus.webview.getWebviewById(<span class="string">'HBuilder'</span>);</span></span><br><span class="line"><span class="actionscript"><span class="comment">// 注意HBuilder是上个页面的ID你自己要替换掉</span></span></span><br><span class="line"><span class="actionscript">mui.fire(view, <span class="string">'doit'</span>, &#123;</span></span><br><span class="line"><span class="javascript">inputVal: $(<span class="string">'#text'</span>)[<span class="number">0</span>].value</span></span><br><span class="line">&#125;);</span><br><span class="line">mui.back();</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;)(mui);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;从a页面跳转到b页面，从b页面返回到a页面时向a页面传递一个参数，a页面接收到参数后做出响应&lt;br&gt;&lt;strong&gt;a.html&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;js/mui.min.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;css/mui.min.css&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      	mui.init();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;actionscript&quot;&gt;      	(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;($)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;actionscript&quot;&gt;	      	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;plusReady&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;actionscript&quot;&gt;	      		mui(&lt;span class=&quot;string&quot;&gt;&#39;body&#39;&lt;/span&gt;).on(&lt;span class=&quot;string&quot;&gt;&#39;tap&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;.jump&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	      			mui.openWindow(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;actionscript&quot;&gt;	      				url: &lt;span class=&quot;string&quot;&gt;&#39;b.html&#39;&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;actionscript&quot;&gt;	      				id: &lt;span class=&quot;string&quot;&gt;&#39;b&#39;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	      			&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	      		&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	      	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	      	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;actionscript&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//	      	if(window.plus) &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;actionscript&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//	      		alert(&quot;准备好了&quot;);&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;actionscript&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//	      		plusReady();&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;actionscript&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//	      	&amp;#125; else &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;actionscript&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//	      		alert(&quot;未准备&quot;);&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;	      		&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;plusready&#39;&lt;/span&gt;, plusReady, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;actionscript&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//	      	&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	      	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;actionscript&quot;&gt;	      	&lt;span class=&quot;comment&quot;&gt;// 返回回来要执行的方法&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;actionscript&quot;&gt;	      	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;backRes&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(e)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;actionscript&quot;&gt;	      		&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; val = e.detail.inputVal;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;	      		$(&lt;span class=&quot;string&quot;&gt;&#39;.a1 font&#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].innerHTML = val;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	      	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	      	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;actionscript&quot;&gt;	      	&lt;span class=&quot;comment&quot;&gt;// 自定义窗体事件 doit要和b页面定义的事件一致&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;	      	&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;doit&#39;&lt;/span&gt;, backRes);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	      	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;)(mui);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;padding: 15px;line-height: 1.7rem;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;jump&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;跳转到B页面&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;a1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;返回传参为----&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;font&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;font-size: 20px;color: #2AC845;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;font&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;font-size: 50px;text-align: center;display: block;margin: 50px 0 0 0;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;a.html页面&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="MUI" scheme="http://www.honye.com/tags/MUI/"/>
    
  </entry>
  
  <entry>
    <title>利用hexo和github搭建博客（一）</title>
    <link href="http://www.honye.com/posts/7e4c8da2.html"/>
    <id>http://www.honye.com/posts/7e4c8da2.html</id>
    <published>2016-12-16T16:14:25.000Z</published>
    <updated>2019-09-24T11:45:45.319Z</updated>
    
    <content type="html"><![CDATA[<p>在搜素文章时无意间发现一篇很漂亮的博客，一看时个人博客，自己也就想创建一个属于自己的博客，初步完成后就写下此文章便于日后查询。</p><p>本文是利用hexo在GitHub上建立的静态博客。<br>主要有三个步骤：</p><blockquote><ol><li>下载和安装所需软件</li><li>搭建本地静态博客</li><li>将本地博客同步到GitHub上</li><li>购买设置专属域名（可选）</li></ol></blockquote><a id="more"></a><h2 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h2><blockquote><ol><li><a href="https://nodejs.org/" target="_blank" rel="noopener">node.js</a></li><li><a href="https://git-scm.com/" target="_blank" rel="noopener">git</a></li><li>hexo</li></ol></blockquote><p>node.js 和 git 我就不多说了，自己在官网按着官方指示一步一步下载安装。我主要来说明下hexo的安装。<br>node.js 和 git 安装完成后，新建一个博客目录，在目录下使用 <code>git bash here</code> （可用命令行）执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo</span><br></pre></td></tr></table></figure><p>根据网络情况下载，等待安装完成</p><h2 id="搭建本地博客"><a href="#搭建本地博客" class="headerlink" title="搭建本地博客"></a>搭建本地博客</h2><p>cd 到本地博客路径，初始化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init</span><br></pre></td></tr></table></figure><p>安装依赖包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p>重启后再在博客目录下,生成必要文件和部署</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>启动 hexo，在本地预览</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>在浏览器输入 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000</a> 预览。若正常显示，则本地博客初始化成功</p><h2 id="同步到-GitHub"><a href="#同步到-GitHub" class="headerlink" title="同步到 GitHub"></a>同步到 GitHub</h2><p>登录 <a href="https://github.com/" target="_blank" rel="noopener">GitHub</a>，没有账号的 Sign up（注册）一个，已有账号的直接登录 Sign in（登录）<br>登陆后点击“+”选择“New repository”</p><blockquote><ul><li>Repository name：指定格式：’GitHub用户名’.github.io</li><li>Description：可选</li><li>Public：必须公开</li></ul></blockquote><p>在本地博客目录下有一个<code>_config.yml</code>配置文件，使用编辑器打开，修改<code>Deployment</code>部分：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: http://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">github</span></span><br><span class="line"><span class="attr">  repository:</span> <span class="attr">https://github.com/voidking/voidking.github.io.git</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p><strong>注意：冒号后面必须跟一个空格，不然会出错</strong><br>再在博客目录下执行如下命令同步到GitHub</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>若报错 <code>error deployer not found:github</code> 可能是 hexo 更新问题<br>解决方案：将 <code>github</code> 改为 <code>git</code>、将 <code>https</code> 改为 <code>http</code> 后重试</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: http://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repository:</span> <span class="attr">http://github.com/voidking/voidking.github.io.git</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>若还是报错，先执行如下指令后重试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>在浏览器访问<a href="https://chengjunx.github.io/" target="_blank" rel="noopener">https://‘GitHub用户名’.github.io</a>，若正常显示，则博客已同步到GitHub</p><p>至此静态博客就初步搭建完成了！！！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在搜素文章时无意间发现一篇很漂亮的博客，一看时个人博客，自己也就想创建一个属于自己的博客，初步完成后就写下此文章便于日后查询。&lt;/p&gt;
&lt;p&gt;本文是利用hexo在GitHub上建立的静态博客。&lt;br&gt;主要有三个步骤：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;下载和安装所需软件&lt;/li&gt;
&lt;li&gt;搭建本地静态博客&lt;/li&gt;
&lt;li&gt;将本地博客同步到GitHub上&lt;/li&gt;
&lt;li&gt;购买设置专属域名（可选）&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
    
      <category term="Hexo" scheme="http://www.honye.com/tags/Hexo/"/>
    
      <category term="GitHub" scheme="http://www.honye.com/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://www.honye.com/posts/4a17b156.html"/>
    <id>http://www.honye.com/posts/4a17b156.html</id>
    <published>2016-11-05T22:26:27.000Z</published>
    <updated>2019-09-24T11:45:45.323Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>几个常见的 Git 代码托管平台</title>
    <link href="http://www.honye.com/posts/6c8e222d.html"/>
    <id>http://www.honye.com/posts/6c8e222d.html</id>
    <published>2016-11-01T20:03:01.000Z</published>
    <updated>2019-09-24T11:45:45.323Z</updated>
    
    <content type="html"><![CDATA[<p>说到 Git 代码托管平台，首先推荐的是 GitHub，好多好的开源项目都来自 GitHub，但是 GitHub 只能新建公开的 Git 仓库，私有仓库要收费，如果你做的是一个开源项目，可以首选 GitHub。下面推荐几个比较好的 Git 代码托管平台，这里我不做过多的说明和评价，也好让大家多看看，比较一下，找到自己的”真爱”。</p><a id="more"></a><p>1、GitHub</p><p>关于GItHub相信大家都有耳闻，我就不详细介绍了。GitHub地址：<a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a>，其首页如图：</p><p>  <img src="http://static.open-open.com/lib/uploadImg/20150108/20150108160808_916.png" alt></p><p>2、GitLab</p><p>对于有些人，提到 GitHub 就会自然的想到 Gitlab, Gitlab 支持无限的公有项目和私有项目。Gitlab 地址：<a href="https://about.gitlab.com/" target="_blank" rel="noopener">https://about.gitlab.com/</a>，其首页截图如图：</p><p>  <img src="http://static.open-open.com/lib/uploadImg/20150108/20150108160808_277.png" alt></p><p>3、Bitbucket</p><p>Bitbucket 免费支持5个开发成员的团队创建无限私有代码托管库。Bitbucket地址：<a href="https://bitbucket.org/" target="_blank" rel="noopener">https://bitbucket.org/</a>，首页如图：</p><p><img src="http://static.open-open.com/lib/uploadImg/20150108/20150108160808_866.png" alt></p><p>4、(推荐)开源中国代码托管</p><p>前面说的都是国外的，下面来说几个国内的。开源中国一个账号最多可以创建1000个项目，包含公有和私有。Git @ OSC 是开源中国社区团队基于开源项目 GitLab 开发的在线代码托管平台。Git @ OSC 除了提供最基础的 git 代码托管之外，还提供代码在线查看、历史版本查看、Fork、Pull Reuqest 、打包下载任意版本、Issue、Wiki 等方便管理、开发、协作、共享的功能，具体请查看帮助。开源中国代码托管地址：<a href="http://git.oschina.net/" target="_blank" rel="noopener">http://git.oschina.net/</a>，其首页如图：</p><p><img src="http://static.open-open.com/lib/uploadImg/20150108/20150108160808_540.png" alt></p><p>开源中国在几个月前又发布了团队协作开发平台，和代码托管平台一起，打造了一个十分好的团队开发平台，开源中国团队协作平台地址：<a href="http://team.oschina.net/" target="_blank" rel="noopener">http://team.oschina.net/</a>，团队协作平台支持任务的创建、讨论、便签等，如图：</p><p><img src="http://static.open-open.com/lib/uploadImg/20150108/20150108160808_985.png" alt></p><p>5、(推荐)Coding.net</p><p>谈到 coding.net, 首先必须提的是速度快，功能与开源中国相似，同样一个账号最多可以创建1000个项目，也支持任务的创建等。coding.net地址：<a href="https://coding.net/home.html" target="_blank" rel="noopener">https://coding.net/home.html</a>，其首页如图：</p><p><img src="http://static.open-open.com/lib/uploadImg/20150108/20150108160808_51.png" alt></p><p>6、CSDN 代码托管</p><p>2013年6月28日推出代码托管与社交编程平台“CODE”，CSDN CODE 系统搭建于阿里云 IaaS 平台之上，向个人开发者、IT 团队及企业提供代码托管、在线协作、社交编程、项目管理等服务。作为 CSDN 整体服务的一部分， CSDN CODE 平台使用 CSDN 通行证系统，与 CSDN 其他业务账号互通， 方便用户在各个业务间切换。CSDN 代码托管地址：<a href="https://code.csdn.net/" target="_blank" rel="noopener">https://code.csdn.net/</a>，首页如图：</p><p><img src="http://static.open-open.com/lib/uploadImg/20150108/20150108160809_562.png" alt></p><p>7、京东代码托管平台</p><p>作为京东电商云生态的重要一环，京东云汇中的代码托管平台2013年7月份起全面对外开放，用户只要拥有京东账号即可使用的代码托管服务。此外，为了支持国内程序员开源社区建设，目前平台对每个项目均提供免费的1G存储空间，并设置了“代码一键迁移”功能，用户可以方便的从其他GIT代码托管平台转移其项目到京东代码库。京东云汇中开放的免费代码托管平台实现了基于Git的开发任务分包管理、代码在线和离线编辑、编码助手、代码版本管理等全程的代码管理服务。京东代码托管平台地址：<a href="https://code.jd.com/" target="_blank" rel="noopener">https://code.jd.com/</a>，首页如图：</p><p><img src="http://static.open-open.com/lib/uploadImg/20150108/20150108160809_941.png" alt></p><p>8、淘宝代码托管平台 <a href="http://code.taobao.org/" target="_blank" rel="noopener">http://code.taobao.org/</a></p><p>TaoCode 是为开源爱好者和广大技术人员提供交流、孵化、创新项目的平台，同时平台也遵循开源理念全面开源，欢迎更多朋友来参与平台建设，希望在我们共同的努力下能加速中国开源消费者向开源贡献者的转变。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;说到 Git 代码托管平台，首先推荐的是 GitHub，好多好的开源项目都来自 GitHub，但是 GitHub 只能新建公开的 Git 仓库，私有仓库要收费，如果你做的是一个开源项目，可以首选 GitHub。下面推荐几个比较好的 Git 代码托管平台，这里我不做过多的说明和评价，也好让大家多看看，比较一下，找到自己的”真爱”。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Git" scheme="http://www.honye.com/tags/Git/"/>
    
  </entry>
  
</feed>
