<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hongye</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.hongye567.top/"/>
  <updated>2017-05-15T02:22:05.042Z</updated>
  <id>http://www.hongye567.top/</id>
  
  <author>
    <name>Hongye</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Chrome 几个值得推荐的插件</title>
    <link href="http://www.hongye567.top/2017/05/14/Google-Chrome-%E5%87%A0%E4%B8%AA%E5%80%BC%E5%BE%97%E6%8E%A8%E8%8D%90%E7%9A%84%E6%8F%92%E4%BB%B6/"/>
    <id>http://www.hongye567.top/2017/05/14/Google-Chrome-几个值得推荐的插件/</id>
    <published>2017-05-14T08:59:29.000Z</published>
    <updated>2017-05-15T02:22:05.042Z</updated>
    
    <content type="html"><![CDATA[<p>推荐几款自己正在使用的插件，推荐等级与顺序无关。</p>
<ol>
<li>Anything to QRcode<br>通过右键菜单或地址栏按钮将当前页面地址、选中的文本、链接、图片地址等文本内容生成二维码，也可以解析页面中的二维码图片，完全离线可用，不依赖任何远程文件和服务，内存占用小，不常驻后台，界面简洁，无广告。<br>作者用于测试 web 适配，当开发的网页需要用手机测试时，不再需要手动输入二维码，用此插件生成二维码后手机扫码访问即可。<br><img src="http://opz28dn03.bkt.clouddn.com/2017-05-14-17-07-58.jpg" alt=""><br><img src="http://opz28dn03.bkt.clouddn.com/2017-05-14-17-08-20.jpg" alt=""><br><img src="http://opz28dn03.bkt.clouddn.com/2017-05-14-17-08-51.jpg" alt=""></li>
<li>Infinity 新标签页<br>Infinity新标签页，基于Chrome的云应用服务，让你更优雅、轻松地使用Chrome。<br><img src="http://opz28dn03.bkt.clouddn.com/2017-05-14-17-10-38.jpg" alt=""><br><img src="http://opz28dn03.bkt.clouddn.com/2017-05-14-17-11-11.jpg" alt=""></li>
<li>JSON-handle<br>对JSON格式的内容进行浏览和编辑，以树形图样式展现JSON文档，并可实时编辑。<br><img src="http://opz28dn03.bkt.clouddn.com/2017-05-14-17-14-56.jpg" alt=""><br><img src="http://opz28dn03.bkt.clouddn.com/2017-05-14-17-15-09.jpg" alt=""></li>
<li><p>Octotree<br>Extension to show code tree for GitHub and GitLab.  </p>
<p>Features:</p>
<ul>
<li>Easy-to-navigate code tree like IDEs</li>
<li>Support private repositories</li>
<li>Support GitHub and GitLab Enterprise</li>
</ul>
<p>Learn more about Octotree settings: <a href="https://github.com/buunguyen/octotree#settings" target="_blank" rel="external">https://github.com/buunguyen/octotree#settings</a><br><img src="http://opz28dn03.bkt.clouddn.com/2017-05-14-17-19-48.jpg" alt=""></p>
</li>
<li>Postman<br>Supercharge your API workflow with Postman!<br><img src="http://opz28dn03.bkt.clouddn.com/2017-05-14-17-22-01.jpg" alt=""><br><img src="http://opz28dn03.bkt.clouddn.com/2017-05-14-17-22-36.jpg" alt=""></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;推荐几款自己正在使用的插件，推荐等级与顺序无关。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Anything to QRcode&lt;br&gt;通过右键菜单或地址栏按钮将当前页面地址、选中的文本、链接、图片地址等文本内容生成二维码，也可以解析页面中的二维码图片，完全离线可用，不依赖任何远程文件和服
    
    </summary>
    
    
      <category term="Chrome" scheme="http://www.hongye567.top/tags/Chrome/"/>
    
  </entry>
  
  <entry>
    <title>Android style 样式应用学习</title>
    <link href="http://www.hongye567.top/2017/05/09/Android-style-%E6%A0%B7%E5%BC%8F/"/>
    <id>http://www.hongye567.top/2017/05/09/Android-style-样式/</id>
    <published>2017-05-09T04:47:11.000Z</published>
    <updated>2017-05-09T04:47:30.762Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--透明状态栏 19及以上--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"android:windowTranslucentStatus"</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line"><span class="comment">&lt;!--透明导航栏 19及以上--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"android:windowTranslucentNavigation"</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line"><span class="comment">&lt;!--标题栏颜色--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"colorPrimary"</span>&gt;</span>@color/colorPrimary<span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line"><span class="comment">&lt;!--状态栏颜色--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"colorPrimaryDark"</span>&gt;</span>@color/colorPrimary<span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line"><span class="comment">&lt;!--强调色，一些控件和游标的颜色--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"colorAccent"</span>&gt;</span>@color/colorPrimary<span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line"><span class="comment">&lt;!--是否半透明--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"android:windowIsTranslucent"</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="应用一：修改状态栏颜色"><a href="#应用一：修改状态栏颜色" class="headerlink" title="应用一：修改状态栏颜色"></a>应用一：修改状态栏颜色</h3><p>当 values 文件夹和 values-v19 文件夹中存在相同命名的 style，最后会采用最接近设备 API 的版本，如我的手机 API 19，会采用 values-v19 中的样式，而不采用 values 中的样式</p>
]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://www.hongye567.top/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>React Native 之在设备上运行</title>
    <link href="http://www.hongye567.top/2017/05/07/React-Native-%E4%B9%8B%E5%9C%A8%E8%AE%BE%E5%A4%87%E4%B8%8A%E8%BF%90%E8%A1%8C/"/>
    <id>http://www.hongye567.top/2017/05/07/React-Native-之在设备上运行/</id>
    <published>2017-05-07T11:24:21.000Z</published>
    <updated>2017-05-09T05:13:00.786Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>转自: <a href="http://reactnative.cn/docs/0.44/running-on-device-android.html" target="_blank" rel="external">http://reactnative.cn/docs/0.44/running-on-device-android.html</a></p>
</blockquote>
<h2 id="前提条件：USB调试"><a href="#前提条件：USB调试" class="headerlink" title="前提条件：USB调试"></a>前提条件：USB调试</h2><p>你需要开启USB调试才能在你的设备上安装你的APP。首先，确定<a href="https://www.baidu.com/s?wd=%E5%AE%89%E5%8D%93%E6%89%93%E5%BC%80usb%E8%B0%83%E8%AF%95" target="_blank" rel="external">你已经打开设备的USB调试开关</a></p>
<p>确保你的设备已经<strong>成功连接</strong>。可以输入<code>adb devices</code>来查看:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ adb devices</div><div class="line">List of devices attached</div><div class="line">emulator-5554 offline   # Google模拟器</div><div class="line">14ed2fcc device         # 真实设备</div></pre></td></tr></table></figure>
<p>在右边那列看到<strong>device</strong>说明你的设备已经被正确连接了。注意，你只应当<strong>连接仅仅一个设备</strong>。</p>
<p><strong>译注</strong>：如果你连接了多个设备（包含模拟器在内），后续的一些操作可能会失败。拔掉不需要的设备，或者关掉模拟器，确保adb devices的输出只有一个是连接状态。</p>
<p>现在你可以运行<code>react-native run-android</code>来在设备上安装并启动应用了。</p>
<a id="more"></a>
<p><strong>译注</strong>：在真机上运行时可能会遇到白屏的情况，请找到并开启<code>悬浮窗权限</code>。比如miui系统的设置<a href="http://jingyan.baidu.com/article/f25ef25466c0fc482d1b824d.html" target="_blank" rel="external">在此处</a>。</p>
<blockquote>
<p>提示</p>
<p>你还可以运行<code>react-native run-android --variant=release</code>来安装release版的应用。当然你需要<a href="http://reactnative.cn/docs/0.44/signed-apk-android.html" target="_blank" rel="external">先配置好签名</a>，且此时无法再开启开发者菜单。注意在debug和release版本间来回切换安装时可能会报错签名不匹配，此时需要先卸载前一个版本再尝试安装。</p>
</blockquote>
<h2 id="从设备上访问开发服务器。"><a href="#从设备上访问开发服务器。" class="headerlink" title="从设备上访问开发服务器。"></a>从设备上访问开发服务器。</h2><p>在启用开发服务器的情况下，你可以快速的迭代修改应用，然后在设备上查看结果。按照下面描述的任意一种方法来使你的运行在电脑上的开发服务器可以从设备上访问到。</p>
<blockquote>
<p>注意</p>
<p>大部分现代的安卓设备已经没有了硬件”Menu”按键，这是我们用来调出开发者菜单的。在这种情况下你可以通过摇晃设备来打开开发者菜单(重新加载、调试，等等……)</p>
</blockquote>
<h3 id="Android-5-0及以上-使用adb-reverse命令"><a href="#Android-5-0及以上-使用adb-reverse命令" class="headerlink" title="(Android 5.0及以上)使用adb reverse命令"></a>(Android 5.0及以上)使用adb reverse命令</h3><blockquote>
<p>注意，这个选项只能在5.0以上版本(API 21+)的安卓设备上使用。</p>
</blockquote>
<p>首先把你的设备通过USB数据线连接到电脑上，并开启USB调试（关于如何开启USB调试，参见上面的章节）。</p>
<ol>
<li>运行<code>adb reverse tcp:8081 tcp:8081</code></li>
<li>不需要更多配置，你就可以使用<code>Reload JS</code>和其它的开发选项了。</li>
</ol>
<h3 id="Android-5-0以下-通过Wi-Fi连接你的本地开发服务器"><a href="#Android-5-0以下-通过Wi-Fi连接你的本地开发服务器" class="headerlink" title="(Android 5.0以下)通过Wi-Fi连接你的本地开发服务器"></a>(Android 5.0以下)通过Wi-Fi连接你的本地开发服务器</h3><ol>
<li>首先确保你的电脑和手机设备在<strong>同一个Wi-Fi环境</strong>下。</li>
<li>在设备上运行你的React Native应用。和打开其它App一样操作。</li>
<li>你应该会看到一个“红屏”错误提示。这是正常的，下面的步骤会解决这个报错。</li>
<li>摇晃设备，或者运行<code>adb shell input keyevent 82</code>，可以打开<strong>开发者菜单</strong>。</li>
<li>点击进入<code>Dev Settings</code>。</li>
<li>点击<code>Debug server host for device</code>。</li>
<li>输入你电脑的IP地址和端口号（譬如10.0.1.1:8081）。<strong>在Mac上</strong>，你可以在系统设置/网络里找查询你的IP地址。<strong>在Windows上</strong>，打开命令提示符并输入<code>ipconfig</code>来查询你的IP地址。<strong>在Linux上</strong>你可以在终端中输入<code>ifconfig</code>来查询你的IP地址。</li>
<li>回到<strong>开发者菜单</strong>然后选择<code>Reload JS</code>。</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;转自: &lt;a href=&quot;http://reactnative.cn/docs/0.44/running-on-device-android.html&quot;&gt;http://reactnative.cn/docs/0.44/running-on-device-android.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;前提条件：USB调试&quot;&gt;&lt;a href=&quot;#前提条件：USB调试&quot; class=&quot;headerlink&quot; title=&quot;前提条件：USB调试&quot;&gt;&lt;/a&gt;前提条件：USB调试&lt;/h2&gt;&lt;p&gt;你需要开启USB调试才能在你的设备上安装你的APP。首先，确定&lt;a href=&quot;https://www.baidu.com/s?wd=%E5%AE%89%E5%8D%93%E6%89%93%E5%BC%80usb%E8%B0%83%E8%AF%95&quot;&gt;你已经打开设备的USB调试开关&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;确保你的设备已经&lt;strong&gt;成功连接&lt;/strong&gt;。可以输入&lt;code&gt;adb devices&lt;/code&gt;来查看:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ adb devices&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;List of devices attached&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;emulator-5554 offline   # Google模拟器&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14ed2fcc device         # 真实设备&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在右边那列看到&lt;strong&gt;device&lt;/strong&gt;说明你的设备已经被正确连接了。注意，你只应当&lt;strong&gt;连接仅仅一个设备&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;译注&lt;/strong&gt;：如果你连接了多个设备（包含模拟器在内），后续的一些操作可能会失败。拔掉不需要的设备，或者关掉模拟器，确保adb devices的输出只有一个是连接状态。&lt;/p&gt;
&lt;p&gt;现在你可以运行&lt;code&gt;react-native run-android&lt;/code&gt;来在设备上安装并启动应用了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="React" scheme="http://www.hongye567.top/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>React Native 之搭建开发环境</title>
    <link href="http://www.hongye567.top/2017/05/07/React-Native-%E4%B9%8B%E6%90%AD%E5%BB%BA%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    <id>http://www.hongye567.top/2017/05/07/React-Native-之搭建开发环境/</id>
    <published>2017-05-07T11:13:28.000Z</published>
    <updated>2017-05-09T05:13:30.781Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>转自: <a href="http://reactnative.cn/docs/0.44/getting-started.html" target="_blank" rel="external">http://reactnative.cn/docs/0.44/getting-started.html</a></p>
</blockquote>
<p>欢迎使用React Native！这篇文档会帮助你搭建基本的React Native开发环境。如果你已经搭好了环境，那么可以尝试一下<a href="http://reactnative.cn/docs/0.44/tutorial.html" target="_blank" rel="external">编写Hello World</a>。</p>
<p>根据你所使用的操作系统、针对的目标平台不同，具体步骤有所不同。如果想同时开发iOS和Android也没问题，你只需要先选一个平台开始，另一个平台的环境搭建只是稍有不同。</p>
<p>如果阅读完本文档后还碰到很多环境搭建的问题，我们建议你还可以再看看由本站提供的环境搭建视频教程(<a href="https://ke.qq.com/webcourse/index.html#course_id=197101&amp;term_id=100233637&amp;taid=1220865928921581&amp;vid=a1417i5op7k" target="_blank" rel="external">macOS iOS</a>、<a href="https://ke.qq.com/webcourse/index.html#course_id=197101&amp;term_id=100233637&amp;taid=1220870223888877&amp;vid=z1417kmxask" target="_blank" rel="external">macOS Android</a>、<a href="https://ke.qq.com/webcourse/index.html#course_id=197101&amp;term_id=100233637&amp;taid=1220874518856173&amp;vid=d1417tgg1ez" target="_blank" rel="external">windows Android</a>)、<a href="http://bbs.reactnative.cn/topic/10" target="_blank" rel="external">windows环境搭建文字教程</a>、以及<a href="http://bbs.reactnative.cn/topic/130" target="_blank" rel="external">常见问题</a>。</p>
<p>目标平台： iOS Android 开发平台： macOS Linux Windows</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="必需的软件"><a href="#必需的软件" class="headerlink" title="必需的软件"></a>必需的软件</h3><h4 id="Chocolatey"><a href="#Chocolatey" class="headerlink" title="Chocolatey"></a>Chocolatey</h4><p><a href="https://chocolatey.org/" target="_blank" rel="external">Chocolatey</a>是一个Windows上的包管理器，类似于linux上的yum和 apt-get。 你可以在其<a href="https://chocolatey.org/" target="_blank" rel="external">官方网站</a>上查看具体的使用说明。一般的安装步骤应该是下面这样：</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">@powershell -NoProfile -ExecutionPolicy Bypass -Command &quot;iex ((new-object net.webclient).DownloadString(&apos;https://chocolatey.org/install.ps1&apos;))&quot; &amp;&amp; SET PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin</div></pre></td></tr></table></figure>
<blockquote>
<p>一般来说，使用Chocolatey来安装软件的时候，需要以管理员的身份来运行命令提示符窗口。译注：chocolatey的网站可能在国内访问困难，导致上述安装命令无法正常完成。请使用稳定的翻墙工具。 如果你实在装不上这个工具，也不要紧。下面所需的python2和nodejs你可以分别单独去对应的官方网站下载安装即可。</p>
</blockquote>
<h4 id="Python-2"><a href="#Python-2" class="headerlink" title="Python 2"></a>Python 2</h4><p>打开命令提示符窗口，使用Chocolatey来安装Python 2.</p>
<blockquote>
<p>注意目前不支持Python 3版本。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">choco install python2</div></pre></td></tr></table></figure>
<h4 id="Node"><a href="#Node" class="headerlink" title="Node"></a>Node</h4><p>打开命令提示符窗口，使用Chocolatey来安装NodeJS。注意，目前已知Node 7.1版本在windows上无法正常工作，请避开这个版本！</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">choco install nodejs.install</div></pre></td></tr></table></figure>
<p>安装完node后建议设置npm镜像以加速后面的过程（或使用科学上网工具）。注意：不要使用cnpm！cnpm安装的模块路径比较奇怪，packager不能正常识别！</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm config set registry https://registry.npm.taobao.org --global</div><div class="line">npm config set disturl https://npm.taobao.org/dist --global</div></pre></td></tr></table></figure>
<h4 id="Yarn、React-Native的命令行工具（react-native-cli）"><a href="#Yarn、React-Native的命令行工具（react-native-cli）" class="headerlink" title="Yarn、React Native的命令行工具（react-native-cli）"></a>Yarn、React Native的命令行工具（react-native-cli）</h4><p><a href="http://yarnpkg.com/" target="_blank" rel="external">Yarn</a>是Facebook提供的替代npm的工具，可以加速node模块的下载。React Native的命令行工具用于执行创建、初始化、更新项目、运行打包服务（packager）等任务。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g yarn react-native-cli</div></pre></td></tr></table></figure>
<p>安装完yarn后同理也要设置镜像源：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">yarn config set registry https://registry.npm.taobao.org --global</div><div class="line">yarn config set disturl https://npm.taobao.org/dist --global</div></pre></td></tr></table></figure>
<blockquote>
<p>如果你遇到<code>EACCES: permission denied</code>权限错误，可以尝试运行下面的命令（限linux系统）： <code>sudo npm install -g yarn react-native-cli</code>.</p>
</blockquote>
<h4 id="Android-Studio"><a href="#Android-Studio" class="headerlink" title="Android Studio"></a>Android Studio</h4><p><a href="http://developer.android.com/sdk/index.html" target="_blank" rel="external">Android Studio</a> 2.0 or higher.</p>
<p>React Native目前需要<a href="http://developer.android.com/sdk/index.html" target="_blank" rel="external">Android Studio</a>2.0或更高版本。</p>
<blockquote>
<p>Android Studio需要Java Development Kit [JDK] 1.8或更高版本。你可以在命令行中输入<code>javac -version</code>来查看你当前安装的JDK版本。如果版本不合要求，则可以到 <a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="external">官网</a>上下载。 或是使用包管理器来安装（比如<code>choco install jdk8</code>或是<code>apt-get install default-jdk</code>）</p>
</blockquote>
<p>Android Studio包含了运行和测试React Native应用所需的Android SDK和模拟器。</p>
<blockquote>
<p>除非特别注明，请不要改动安装过程中的选项。比如Android Studio默认安装了 <code>Android Support Repository</code>，而这也是React Native必须的（否则在react-native run-android时会报appcompat-v7包找不到的错误）。</p>
</blockquote>
<ul>
<li>确定所有安装都勾选了，尤其是<code>Android SDK</code>和<code>Android Device Emulator</code>。</li>
<li>在初步安装完成后，选择<code>Custom</code>安装项：</li>
</ul>
<p><img src="http://reactnative.cn/static/docs/0.44/img/react-native-android-studio-custom-install-windows.png" alt="custom installation"></p>
<ul>
<li>检查已安装的组件，尤其是模拟器和HAXM加速驱动。</li>
</ul>
<p><img src="http://reactnative.cn/static/docs/0.44/img/react-native-android-studio-verify-installs-windows.png" alt="verify installs"></p>
<ul>
<li>安装完成后，在Android Studio的欢迎界面中选择<code>Configure | SDK Manager</code>。</li>
</ul>
<p><img src="http://reactnative.cn/static/docs/0.44/img/react-native-android-studio-configure-sdk-windows.png" alt="configure sdk"></p>
<ul>
<li>在<code>SDK Platforms</code>窗口中，选择<code>Show Package Details</code>，然后在<code>Android 6.0 (Marshmallow)</code>中勾选<code>Google APIs</code>、<code>Android SDK Platform 23</code>、<code>Intel x86 Atom System Image</code>、<code>Intel x86 Atom\_64 System Image</code>以及<code>Google APIs Intel x86 Atom\_64 System Image</code>。</li>
</ul>
<p><img src="http://reactnative.cn/static/docs/0.44/img/react-native-android-studio-android-sdk-platforms-windows.png" alt="platforms"></p>
<ul>
<li>在<code>SDK Tools中</code>，选择<code>Show Package Details</code>，然后在<code>Android SDK Build Tools</code>中勾选<code>Android SDK Build-Tools 23.0.1</code>（必须是这个版本）。然后还要勾选最底部的<code>Android Support Repository</code>.</li>
</ul>
<p><img src="http://reactnative.cn/static/docs/0.44/img/react-native-android-studio-android-sdk-build-tools-windows.png" alt="build tools"></p>
<h4 id="ANDROID-HOME环境变量"><a href="#ANDROID-HOME环境变量" class="headerlink" title="ANDROID_HOME环境变量"></a>ANDROID_HOME环境变量</h4><p>确保<code>ANDROID\_HOME</code>环境变量正确地指向了你安装的Android SDK的路径。</p>
<p>打开<code>控制面板</code> -&gt; <code>系统和安全</code> -&gt; <code>系统</code> -&gt; <code>高级系统设置</code> -&gt; <code>高级</code> -&gt; <code>环境变量</code> -&gt; <code>新建</code></p>
<blockquote>
<p>具体的路径可能和下图不一致，请自行确认。<br><img src="http://reactnative.cn/static/docs/0.44/img/react-native-android-sdk-environment-variable-windows.png" alt="env variable"></p>
<p>你需要关闭现有的命令符提示窗口然后重新打开，这样新的环境变量才能生效。</p>
</blockquote>
<h3 id="推荐安装的工具"><a href="#推荐安装的工具" class="headerlink" title="推荐安装的工具"></a>推荐安装的工具</h3><h4 id="Gradle-Daemon"><a href="#Gradle-Daemon" class="headerlink" title="Gradle Daemon"></a>Gradle Daemon</h4><p>开启<a href="https://docs.gradle.org/2.9/userguide/gradle_daemon.html" target="_blank" rel="external">Gradle Daemon</a>可以极大地提升java代码的增量编译速度。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">(if not exist &quot;%USERPROFILE%/.gradle&quot; mkdir &quot;%USERPROFILE%/.gradle&quot;) &amp;&amp; (echo org.gradle.daemon=true &gt;&gt; &quot;%USERPROFILE%/.gradle/gradle.properties&quot;)</div></pre></td></tr></table></figure>
<h4 id="将Android-SDK的Tools目录添加到PATH变量中"><a href="#将Android-SDK的Tools目录添加到PATH变量中" class="headerlink" title="将Android SDK的Tools目录添加到PATH变量中"></a>将Android SDK的Tools目录添加到<code>PATH</code>变量中</h4><p>你可以把Android SDK的tools和platform-tools目录添加到<code>PATH</code>变量中，以便在终端中运行一些Android工具，例如<code>android avd</code>或是<code>adb logcat</code>等。</p>
<p>打开<code>控制面板</code> -&gt; <code>系统和安全</code> -&gt; 系统 -&gt; <code>高级系统设置</code> -&gt; <code>高级</code> -&gt; <code>环境变量</code> -&gt; 选中<code>PATH</code> -&gt; 双击进行编辑</p>
<blockquote>
<p>注意你的具体路径可能和下图不同</p>
</blockquote>
<p><img src="http://reactnative.cn/static/docs/0.44/img/react-native-android-tools-environment-variable-windows.png" alt="env variable"></p>
<h3 id="可选的安装项"><a href="#可选的安装项" class="headerlink" title="可选的安装项"></a>可选的安装项</h3><h4 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h4><p>你可以使用Chocolatey来安装<code>git</code>:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">choco install git</div></pre></td></tr></table></figure>
<p>另外你也可以直接去下载<a href="https://git-for-windows.github.io/" target="_blank" rel="external">Git for Windows</a>。 在安装过程中注意勾选”Run Git from Windows Command Prompt”，这样才会把<code>git</code>命令添加到<code>PATH</code>环境变量中。</p>
<h4 id="Genymotion"><a href="#Genymotion" class="headerlink" title="Genymotion"></a>Genymotion</h4><p>比起Android Studio自带的原装模拟器，Genymotion是一个性能更好的选择，但它只对个人用户免费。</p>
<ol>
<li>下载和安装<a href="https://www.genymotion.com/download" target="_blank" rel="external">Genymotion</a>（genymotion需要依赖VirtualBox虚拟机，下载选项中提供了包含VirtualBox和不包含的选项，请按需选择）。</li>
<li>打开Genymotion。如果你还没有安装VirtualBox，则此时会提示你安装。</li>
<li>创建一个新模拟器并启动。</li>
<li>启动React Native应用后，可以按下F1来打开开发者菜单。</li>
</ol>
<h4 id="Visual-Studio-Emulator-for-Android"><a href="#Visual-Studio-Emulator-for-Android" class="headerlink" title="Visual Studio Emulator for Android"></a>Visual Studio Emulator for Android</h4><p><a href="https://www.visualstudio.com/zh-cn/features/msft-android-emulator-vs.aspx#中国 (简体中文" target="_blank" rel="external">Visual Studio Emulator for Android</a>)是利用了Hyper-V技术进行硬件加速的免费android模拟器。也是Android Studio自带的原装模拟器之外的一个很好的选择。而且你并不需要安装Visual Studio。 在用于React Native开发前，需要先在注册表中进行一些修改：</p>
<ol>
<li>打开运行命令（按下Windows+R键）</li>
<li>输入regedit.exe然后回车</li>
<li>在注册表编辑器中找到HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Android SDK Tools条目</li>
<li>右键点击Android SDK Tools，选择新建 &gt; 字符串值</li>
<li>名称设为Path</li>
<li>双击Path，将其值设为你的Android SDK的路径。（例如C:\Program Files\Android\sdk）</li>
</ol>
<h2 id="测试安装"><a href="#测试安装" class="headerlink" title="测试安装"></a>测试安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">react-native init AwesomeProject</div><div class="line">cd AwesomeProject</div><div class="line">react-native run-android</div></pre></td></tr></table></figure>
<blockquote>
<p>提示：你可以使用<code>--version</code>参数创建指定版本的项目。例如<code>react-native init MyApp --version 0.39.2</code>。注意版本号必须精确到两个小数点。</p>
</blockquote>
<p><strong>Windows用户请注意，请不要在命令行默认的System32目录中init项目！会有各种权限限制导致不能运行！</strong></p>
<h3 id="修改项目"><a href="#修改项目" class="headerlink" title="修改项目"></a>修改项目</h3><p>现在你已经成功运行了项目，我们可以开始尝试动手改一改了：</p>
<ul>
<li>使用你喜欢的文本编辑器打开<code>index.android.js</code>并随便改上几行</li>
<li>按两下R键，或是用Menu键（通常是F2，在Genymotion模拟器中是<code>⌘+M</code>）打开开发者菜单，然后选择 <em>Reload JS</em> 就可以看到你的最新修改。</li>
<li>在终端下运行<code>adb logcat *:S ReactNative:V ReactNativeJS:V</code>可以看到你的应用的日志。</li>
</ul>
<h3 id="完成了！"><a href="#完成了！" class="headerlink" title="完成了！"></a>完成了！</h3><p>恭喜！你已经成功运行并修改了你的第一个React Native应用。</p>
<p><img src="http://reactnative.cn/static/docs/0.44/img/react-native-congratulations.png" alt=""></p>
<h2 id="接下来"><a href="#接下来" class="headerlink" title="接下来"></a>接下来</h2><ul>
<li>如果你想要在真机上运行应用，请参阅<a href="http://reactnative.cn/docs/0.44/running-on-device-android.html#content" target="_blank" rel="external">在设备上运行</a>。</li>
<li>如果你碰到了一些问题，请参阅<a href="http://bbs.reactnative.cn/topic/130" target="_blank" rel="external">常见问题</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;转自: &lt;a href=&quot;http://reactnative.cn/docs/0.44/getting-started.html&quot;&gt;http://reactnative.cn/docs/0.44/getting-started.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;欢迎使用React Native！这篇文档会帮助你搭建基本的React Native开发环境。如果你已经搭好了环境，那么可以尝试一下&lt;a href=&quot;http://reactnative.cn/docs/0.44/tutorial.html&quot;&gt;编写Hello World&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;根据你所使用的操作系统、针对的目标平台不同，具体步骤有所不同。如果想同时开发iOS和Android也没问题，你只需要先选一个平台开始，另一个平台的环境搭建只是稍有不同。&lt;/p&gt;
&lt;p&gt;如果阅读完本文档后还碰到很多环境搭建的问题，我们建议你还可以再看看由本站提供的环境搭建视频教程(&lt;a href=&quot;https://ke.qq.com/webcourse/index.html#course_id=197101&amp;amp;term_id=100233637&amp;amp;taid=1220865928921581&amp;amp;vid=a1417i5op7k&quot;&gt;macOS iOS&lt;/a&gt;、&lt;a href=&quot;https://ke.qq.com/webcourse/index.html#course_id=197101&amp;amp;term_id=100233637&amp;amp;taid=1220870223888877&amp;amp;vid=z1417kmxask&quot;&gt;macOS Android&lt;/a&gt;、&lt;a href=&quot;https://ke.qq.com/webcourse/index.html#course_id=197101&amp;amp;term_id=100233637&amp;amp;taid=1220874518856173&amp;amp;vid=d1417tgg1ez&quot;&gt;windows Android&lt;/a&gt;)、&lt;a href=&quot;http://bbs.reactnative.cn/topic/10&quot;&gt;windows环境搭建文字教程&lt;/a&gt;、以及&lt;a href=&quot;http://bbs.reactnative.cn/topic/130&quot;&gt;常见问题&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;目标平台： iOS Android 开发平台： macOS Linux Windows&lt;/p&gt;
&lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;h3 id=&quot;必需的软件&quot;&gt;&lt;a href=&quot;#必需的软件&quot; class=&quot;headerlink&quot; title=&quot;必需的软件&quot;&gt;&lt;/a&gt;必需的软件&lt;/h3&gt;&lt;h4 id=&quot;Chocolatey&quot;&gt;&lt;a href=&quot;#Chocolatey&quot; class=&quot;headerlink&quot; title=&quot;Chocolatey&quot;&gt;&lt;/a&gt;Chocolatey&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://chocolatey.org/&quot;&gt;Chocolatey&lt;/a&gt;是一个Windows上的包管理器，类似于linux上的yum和 apt-get。 你可以在其&lt;a href=&quot;https://chocolatey.org/&quot;&gt;官方网站&lt;/a&gt;上查看具体的使用说明。一般的安装步骤应该是下面这样：&lt;/p&gt;
    
    </summary>
    
    
      <category term="React" scheme="http://www.hongye567.top/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>HBuilder 上传图片到七牛云</title>
    <link href="http://www.hongye567.top/2017/04/06/HBuilder-%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E5%88%B0%E4%B8%83%E7%89%9B%E4%BA%91/"/>
    <id>http://www.hongye567.top/2017/04/06/HBuilder-上传图片到七牛云/</id>
    <published>2017-04-06T07:34:39.000Z</published>
    <updated>2017-05-09T05:14:00.842Z</updated>
    
    <content type="html"><![CDATA[<p>HBuilder 上传支持表单上传，所以上传到七牛云的时候用的也是表单上传</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 上传图片到七牛云</div><div class="line"> * @param String imgPath 图片路径</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">uploadToQiniu</span>(<span class="params">imgPath</span>)</span>&#123;</div><div class="line">	<span class="comment">// 七牛云空间域名，修改为自己的</span></div><div class="line">	<span class="keyword">var</span> domain = <span class="string">"http://onpzdyxr0.bkt.clouddn.com/"</span>;</div><div class="line">	<span class="comment">// 生成一个随机名字作为上传到七牛云后的文件名</span></div><div class="line">	<span class="keyword">var</span> randName = <span class="built_in">Math</span>.random().toString(<span class="number">36</span>).substr(<span class="number">2</span>) + imgPath.match(<span class="regexp">/\.?[^.\/]+$/</span>);</div><div class="line">	<span class="keyword">var</span> task = plus.uploader.createUpload(</div><div class="line">       <span class="comment">// 不同的存储空间上传地址可能不一样，运行后根据返回信息做更改</span></div><div class="line">		<span class="string">"http://upload.qiniu.com/"</span>,</div><div class="line">		&#123; </div><div class="line">			<span class="attr">method</span>: <span class="string">"POST"</span>,</div><div class="line">			<span class="attr">blocksize</span>:<span class="number">204800</span>,</div><div class="line">			<span class="attr">priority</span>:<span class="number">100</span></div><div class="line">		&#125;,</div><div class="line">		<span class="function"><span class="keyword">function</span> (<span class="params"> t, status </span>) </span>&#123;</div><div class="line">			<span class="comment">// 上传完成</span></div><div class="line">			<span class="keyword">if</span> ( status == <span class="number">200</span> ) &#123; </div><div class="line">				<span class="built_in">console</span>.log( <span class="string">"Upload success: "</span> + t.url );</div><div class="line">				<span class="comment">// 拼接出上传到去七牛云后的图片链接地址</span></div><div class="line">				<span class="keyword">var</span> imgUrl = domain + randName; </div><div class="line">			&#125; <span class="keyword">else</span> &#123;</div><div class="line">				<span class="built_in">console</span>.log( <span class="string">"Upload failed: "</span> + status );</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	);</div><div class="line">	<span class="comment">// 添加上传文件，key 值必须是七牛云所需文件对应的 key 值 "file"</span></div><div class="line">	task.addFile(imgPath,&#123;<span class="attr">key</span>: <span class="string">"file"</span>,<span class="attr">mime</span>: <span class="string">"image/*"</span>&#125;);</div><div class="line">	<span class="comment">// 上传到七牛云后文件的名字</span></div><div class="line">	task.addData(<span class="string">"key"</span>,randName);</div><div class="line">	<span class="comment">// 七牛云所需 token</span></div><div class="line">	task.addData(<span class="string">"token"</span>,token);</div><div class="line">	</div><div class="line">	task.start();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>参考资料：<br><a href="http://developer.qiniu.com/kodo/manual/1272/form-upload" target="_blank" rel="external">七牛云表单上传官方文档 &gt;&gt;</a><br><a href="http://www.html5plus.org/doc/zh_cn/uploader.html" target="_blank" rel="external">HBuilder 上传官方文档 &gt;&gt;</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;HBuilder 上传支持表单上传，所以上传到七牛云的时候用的也是表单上传&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/di
    
    </summary>
    
    
      <category term="HBuilder" scheme="http://www.hongye567.top/tags/HBuilder/"/>
    
      <category term="MUI" scheme="http://www.hongye567.top/tags/MUI/"/>
    
  </entry>
  
  <entry>
    <title>Android 下载安装APK</title>
    <link href="http://www.hongye567.top/2017/03/29/android%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85APK/"/>
    <id>http://www.hongye567.top/2017/03/29/android下载安装APK/</id>
    <published>2017-03-29T09:11:28.000Z</published>
    <updated>2017-05-09T05:14:30.775Z</updated>
    
    <content type="html"><![CDATA[<h3 id="下载安装包"><a href="#下载安装包" class="headerlink" title="下载安装包"></a>下载安装包</h3><p>未整理完，暂且不写，日后更新</p>
<h3 id="安装应用"><a href="#安装应用" class="headerlink" title="安装应用"></a>安装应用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line">     * 安装 APK</div><div class="line">     * <span class="doctag">@param</span> activity</div><div class="line">     * <span class="doctag">@param</span> fileUri 安装包地址</div><div class="line">     * fileUri = Uri.parse("file://" + filePath); 或</div><div class="line">     * fileUri = Uri.fromFile(File file);</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">installApk</span><span class="params">(Activity activity, Uri fileUri)</span> </span>&#123;</div><div class="line">        Intent intent = <span class="keyword">new</span> Intent();</div><div class="line">        <span class="comment">//执行动作</span></div><div class="line">        intent.setAction(Intent.ACTION_VIEW);</div><div class="line">        <span class="comment">// 如果不加无法正常显示安装过程和安装成功提示</span></div><div class="line">        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</div><div class="line">        <span class="comment">//执行的数据类型</span></div><div class="line">        intent.setDataAndType(fileUri, <span class="string">"application/vnd.android.package-archive"</span>);</div><div class="line">        activity.startActivity(intent);</div><div class="line">        <span class="comment">// android.os.Process.killProcess(android.os.Process.myPid());</span></div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p><a href="http://onkk8h635.bkt.clouddn.com/android/DownInstallApk.rar" target="_blank" rel="external">demo下载&gt;&gt;</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;下载安装包&quot;&gt;&lt;a href=&quot;#下载安装包&quot; class=&quot;headerlink&quot; title=&quot;下载安装包&quot;&gt;&lt;/a&gt;下载安装包&lt;/h3&gt;&lt;p&gt;未整理完，暂且不写，日后更新&lt;/p&gt;
&lt;h3 id=&quot;安装应用&quot;&gt;&lt;a href=&quot;#安装应用&quot; class=&quot;he
    
    </summary>
    
    
      <category term="Android" scheme="http://www.hongye567.top/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>JS 实现倒计时</title>
    <link href="http://www.hongye567.top/2017/03/21/JS-%E5%AE%9E%E7%8E%B0%E5%80%92%E8%AE%A1%E6%97%B6/"/>
    <id>http://www.hongye567.top/2017/03/21/JS-实现倒计时/</id>
    <published>2017-03-21T05:58:21.000Z</published>
    <updated>2017-05-09T05:14:50.778Z</updated>
    
    <content type="html"><![CDATA[<h3 id="利用-window-setInterval-实现倒计时"><a href="#利用-window-setInterval-实现倒计时" class="headerlink" title="利用 window.setInterval() 实现倒计时"></a>利用 window.setInterval() 实现倒计时</h3><h4 id="示例："><a href="#示例：" class="headerlink" title="示例："></a><em>示例：</em></h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> id;</div><div class="line"><span class="keyword">var</span> interval = <span class="number">1000</span>; </div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * @param year 结束日期的年</div><div class="line"> * @param month 结束日期的月</div><div class="line"> * @param day 结束日期的日</div><div class="line"> * @param divname 需做出响应的元素id</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">ShowCountDown</span>(<span class="params">year,month,day,divname</span>) </span>&#123; </div><div class="line">	<span class="comment">// 设置结束日期</span></div><div class="line">	<span class="keyword">var</span> endDate = <span class="keyword">new</span> <span class="built_in">Date</span>(year, month<span class="number">-1</span>, day); </div><div class="line">	<span class="comment">// 获取当前日期</span></div><div class="line">	<span class="keyword">var</span> now = <span class="keyword">new</span> <span class="built_in">Date</span>(); </div><div class="line">	<span class="comment">// 计算剩余毫秒数</span></div><div class="line">	<span class="keyword">var</span> leftTime=endDate.getTime()-now.getTime(); </div><div class="line">	<span class="comment">// 计算剩余秒数</span></div><div class="line">	<span class="keyword">var</span> leftsecond = <span class="built_in">parseInt</span>(leftTime/<span class="number">1000</span>); </div><div class="line">	<span class="comment">// 剩余天数（整数倍）</span></div><div class="line">	<span class="keyword">var</span> day1=<span class="built_in">Math</span>.floor(leftsecond/(<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>)); </div><div class="line">	<span class="comment">// 剩余小时数（除去大单位后整数倍）</span></div><div class="line">	<span class="keyword">var</span> hour=<span class="built_in">Math</span>.floor((leftsecond-day1*<span class="number">24</span>*<span class="number">60</span>*<span class="number">60</span>)/<span class="number">3600</span>); </div><div class="line">	<span class="comment">// 剩余分钟数（除去大单位后整数倍）</span></div><div class="line">	<span class="keyword">var</span> minute=<span class="built_in">Math</span>.floor((leftsecond-day1*<span class="number">24</span>*<span class="number">60</span>*<span class="number">60</span>-hour*<span class="number">3600</span>)/<span class="number">60</span>); </div><div class="line">	<span class="comment">// 剩余秒数（除去大单位后整数倍）</span></div><div class="line">	<span class="keyword">var</span> second=<span class="built_in">Math</span>.floor(leftsecond-day1*<span class="number">24</span>*<span class="number">60</span>*<span class="number">60</span>-hour*<span class="number">3600</span>-minute*<span class="number">60</span>); </div><div class="line"></div><div class="line">	<span class="keyword">var</span> cc = <span class="built_in">document</span>.getElementById(divname); </div><div class="line">	cc.innerHTML = <span class="string">"距离"</span> + year + <span class="string">"年"</span> + month + <span class="string">"月"</span> + day + <span class="string">"日还有："</span> + day1 + <span class="string">"天"</span> + hour + <span class="string">"小时"</span> + minute + <span class="string">"分"</span> + second + <span class="string">"秒"</span>; </div><div class="line">&#125; </div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 开始倒计时</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">start</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	id = <span class="built_in">window</span>.setInterval( <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line"></div><div class="line">			ShowCountDown(<span class="number">2023</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="string">'divdown1'</span>);</div><div class="line"></div><div class="line">		&#125;, interval); </div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 停止倒计时</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">stop</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	<span class="keyword">if</span> (id) &#123;</div><div class="line">		<span class="built_in">window</span>.clearInterval(id);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="window-setInterval-注解"><a href="#window-setInterval-注解" class="headerlink" title="window.setInterval() 注解"></a>window.setInterval() 注解</h3><h4 id="1-window-setInterval"><a href="#1-window-setInterval" class="headerlink" title="1. window.setInterval()"></a>1. <code>window.setInterval()</code></h4><p><strong>功能：</strong><br>按照指定的周期（以毫秒计）来调用函数或计算表达式。<br><strong>语法：</strong><br><code>setInterval(code,millisec)</code><br><strong>参数：</strong><br>code: 在定时时间到时要执行的JavaScript代码串。<br>millisec: 设定的定时时间，用毫秒数表示。<br><strong>返回值：</strong><br>定时器的ID值，可用于clearInterval()方法停止指定的定时器。<br><strong>注：</strong><br>setInterval()方法会不停地调用函数，直到用clearInterval()终止定时或窗口被关闭。</p>
<h4 id="2-window-clearInterval"><a href="#2-window-clearInterval" class="headerlink" title="2. window.clearInterval()"></a>2. <code>window.clearInterval()</code></h4><p><strong>功能：</strong><br>取消由 setInterval() 方法设置的定时器。<br><strong>语法：</strong><br><code>clearInterval(id_of_setinterval)</code><br><strong>参数：</strong><br>id_of_setinterval: 由 setInterval() 返回的 id 值。该值标识了一个 setInterval 定时器。<br>也就是：window.setInterval() 返回的就是 window.clearInterval() 的参数</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;利用-window-setInterval-实现倒计时&quot;&gt;&lt;a href=&quot;#利用-window-setInterval-实现倒计时&quot; class=&quot;headerlink&quot; title=&quot;利用 window.setInterval() 实现倒计时&quot;&gt;&lt;/a&gt;利用 window.setInterval() 实现倒计时&lt;/h3&gt;&lt;h4 id=&quot;示例：&quot;&gt;&lt;a href=&quot;#示例：&quot; class=&quot;headerlink&quot; title=&quot;示例：&quot;&gt;&lt;/a&gt;&lt;em&gt;示例：&lt;/em&gt;&lt;/h4&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; id;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; interval = &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * @param year 结束日期的年&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * @param month 结束日期的月&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * @param day 结束日期的日&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * @param divname 需做出响应的元素id&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ShowCountDown&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;year,month,day,divname&lt;/span&gt;) &lt;/span&gt;&amp;#123; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// 设置结束日期&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; endDate = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;(year, month&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;, day); &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// 获取当前日期&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; now = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;(); &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// 计算剩余毫秒数&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; leftTime=endDate.getTime()-now.getTime(); &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// 计算剩余秒数&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; leftsecond = &lt;span class=&quot;built_in&quot;&gt;parseInt&lt;/span&gt;(leftTime/&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;); &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// 剩余天数（整数倍）&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; day1=&lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.floor(leftsecond/(&lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;*&lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;*&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;)); &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// 剩余小时数（除去大单位后整数倍）&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; hour=&lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.floor((leftsecond-day1*&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;*&lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;*&lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;)/&lt;span class=&quot;number&quot;&gt;3600&lt;/span&gt;); &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// 剩余分钟数（除去大单位后整数倍）&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; minute=&lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.floor((leftsecond-day1*&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;*&lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;*&lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;-hour*&lt;span class=&quot;number&quot;&gt;3600&lt;/span&gt;)/&lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;); &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// 剩余秒数（除去大单位后整数倍）&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; second=&lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.floor(leftsecond-day1*&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;*&lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;*&lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;-hour*&lt;span class=&quot;number&quot;&gt;3600&lt;/span&gt;-minute*&lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;); &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; cc = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(divname); &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	cc.innerHTML = &lt;span class=&quot;string&quot;&gt;&quot;距离&quot;&lt;/span&gt; + year + &lt;span class=&quot;string&quot;&gt;&quot;年&quot;&lt;/span&gt; + month + &lt;span class=&quot;string&quot;&gt;&quot;月&quot;&lt;/span&gt; + day + &lt;span class=&quot;string&quot;&gt;&quot;日还有：&quot;&lt;/span&gt; + day1 + &lt;span class=&quot;string&quot;&gt;&quot;天&quot;&lt;/span&gt; + hour + &lt;span class=&quot;string&quot;&gt;&quot;小时&quot;&lt;/span&gt; + minute + &lt;span class=&quot;string&quot;&gt;&quot;分&quot;&lt;/span&gt; + second + &lt;span class=&quot;string&quot;&gt;&quot;秒&quot;&lt;/span&gt;; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * 开始倒计时&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;start&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	id = &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.setInterval( &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			ShowCountDown(&lt;span class=&quot;number&quot;&gt;2023&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;divdown1&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;, interval); &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * 停止倒计时&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;stop&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (id) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.clearInterval(id);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://www.hongye567.top/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>遍历 Map 的四种方法</title>
    <link href="http://www.hongye567.top/2017/03/21/Map-%E9%9B%86%E5%90%88%E9%81%8D%E5%8E%86/"/>
    <id>http://www.hongye567.top/2017/03/21/Map-集合遍历/</id>
    <published>2017-03-21T03:07:19.000Z</published>
    <updated>2017-05-09T05:10:59.677Z</updated>
    
    <content type="html"><![CDATA[<p><strong>1. 通过 Map.keySet 遍历 key 和 value，二次取值（常用）</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> ( String key : map.keySet() ) &#123;</div><div class="line">    System.out.println( <span class="string">"key = "</span> + key +<span class="string">" and value = "</span> + map.get( key ) );</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>2. 通过 Map.entrySet 使用 iterator 遍历 key 和 value</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Iterator&lt;Map.Entry&lt;String, String&gt;&gt; it = map.entrySet().iterator();</div><div class="line"><span class="keyword">while</span> ( it.hasNext() ) &#123;</div><div class="line">    Map.Entry&lt;String, String&gt; entry = it.next();</div><div class="line">    System.out.println( <span class="string">"key = "</span> + entry.getKey() + <span class="string">" and value = "</span> + entry.getValue() );</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>3. 通过 Map.entrySet 遍历 key 和 value（推荐，尤其容量大的时候）</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> ( Map.Entry&lt;String, String&gt; entry : map.entrySet() ) &#123;</div><div class="line">    System.out.println( <span class="string">"key = "</span> + entry.getKey() + <span class="string">" and value = "</span> + entry.getValue() );</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>4. 通过 Map.values() 遍历所有的 value，但不能遍历 key</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> ( String v : map.values() ) &#123;</div><div class="line">    System.out.println( <span class="string">"value = "</span> + v );</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;1. 通过 Map.keySet 遍历 key 和 value，二次取值（常用）&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div clas
    
    </summary>
    
    
      <category term="Java" scheme="http://www.hongye567.top/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 在 GitHub 和 Coding 同时发布</title>
    <link href="http://www.hongye567.top/2017/03/04/Hexo-%E5%9C%A8-GitHub-%E5%92%8C-Coding-%E5%90%8C%E6%97%B6%E5%8F%91%E5%B8%83/"/>
    <id>http://www.hongye567.top/2017/03/04/Hexo-在-GitHub-和-Coding-同时发布/</id>
    <published>2017-03-04T05:08:58.000Z</published>
    <updated>2017-05-09T05:07:30.830Z</updated>
    
    <content type="html"><![CDATA[<h3 id="多平台发布"><a href="#多平台发布" class="headerlink" title="多平台发布"></a>多平台发布</h3><p>在 GitHub 和 Coding 上都有博客，分开一一发布比较麻烦，其实 Hexo 是支持在多个平台发布的。<br>修改 Hexo 主目录下的 _config.yml 配置文件即可</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="attr">deploy:</span></div><div class="line"><span class="attr">  - type:</span> git</div><div class="line"><span class="attr">    repository:</span> https://github.com/Hongye567/Hongye567.github.io.git</div><div class="line"><span class="attr">    branch:</span> master</div><div class="line"><span class="attr">  - type:</span> git</div><div class="line"><span class="attr">    repository:</span> https://git.coding.net/Honye/Honye.git</div><div class="line"><span class="attr">    branch:</span> master</div></pre></td></tr></table></figure>
<h3 id="免输入密码"><a href="#免输入密码" class="headerlink" title="免输入密码"></a>免输入密码</h3><p>Hexo 每次提交时都要求输入用户名和密码，尤其在多平台发布时需要多次输入用户名和密码很是麻烦。<br>要求输入密码的原因是我们的仓库地址用的是 HTTPS 不是 SSH。</p>
<a id="more"></a>
<p><strong>1. 首先生成 SSH 密钥</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ git config --global user.name &quot;yourname&quot;  // 配置 git 用户名</div><div class="line">$ git config --global user.email &quot;youremail@email.com&quot;  // 配置 git 邮箱</div><div class="line">$ cd ~/.ssh  // 查看是否已有.ssh文件夹，若有可备份删除</div><div class="line">$ ssh-keygen -t rsa -C &quot;youremail@email.com&quot;  // 生成 SSH 密钥</div></pre></td></tr></table></figure>
<p>生成密钥时会提示选择密钥保存路径，直接回车默认路径即可。<br>会提示输入密码和确认密码，直接回车代表不设置密码。</p>
<p><strong>2. 部署公钥</strong><br>在 GitHub 和 Coding 在部署公钥操作基本一样，我不一一赘述，仅以 GitHub 为例。<br>打开 GitHub 项目，选择上方菜单 Settings，接着选择左侧菜单 Deploy keys，接着 Add deploy key，打开前面密钥所在文件夹，将 id_rsa.pub 文件中的内容粘贴在 GitHub 即可。</p>
<p><strong>3. Hexo 提交</strong><br>修改 Hexo 主目录下 _config.yml 配置文件中的参数</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="attr">deploy:</span></div><div class="line"><span class="attr">  - type:</span> git</div><div class="line"><span class="attr">    repository:</span> git@github.com:Hongye567/Hongye567.github.io.git</div><div class="line"><span class="attr">    branch:</span> master</div><div class="line"><span class="attr">  - type:</span> git</div><div class="line"><span class="attr">    repository:</span> git@git.coding.net:Honye/Honye.git</div><div class="line"><span class="attr">    branch:</span> master</div></pre></td></tr></table></figure>
<p>现在提交就可以不用输入密码了。提交的时候可能会报 authenticity 可靠性问题，直接输入 yes 忽略即可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;多平台发布&quot;&gt;&lt;a href=&quot;#多平台发布&quot; class=&quot;headerlink&quot; title=&quot;多平台发布&quot;&gt;&lt;/a&gt;多平台发布&lt;/h3&gt;&lt;p&gt;在 GitHub 和 Coding 上都有博客，分开一一发布比较麻烦，其实 Hexo 是支持在多个平台发布的。&lt;br&gt;修改 Hexo 主目录下的 _config.yml 配置文件即可&lt;/p&gt;
&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;deploy:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  - type:&lt;/span&gt; git&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    repository:&lt;/span&gt; https://github.com/Hongye567/Hongye567.github.io.git&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    branch:&lt;/span&gt; master&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  - type:&lt;/span&gt; git&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    repository:&lt;/span&gt; https://git.coding.net/Honye/Honye.git&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    branch:&lt;/span&gt; master&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;免输入密码&quot;&gt;&lt;a href=&quot;#免输入密码&quot; class=&quot;headerlink&quot; title=&quot;免输入密码&quot;&gt;&lt;/a&gt;免输入密码&lt;/h3&gt;&lt;p&gt;Hexo 每次提交时都要求输入用户名和密码，尤其在多平台发布时需要多次输入用户名和密码很是麻烦。&lt;br&gt;要求输入密码的原因是我们的仓库地址用的是 HTTPS 不是 SSH。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="http://www.hongye567.top/tags/Hexo/"/>
    
      <category term="Coding" scheme="http://www.hongye567.top/tags/Coding/"/>
    
      <category term="Github" scheme="http://www.hongye567.top/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>hexo 在 coding 上部署博客</title>
    <link href="http://www.hongye567.top/2017/03/04/hexo-%E5%9C%A8-coding-%E4%B8%8A%E9%83%A8%E7%BD%B2%E5%8D%9A%E5%AE%A2/"/>
    <id>http://www.hongye567.top/2017/03/04/hexo-在-coding-上部署博客/</id>
    <published>2017-03-04T04:11:58.000Z</published>
    <updated>2017-05-09T04:48:10.067Z</updated>
    
    <content type="html"><![CDATA[<p>之前是在 GitHub 上部署的静态博客，由于 GitHub 属于国外网站，访问速度慢，听闻可以在 Coding 部署博客，故而转向 Coding。</p>
<h3 id="1-Hexo-环境搭建"><a href="#1-Hexo-环境搭建" class="headerlink" title="1. Hexo 环境搭建"></a>1. Hexo 环境搭建</h3><p>Hexo 的环境搭建我之前在 GitHub 搭建博客教程中已经说明，不在赘述。也可到 Hexo 官网查看文档。</p>
<h3 id="2-在-Coding-上新建项目"><a href="#2-在-Coding-上新建项目" class="headerlink" title="2. 在 Coding 上新建项目"></a>2. 在 Coding 上新建项目</h3><p>理论上项目名称没要求，但是在我实际操作中出现了引用资源未找到的问题。在引用路径上缺少了一个项目名。所以我的项目名和我的用户名一致，理由是如果项目名和用户名不一致，访问地址必须是 {user_name}.coding.me/{project_name}，如果项目名与用户名一致，可使用 {user_name}.coding.me 直接访问，也避免了上面说的资源引用问题，是我推荐的。<br>若有大神能解决资源引用问题用其他名字也是可行的。项目可私有，不影响访问。<br>选择项目，进入代码页面，选择 Pages 服务，部署来源后即可访问。</p>
<h3 id="3-Hexo-Push"><a href="#3-Hexo-Push" class="headerlink" title="3. Hexo Push"></a>3. Hexo Push</h3><p>提交和在 GitHub 大致没什么区别，只需要在 Hexo 主目录的 _config.yml 配置文件中更改下仓库地址即可。</p>
<a id="more"></a>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attr">deploy:</span> </div><div class="line"><span class="attr">    type:</span> git</div><div class="line"><span class="attr">    repository:</span> https://git.coding.net/&#123;user_name&#125;/&#123;project_name&#125;.git</div><div class="line"><span class="attr">    branch:</span> master</div></pre></td></tr></table></figure>
<p>提交玩后就可以访问查看效果了</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前是在 GitHub 上部署的静态博客，由于 GitHub 属于国外网站，访问速度慢，听闻可以在 Coding 部署博客，故而转向 Coding。&lt;/p&gt;
&lt;h3 id=&quot;1-Hexo-环境搭建&quot;&gt;&lt;a href=&quot;#1-Hexo-环境搭建&quot; class=&quot;headerlink&quot; title=&quot;1. Hexo 环境搭建&quot;&gt;&lt;/a&gt;1. Hexo 环境搭建&lt;/h3&gt;&lt;p&gt;Hexo 的环境搭建我之前在 GitHub 搭建博客教程中已经说明，不在赘述。也可到 Hexo 官网查看文档。&lt;/p&gt;
&lt;h3 id=&quot;2-在-Coding-上新建项目&quot;&gt;&lt;a href=&quot;#2-在-Coding-上新建项目&quot; class=&quot;headerlink&quot; title=&quot;2. 在 Coding 上新建项目&quot;&gt;&lt;/a&gt;2. 在 Coding 上新建项目&lt;/h3&gt;&lt;p&gt;理论上项目名称没要求，但是在我实际操作中出现了引用资源未找到的问题。在引用路径上缺少了一个项目名。所以我的项目名和我的用户名一致，理由是如果项目名和用户名不一致，访问地址必须是 {user_name}.coding.me/{project_name}，如果项目名与用户名一致，可使用 {user_name}.coding.me 直接访问，也避免了上面说的资源引用问题，是我推荐的。&lt;br&gt;若有大神能解决资源引用问题用其他名字也是可行的。项目可私有，不影响访问。&lt;br&gt;选择项目，进入代码页面，选择 Pages 服务，部署来源后即可访问。&lt;/p&gt;
&lt;h3 id=&quot;3-Hexo-Push&quot;&gt;&lt;a href=&quot;#3-Hexo-Push&quot; class=&quot;headerlink&quot; title=&quot;3. Hexo Push&quot;&gt;&lt;/a&gt;3. Hexo Push&lt;/h3&gt;&lt;p&gt;提交和在 GitHub 大致没什么区别，只需要在 Hexo 主目录的 _config.yml 配置文件中更改下仓库地址即可。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="http://www.hongye567.top/tags/Hexo/"/>
    
      <category term="Coding" scheme="http://www.hongye567.top/tags/Coding/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 编译时 JS 混乱解决方案</title>
    <link href="http://www.hongye567.top/2017/03/03/Hexo-%E7%BC%96%E8%AF%91%E6%97%B6-JS-%E6%B7%B7%E4%B9%B1%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>http://www.hongye567.top/2017/03/03/Hexo-编译时-JS-混乱解决方案/</id>
    <published>2017-03-03T08:00:17.000Z</published>
    <updated>2017-05-09T05:06:50.770Z</updated>
    
    <content type="html"><![CDATA[<p>之前为在 GitHub 博客上写自己的 html 网页，在 hexo 根目录下的 source 文件夹中放了自己的 js 文件，每次 <code>hexo g</code> 后，pubic 文件夹中的 js 文件就混乱了，与自己实际 js 不一致。</p>
<p><strong>解决方案：</strong></p>
<ol>
<li><code>hexo g</code> 编译后在 public 文件夹中修改，将自己的 js 文件覆盖 hexo 编译后的 js 文件。或者 <code>hexo d</code> 提交到 GitHub 后直接到 GitHub 线上修改 js 文件。</li>
<li>博客中的 js 引用使用外链的形式。如将 js 文件上传<a href="http://www.qiniu.com/" target="_blank" rel="external">七牛云</a>，引用七牛云上的 js。</li>
<li>跳过 hexo 渲染【推荐】。<br>Hexo 3.0 以下使用：<br>在主目录下添加 README.md 文件或者 html 文件。<br>Hexo 3.0 以上支持：<br>修改 Hexo 主目录下的 _config.yml 配置文件中的 skip_render 参数。</li>
</ol>
<a id="more"></a>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="attr">skip_render:</span> <span class="string">"test.html"</span>    <span class="comment"># source 文件夹下指定文件</span></div><div class="line"></div><div class="line"><span class="attr">skip_render:</span> test/*    <span class="comment"># 单个文件夹下全部文件</span></div><div class="line"></div><div class="line"><span class="attr">skip_render:</span> test/*.md    <span class="comment"># 单个文件夹下指定类型文件</span></div><div class="line"></div><div class="line"><span class="attr">skip_render:</span> test/**    <span class="comment"># 单个文件夹下全部文件及子文件</span></div><div class="line"></div><div class="line"><span class="attr">skip_render:</span>         <span class="comment"># 多个文件夹以及其他情况</span></div><div class="line"><span class="bullet">    -</span> test/*</div><div class="line"><span class="bullet">    -</span> test/*.html</div></pre></td></tr></table></figure>
<p><em>注：若修改配置后不见效果，先执行 <code>hexo clean</code> 后再执行 <code>hexo g</code> 重新编译</em></p>
<p><a href="https://segmentfault.com/q/1010000003957602/revision" target="_blank" rel="external">原文&gt;&gt;</a><br><a href="https://xuanwo.org/2014/08/14/hexo-usual-problem/" target="_blank" rel="external">Hexo 常见问题解决方案</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前为在 GitHub 博客上写自己的 html 网页，在 hexo 根目录下的 source 文件夹中放了自己的 js 文件，每次 &lt;code&gt;hexo g&lt;/code&gt; 后，pubic 文件夹中的 js 文件就混乱了，与自己实际 js 不一致。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;解决方案：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;hexo g&lt;/code&gt; 编译后在 public 文件夹中修改，将自己的 js 文件覆盖 hexo 编译后的 js 文件。或者 &lt;code&gt;hexo d&lt;/code&gt; 提交到 GitHub 后直接到 GitHub 线上修改 js 文件。&lt;/li&gt;
&lt;li&gt;博客中的 js 引用使用外链的形式。如将 js 文件上传&lt;a href=&quot;http://www.qiniu.com/&quot;&gt;七牛云&lt;/a&gt;，引用七牛云上的 js。&lt;/li&gt;
&lt;li&gt;跳过 hexo 渲染【推荐】。&lt;br&gt;Hexo 3.0 以下使用：&lt;br&gt;在主目录下添加 README.md 文件或者 html 文件。&lt;br&gt;Hexo 3.0 以上支持：&lt;br&gt;修改 Hexo 主目录下的 _config.yml 配置文件中的 skip_render 参数。&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="http://www.hongye567.top/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>MUI返回传参</title>
    <link href="http://www.hongye567.top/2017/02/05/MUI%E8%BF%94%E5%9B%9E%E4%BC%A0%E5%8F%82/"/>
    <id>http://www.hongye567.top/2017/02/05/MUI返回传参/</id>
    <published>2017-02-05T02:40:09.000Z</published>
    <updated>2017-05-09T05:16:00.758Z</updated>
    
    <content type="html"><![CDATA[<p>从a页面跳转到b页面，从b页面返回到a页面时向a页面传递一个参数，a页面接收到参数后做出响应<br><strong>a.html</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/mui.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"css/mui.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span><span class="javascript"></span></div><div class="line">      	mui.init();</div><div class="line">      	(<span class="function"><span class="keyword">function</span>(<span class="params">$</span>) </span>&#123;</div><div class="line">	      	<span class="function"><span class="keyword">function</span> <span class="title">plusReady</span>(<span class="params"></span>) </span>&#123;</div><div class="line">	      		mui(<span class="string">'body'</span>).on(<span class="string">'tap'</span>, <span class="string">'.jump'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">	      			mui.openWindow(&#123;</div><div class="line">	      				<span class="attr">url</span>: <span class="string">'b.html'</span>,</div><div class="line">	      				<span class="attr">id</span>: <span class="string">'b'</span></div><div class="line">	      			&#125;);</div><div class="line">	      		&#125;);</div><div class="line">	      	&#125;</div><div class="line">	      	</div><div class="line"><span class="comment">//	      	if(window.plus) &#123;</span></div><div class="line"><span class="comment">//	      		alert("准备好了");</span></div><div class="line"><span class="comment">//	      		plusReady();</span></div><div class="line"><span class="comment">//	      	&#125; else &#123;</span></div><div class="line"><span class="comment">//	      		alert("未准备");</span></div><div class="line">	      		<span class="built_in">document</span>.addEventListener(<span class="string">'plusready'</span>, plusReady, <span class="literal">false</span>);</div><div class="line"><span class="comment">//	      	&#125;</span></div><div class="line">	      	</div><div class="line">	      	<span class="comment">// 返回回来要执行的方法</span></div><div class="line">	      	<span class="function"><span class="keyword">function</span> <span class="title">backRes</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">	      		<span class="keyword">var</span> val = e.detail.inputVal;</div><div class="line">	      		$(<span class="string">'.a1 font'</span>)[<span class="number">0</span>].innerHTML = val;</div><div class="line">	      	&#125;</div><div class="line">	      	</div><div class="line">	      	<span class="comment">// 自定义窗体事件 doit要和b页面定义的事件一致</span></div><div class="line">	      	<span class="built_in">window</span>.addEventListener(<span class="string">'doit'</span>, backRes);</div><div class="line">	      	</div><div class="line">		&#125;)(mui);</div><div class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">style</span>=<span class="string">"padding: 15px;line-height: 1.7rem;"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"jump"</span>&gt;</span>跳转到B页面<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"a1"</span>&gt;</span>返回传参为----<span class="tag">&lt;<span class="name">font</span> <span class="attr">style</span>=<span class="string">"font-size: 20px;color: #2AC845;"</span>&gt;</span><span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"font-size: 50px;text-align: center;display: block;margin: 50px 0 0 0;"</span>&gt;</span>a.html页面<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p><strong>b.html</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!doctype html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"css/mui.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> /&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line">	<span class="tag">&lt;<span class="name">body</span> <span class="attr">style</span>=<span class="string">"padding: 15px;line-height: 1.7rem;"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"text"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:void(0)"</span> <span class="attr">class</span>=<span class="string">"jump"</span>&gt;</span>返回<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"font-size: 50px;text-align: center;display: block;margin: 50px 0 0 0;"</span>&gt;</span>b.html页面<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/mui.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="javascript"></span></div><div class="line">			mui.init();</div><div class="line">			(<span class="function"><span class="keyword">function</span>(<span class="params">$</span>) </span>&#123;</div><div class="line">				<span class="keyword">if</span>(<span class="built_in">window</span>.plus) &#123;</div><div class="line">					plusReady();</div><div class="line">				&#125; <span class="keyword">else</span> &#123;</div><div class="line">					<span class="built_in">document</span>.addEventListener(<span class="string">'plusready'</span>, plusReady, <span class="literal">false</span>);</div><div class="line">				&#125;</div><div class="line">				<span class="function"><span class="keyword">function</span> <span class="title">plusReady</span>(<span class="params"></span>) </span>&#123;</div><div class="line">					mui(<span class="string">'body'</span>).on(<span class="string">'tap'</span>, <span class="string">'.jump'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">						<span class="keyword">var</span> view = plus.webview.getWebviewById(<span class="string">'HBuilder'</span>);</div><div class="line">						<span class="comment">// 注意HBuilder是上个页面的ID你自己要替换掉</span></div><div class="line">						mui.fire(view, <span class="string">'doit'</span>, &#123;</div><div class="line">							<span class="attr">inputVal</span>: $(<span class="string">'#text'</span>)[<span class="number">0</span>].value</div><div class="line">						&#125;);</div><div class="line">						mui.back();</div><div class="line">					&#125;);</div><div class="line">				&#125;</div><div class="line">			&#125;)(mui);</div><div class="line">		<span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;从a页面跳转到b页面，从b页面返回到a页面时向a页面传递一个参数，a页面接收到参数后做出响应&lt;br&gt;&lt;strong&gt;a.html&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;js/mui.min.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;css/mui.min.css&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      	mui.init();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      	(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;$&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	      	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;plusReady&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	      		mui(&lt;span class=&quot;string&quot;&gt;&#39;body&#39;&lt;/span&gt;).on(&lt;span class=&quot;string&quot;&gt;&#39;tap&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;.jump&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	      			mui.openWindow(&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	      				&lt;span class=&quot;attr&quot;&gt;url&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;b.html&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	      				&lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;b&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	      			&amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	      		&amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	      	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	      	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//	      	if(window.plus) &amp;#123;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//	      		alert(&quot;准备好了&quot;);&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//	      		plusReady();&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//	      	&amp;#125; else &amp;#123;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//	      		alert(&quot;未准备&quot;);&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	      		&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;plusready&#39;&lt;/span&gt;, plusReady, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//	      	&amp;#125;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	      	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	      	&lt;span class=&quot;comment&quot;&gt;// 返回回来要执行的方法&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	      	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;backRes&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	      		&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; val = e.detail.inputVal;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	      		$(&lt;span class=&quot;string&quot;&gt;&#39;.a1 font&#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].innerHTML = val;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	      	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	      	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	      	&lt;span class=&quot;comment&quot;&gt;// 自定义窗体事件 doit要和b页面定义的事件一致&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	      	&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;doit&#39;&lt;/span&gt;, backRes);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	      	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;)(mui);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;padding: 15px;line-height: 1.7rem;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;jump&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;跳转到B页面&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;a1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;返回传参为----&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;font&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;font-size: 20px;color: #2AC845;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;font&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;font-size: 50px;text-align: center;display: block;margin: 50px 0 0 0;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;a.html页面&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="MUI" scheme="http://www.hongye567.top/tags/MUI/"/>
    
  </entry>
  
  <entry>
    <title>利用hexo和github搭建博客（一）</title>
    <link href="http://www.hongye567.top/2016/12/16/%E5%88%A9%E7%94%A8hexo%E5%92%8Cgithub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://www.hongye567.top/2016/12/16/利用hexo和github搭建博客（一）/</id>
    <published>2016-12-16T08:14:25.000Z</published>
    <updated>2017-05-09T05:10:10.777Z</updated>
    
    <content type="html"><![CDATA[<p>在搜素文章时无意间发现一篇很漂亮的博客，一看时个人博客，自己也就想创建一个属于自己的博客，初步完成后就写下此文章便于日后查询。</p>
<p>本文是利用hexo在GitHub上建立的静态博客。<br>主要有三个步骤：</p>
<blockquote>
<ol>
<li>下载和安装所需软件</li>
<li>搭建本地静态博客</li>
<li>将本地博客同步到GitHub上</li>
<li>购买设置专属域名（可选）</li>
</ol>
</blockquote>
<h2 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h2><blockquote>
<ol>
<li><a href="https://nodejs.org/" target="_blank" rel="external">node.js</a></li>
<li><a href="https://git-scm.com/" target="_blank" rel="external">git</a></li>
<li>hexo</li>
</ol>
</blockquote>
<p>node.js 和 git 我就不多说了，自己在官网按着官方指示一步一步下载安装。我主要来说明下hexo的安装。<br>node.js 和 git 安装完成后，新建一个博客目录，在目录下使用 <code>git bash here</code> （可用命令行）执行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install -g hexo</div></pre></td></tr></table></figure></p>
<p>根据网络情况下载，等待安装完成</p>
<a id="more"></a>
<h2 id="搭建本地博客"><a href="#搭建本地博客" class="headerlink" title="搭建本地博客"></a>搭建本地博客</h2><p>cd 到本地博客路径，初始化<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo init</div></pre></td></tr></table></figure></p>
<p>安装依赖包<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install</div></pre></td></tr></table></figure></p>
<p>重启后再在博客目录下,生成必要文件和部署<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div><div class="line">$ hexo deploy</div></pre></td></tr></table></figure></p>
<p>启动 hexo，在本地预览<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure></p>
<p>在浏览器输入 <a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000</a> 预览。若正常显示，则本地博客初始化成功</p>
<h2 id="同步到-GitHub"><a href="#同步到-GitHub" class="headerlink" title="同步到 GitHub"></a>同步到 GitHub</h2><p>登录 <a href="https://github.com/" target="_blank" rel="external">GitHub</a>，没有账号的 Sign up（注册）一个，已有账号的直接登录 Sign in（登录）<br>登陆后点击“+”选择“New repository”</p>
<blockquote>
<ul>
<li>Repository name：指定格式：’GitHub用户名’.github.io</li>
<li>Description：可选</li>
<li>Public：必须公开</li>
</ul>
</blockquote>
<p>在本地博客目录下有一个<code>_config.yml</code>配置文件，使用编辑器打开，修改<code>Deployment</code>部分：<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Deployment</span></div><div class="line"><span class="comment">## Docs: http://hexo.io/docs/deployment.html</span></div><div class="line"><span class="attr">deploy:</span></div><div class="line"><span class="attr">  type:</span> github</div><div class="line"><span class="attr">  repository:</span> https://github.com/voidking/voidking.github.io.git</div><div class="line"><span class="attr">  branch:</span> master</div></pre></td></tr></table></figure></p>
<p><strong>注意：冒号后面必须跟一个空格，不然会出错</strong><br>再在博客目录下执行如下命令同步到GitHub<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div><div class="line">$ hexo deploy</div></pre></td></tr></table></figure></p>
<p>若报错 <code>error deployer not found:github</code> 可能是 hexo 更新问题<br>解决方案：将 <code>github</code> 改为 <code>git</code>、将 <code>https</code> 改为 <code>http</code> 后重试</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Deployment</span></div><div class="line"><span class="comment">## Docs: http://hexo.io/docs/deployment.html</span></div><div class="line"><span class="attr">deploy:</span></div><div class="line"><span class="attr">  type:</span> git</div><div class="line"><span class="attr">  repository:</span> http://github.com/voidking/voidking.github.io.git</div><div class="line"><span class="attr">  branch:</span> master</div></pre></td></tr></table></figure>
<p>若还是报错，先执行如下指令后重试<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-deployer-git --save</div></pre></td></tr></table></figure></p>
<p>在浏览器访问<a href="https://chengjunx.github.io/" target="_blank" rel="external">https://‘GitHub用户名’.github.io</a>，若正常显示，则博客已同步到GitHub</p>
<p>至此静态博客就初步搭建完成了！！！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在搜素文章时无意间发现一篇很漂亮的博客，一看时个人博客，自己也就想创建一个属于自己的博客，初步完成后就写下此文章便于日后查询。&lt;/p&gt;
&lt;p&gt;本文是利用hexo在GitHub上建立的静态博客。&lt;br&gt;主要有三个步骤：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;下载和安装所需软件&lt;/li&gt;
&lt;li&gt;搭建本地静态博客&lt;/li&gt;
&lt;li&gt;将本地博客同步到GitHub上&lt;/li&gt;
&lt;li&gt;购买设置专属域名（可选）&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;搭建环境&quot;&gt;&lt;a href=&quot;#搭建环境&quot; class=&quot;headerlink&quot; title=&quot;搭建环境&quot;&gt;&lt;/a&gt;搭建环境&lt;/h2&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/&quot;&gt;node.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://git-scm.com/&quot;&gt;git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;hexo&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;node.js 和 git 我就不多说了，自己在官网按着官方指示一步一步下载安装。我主要来说明下hexo的安装。&lt;br&gt;node.js 和 git 安装完成后，新建一个博客目录，在目录下使用 &lt;code&gt;git bash here&lt;/code&gt; （可用命令行）执行&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ npm install -g hexo&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;根据网络情况下载，等待安装完成&lt;/p&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="http://www.hongye567.top/tags/hexo/"/>
    
      <category term="github" scheme="http://www.hongye567.top/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://www.hongye567.top/2016/11/05/hello-world/"/>
    <id>http://www.hongye567.top/2016/11/05/hello-world/</id>
    <published>2016-11-05T01:04:40.621Z</published>
    <updated>2017-05-09T01:47:59.960Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
