{"title":"Hexo 在 GitHub 和 Coding 同时发布","slug":"Hexo-在-GitHub-和-Coding-同时发布","date":"2017-03-04T13:08:58.000Z","updated":"2019-11-06T14:41:48.846Z","comments":true,"path":"api/articles/Hexo-在-GitHub-和-Coding-同时发布.json","excerpt":"多平台发布在 GitHub 和 Coding 上都有博客，分开一一发布比较麻烦，其实 Hexo 是支持在多个平台发布的。<br>修改 Hexo 主目录下的 _config.yml 配置文件即可1<br>2<br>3<br>4<br>5<br>6<br>7<br>deploy:<br>  - type: git<br>    repository: https://github.com/Hongye567/Hongye567.github.io.git<br>    branch: master<br>  - type: git<br>    repository: https://git.coding.net/Honye/Honye.git<br>    branch: master<br>","covers":null,"content":"<h3 id=\"多平台发布\"><a href=\"#多平台发布\" class=\"headerlink\" title=\"多平台发布\"></a>多平台发布</h3><p>在 GitHub 和 Coding 上都有博客，分开一一发布比较麻烦，其实 Hexo 是支持在多个平台发布的。<br>修改 Hexo 主目录下的 _config.yml 配置文件即可</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">    <span class=\"attr\">repository:</span> <span class=\"string\">https://github.com/Hongye567/Hongye567.github.io.git</span></span><br><span class=\"line\">    <span class=\"attr\">branch:</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">    <span class=\"attr\">repository:</span> <span class=\"string\">https://git.coding.net/Honye/Honye.git</span></span><br><span class=\"line\">    <span class=\"attr\">branch:</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<h3 id=\"免输入密码\"><a href=\"#免输入密码\" class=\"headerlink\" title=\"免输入密码\"></a>免输入密码</h3><p>Hexo 每次提交时都要求输入用户名和密码，尤其在多平台发布时需要多次输入用户名和密码很是麻烦。<br>要求输入密码的原因是我们的仓库地址用的是 HTTPS 不是 SSH。</p>\n<p><strong>1. 首先生成 SSH 密钥</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git config --global user.name <span class=\"string\">\"yourname\"</span>  // 配置 git 用户名</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git config --global user.email <span class=\"string\">\"youremail@email.com\"</span>  // 配置 git 邮箱</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> <span class=\"built_in\">cd</span> ~/.ssh  // 查看是否已有.ssh文件夹，若有可备份删除</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> ssh-keygen -t rsa -C <span class=\"string\">\"youremail@email.com\"</span>  // 生成 SSH 密钥</span></span><br></pre></td></tr></table></figure>\n\n<p>生成密钥时会提示选择密钥保存路径，直接回车默认路径即可。<br>会提示输入密码和确认密码，直接回车代表不设置密码。</p>\n<p><strong>2. 部署公钥</strong><br>在 GitHub 和 Coding 在部署公钥操作基本一样，我不一一赘述，仅以 GitHub 为例。<br>打开 GitHub 项目，选择上方菜单 Settings，接着选择左侧菜单 Deploy keys，接着 Add deploy key，打开前面密钥所在文件夹，将 id_rsa.pub 文件中的内容粘贴在 GitHub 即可。</p>\n<p><strong>3. Hexo 提交</strong><br>修改 Hexo 主目录下 _config.yml 配置文件中的参数</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">    <span class=\"attr\">repository:</span> <span class=\"string\">git@github.com:Hongye567/Hongye567.github.io.git</span></span><br><span class=\"line\">    <span class=\"attr\">branch:</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">    <span class=\"attr\">repository:</span> <span class=\"string\">git@git.coding.net:Honye/Honye.git</span></span><br><span class=\"line\">    <span class=\"attr\">branch:</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n\n<p>现在提交就可以不用输入密码了。提交的时候可能会报 authenticity 可靠性问题，直接输入 yes 忽略即可。</p>\n","more":"<h3 id=\"免输入密码\"><a href=\"#免输入密码\" class=\"headerlink\" title=\"免输入密码\"></a>免输入密码</h3><p>Hexo 每次提交时都要求输入用户名和密码，尤其在多平台发布时需要多次输入用户名和密码很是麻烦。<br>要求输入密码的原因是我们的仓库地址用的是 HTTPS 不是 SSH。</p>\n<p><strong>1. 首先生成 SSH 密钥</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git config --global user.name <span class=\"string\">\"yourname\"</span>  // 配置 git 用户名</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git config --global user.email <span class=\"string\">\"youremail@email.com\"</span>  // 配置 git 邮箱</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> <span class=\"built_in\">cd</span> ~/.ssh  // 查看是否已有.ssh文件夹，若有可备份删除</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> ssh-keygen -t rsa -C <span class=\"string\">\"youremail@email.com\"</span>  // 生成 SSH 密钥</span></span><br></pre></td></tr></table></figure>\n\n<p>生成密钥时会提示选择密钥保存路径，直接回车默认路径即可。<br>会提示输入密码和确认密码，直接回车代表不设置密码。</p>\n<p><strong>2. 部署公钥</strong><br>在 GitHub 和 Coding 在部署公钥操作基本一样，我不一一赘述，仅以 GitHub 为例。<br>打开 GitHub 项目，选择上方菜单 Settings，接着选择左侧菜单 Deploy keys，接着 Add deploy key，打开前面密钥所在文件夹，将 id_rsa.pub 文件中的内容粘贴在 GitHub 即可。</p>\n<p><strong>3. Hexo 提交</strong><br>修改 Hexo 主目录下 _config.yml 配置文件中的参数</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">    <span class=\"attr\">repository:</span> <span class=\"string\">git@github.com:Hongye567/Hongye567.github.io.git</span></span><br><span class=\"line\">    <span class=\"attr\">branch:</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">    <span class=\"attr\">repository:</span> <span class=\"string\">git@git.coding.net:Honye/Honye.git</span></span><br><span class=\"line\">    <span class=\"attr\">branch:</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n\n<p>现在提交就可以不用输入密码了。提交的时候可能会报 authenticity 可靠性问题，直接输入 yes 忽略即可。</p>","categories":[],"tags":[{"name":"Hexo","path":"api/tags/Hexo.json"},{"name":"GitHub","path":"api/tags/GitHub.json"},{"name":"Coding","path":"api/tags/Coding.json"}]}